5dbc25f4c170f112472831947e1a25f1


'use strict';

var _uniqueId = 1;var AnimatedValueXY = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedValueXY, _AnimatedWithChildren);

  function AnimatedValueXY(valueIn) {
    babelHelpers.classCallCheck(this, AnimatedValueXY);var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedValueXY.__proto__ || Object.getPrototypeOf(AnimatedValueXY)).call(this));

    var value = valueIn || { x: 0, y: 0 };
    if (typeof value.x === 'number' && typeof value.y === 'number') {
      _this.x = new (require('./AnimatedValue'))(value.x);
      _this.y = new (require('./AnimatedValue'))(value.y);
    } else {
      require('fbjs/lib/invariant')(value.x instanceof require('./AnimatedValue') && value.y instanceof require('./AnimatedValue'), 'AnimatedValueXY must be initialized with an object of numbers or ' + 'AnimatedValues.');

      _this.x = value.x;
      _this.y = value.y;
    }
    _this._listeners = {};return _this;
  }babelHelpers.createClass(AnimatedValueXY, [{ key: 'setValue', value: function setValue(value) {
      this.x.setValue(value.x);
      this.y.setValue(value.y);
    } }, { key: 'setOffset', value: function setOffset(offset) {
      this.x.setOffset(offset.x);
      this.y.setOffset(offset.y);
    } }, { key: 'flattenOffset', value: function flattenOffset() {
      this.x.flattenOffset();
      this.y.flattenOffset();
    } }, { key: 'extractOffset', value: function extractOffset() {
      this.x.extractOffset();
      this.y.extractOffset();
    } }, { key: '__getValue', value: function __getValue() {
      return {
        x: this.x.__getValue(),
        y: this.y.__getValue() };
    } }, { key: 'resetAnimation', value: function resetAnimation(callback) {
      this.x.resetAnimation();
      this.y.resetAnimation();
      callback && callback(this.__getValue());
    } }, { key: 'stopAnimation', value: function stopAnimation(callback) {
      this.x.stopAnimation();
      this.y.stopAnimation();
      callback && callback(this.__getValue());
    } }, { key: 'addListener', value: function addListener(callback) {
      var _this2 = this;
      var id = String(_uniqueId++);
      var jointCallback = function jointCallback(_ref) {
        var number = _ref.value;
        callback(_this2.__getValue());
      };
      this._listeners[id] = {
        x: this.x.addListener(jointCallback),
        y: this.y.addListener(jointCallback) };

      return id;
    } }, { key: 'removeListener', value: function removeListener(id) {
      this.x.removeListener(this._listeners[id].x);
      this.y.removeListener(this._listeners[id].y);
      delete this._listeners[id];
    } }, { key: 'removeAllListeners', value: function removeAllListeners() {
      this.x.removeAllListeners();
      this.y.removeAllListeners();
      this._listeners = {};
    } }, { key: 'getLayout', value: function getLayout() {
      return {
        left: this.x,
        top: this.y };
    } }, { key: 'getTranslateTransform', value: function getTranslateTransform() {
      return [{ translateX: this.x }, { translateY: this.y }];
    } }]);return AnimatedValueXY;
}(require('./AnimatedWithChildren'));

module.exports = AnimatedValueXY;