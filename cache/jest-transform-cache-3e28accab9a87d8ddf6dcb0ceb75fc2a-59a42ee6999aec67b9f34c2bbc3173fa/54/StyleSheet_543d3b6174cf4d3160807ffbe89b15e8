5f6edf893166879a8c1490a1fbef098c


'use strict';

var hairlineWidth = require('PixelRatio').roundToNearestPixel(0.4);
if (hairlineWidth === 0) {
  hairlineWidth = 1 / require('PixelRatio').get();
}

var absoluteFillObject = {
  position: 'absolute',
  left: 0,
  right: 0,
  top: 0,
  bottom: 0 };

var absoluteFill = require('ReactNativePropRegistry').register(absoluteFillObject);

module.exports = {

  hairlineWidth: hairlineWidth,

  absoluteFill: absoluteFill,

  absoluteFillObject: absoluteFillObject,

  compose: function compose(style1, style2) {
    if (style1 != null && style2 != null) {
      return [style1, style2];
    } else {
      return style1 != null ? style1 : style2;
    }
  },

  flatten: require('flattenStyle'),

  setStyleAttributePreprocessor: function setStyleAttributePreprocessor(property, process) {
    var value = void 0;

    if (typeof require('ReactNativeStyleAttributes')[property] === 'string') {
      value = {};
    } else if (typeof require('ReactNativeStyleAttributes')[property] === 'object') {
      value = require('ReactNativeStyleAttributes')[property];
    } else {
      console.error(property + ' is not a valid style attribute');
      return;
    }

    if (__DEV__ && typeof value.process === 'function') {
      console.warn('Overwriting ' + property + ' style attribute preprocessor');
    }

    require('ReactNativeStyleAttributes')[property] = babelHelpers.extends({}, value, { process: process });
  },

  create: function create(obj) {
    var result = {};
    for (var key in obj) {
      require('StyleSheetValidation').validateStyle(key, obj);
      result[key] = obj[key] && require('ReactNativePropRegistry').register(obj[key]);
    }
    return result;
  } };