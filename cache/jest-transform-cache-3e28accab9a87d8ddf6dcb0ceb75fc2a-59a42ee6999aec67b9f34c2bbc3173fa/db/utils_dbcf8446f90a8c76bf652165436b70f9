ac97d95027db8af683b7c39c1c4e90a0
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.extractTypeName = exports.applyMap = exports.compact = exports.isEnzymeWrapper = exports.isCheerioWrapper = exports.isReactWrapper = exports.isShallowWrapper = undefined;

var _filter2 = _interopRequireDefault(require('lodash/filter'));

var _isNil2 = _interopRequireDefault(require('lodash/isNil'));

var _ShallowWrapper2 = _interopRequireDefault(require('enzyme/build/ShallowWrapper'));

var _ReactWrapper2 = _interopRequireDefault(require('enzyme/build/ReactWrapper'));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var SHALLOW_WRAPPER_NAME = _ShallowWrapper2.default.name;
var REACT_WRAPPER_NAME = _ReactWrapper2.default.name;

var isShallowWrapper = exports.isShallowWrapper = function isShallowWrapper(wrapper) {
  return !(0, _isNil2.default)(wrapper) && !(0, _isNil2.default)(wrapper.constructor) && wrapper.constructor.name === SHALLOW_WRAPPER_NAME;
};

var isReactWrapper = exports.isReactWrapper = function isReactWrapper(wrapper) {
  return !(0, _isNil2.default)(wrapper) && !(0, _isNil2.default)(wrapper.constructor) && wrapper.constructor.name === REACT_WRAPPER_NAME;
};

var isCheerioWrapper = exports.isCheerioWrapper = function isCheerioWrapper(wrapper) {
  return !(0, _isNil2.default)(wrapper) && !(0, _isNil2.default)(wrapper.cheerio);
};

var isEnzymeWrapper = exports.isEnzymeWrapper = function isEnzymeWrapper(wrapper) {
  return isShallowWrapper(wrapper) || isReactWrapper(wrapper) || isCheerioWrapper(wrapper);
};

var compact = exports.compact = function compact(array) {
  return (0, _filter2.default)(array, function (item) {
    return !(0, _isNil2.default)(item) && item !== '';
  });
};

var applyMap = exports.applyMap = function applyMap(json, options) {
  if (typeof options.map === 'function') {
    return options.map(json);
  }
  return json;
};

var extractTypeName = exports.extractTypeName = function extractTypeName(node) {
  var name = (0, require('enzyme/build/Debug').typeName)(node);
  if (name === (typeof Symbol === 'function' ? Symbol.for : '@@for')('react.fragment')) {
    return 'React.Fragment';
  }

  return name;
};