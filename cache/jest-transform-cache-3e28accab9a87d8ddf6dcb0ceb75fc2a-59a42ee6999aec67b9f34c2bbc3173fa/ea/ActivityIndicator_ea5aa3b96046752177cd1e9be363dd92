f1c65e369f0daec3678c74c3ff81a4b2


'use strict';
var _jsxFileName = '/Volumes/Work/ReactNative/stint-mobile-app-dev/node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicator.js';

var RCTActivityIndicator = void 0;

var GRAY = '#999999';

var ActivityIndicator = require('create-react-class')({
  displayName: 'ActivityIndicator',
  mixins: [require('NativeMethodsMixin')],

  propTypes: babelHelpers.extends({}, require('ViewPropTypes'), {

    animating: require('prop-types').bool,

    color: require('ColorPropType'),

    size: require('prop-types').oneOfType([require('prop-types').oneOf(['small', 'large']), require('prop-types').number]),

    hidesWhenStopped: require('prop-types').bool }),

  getDefaultProps: function getDefaultProps() {
    return {
      animating: true,
      color: require('Platform').OS === 'ios' ? GRAY : undefined,
      hidesWhenStopped: true,
      size: 'small' };
  },

  render: function render() {
    var _props = this.props,
        onLayout = _props.onLayout,
        style = _props.style,
        props = babelHelpers.objectWithoutProperties(_props, ['onLayout', 'style']);
    var sizeStyle = void 0;

    switch (props.size) {
      case 'small':
        sizeStyle = styles.sizeSmall;
        break;
      case 'large':
        sizeStyle = styles.sizeLarge;
        break;
      default:
        sizeStyle = { height: props.size, width: props.size };
        break;}

    var nativeProps = babelHelpers.extends({}, props, {
      style: sizeStyle,
      styleAttr: 'Normal',
      indeterminate: true });

    return require('React').createElement(require('View'), { onLayout: onLayout, style: [styles.container, style], __source: { fileName: _jsxFileName, lineNumber: 113 } }, require('Platform').OS === 'ios' ? require('React').createElement(RCTActivityIndicator, babelHelpers.extends({}, nativeProps, { __source: { fileName: _jsxFileName, lineNumber: 115 } })) : require('React').createElement(require('ProgressBarAndroid'), babelHelpers.extends({}, nativeProps, { __source: { fileName: _jsxFileName, lineNumber: 117 } })));
  } });

if (require('Platform').OS === 'ios') {
  RCTActivityIndicator = require('requireNativeComponent')('RCTActivityIndicatorView', ActivityIndicator, { nativeOnly: { activityIndicatorViewStyle: true } });
}

var styles = require('StyleSheet').create({
  container: {
    alignItems: 'center',
    justifyContent: 'center' },

  sizeSmall: {
    width: 20,
    height: 20 },

  sizeLarge: {
    width: 36,
    height: 36 } });

module.exports = ActivityIndicator;