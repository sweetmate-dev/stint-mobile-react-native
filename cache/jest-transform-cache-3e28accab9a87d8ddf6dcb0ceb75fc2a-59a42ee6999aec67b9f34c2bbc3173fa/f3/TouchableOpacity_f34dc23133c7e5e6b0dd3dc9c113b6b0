b7d23d6c6a0d3187655c776beee87504


'use strict';
var _jsxFileName = '/Volumes/Work/ReactNative/stint-mobile-app-dev/node_modules/react-native/Libraries/Components/Touchable/TouchableOpacity.js';

var PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var TouchableOpacity = require('create-react-class')({
  displayName: 'TouchableOpacity',
  mixins: [require('react-timer-mixin'), require('Touchable').Mixin, require('NativeMethodsMixin')],

  propTypes: babelHelpers.extends({}, require('TouchableWithoutFeedback').propTypes, {

    activeOpacity: require('prop-types').number,

    hasTVPreferredFocus: require('prop-types').bool,

    tvParallaxProperties: require('prop-types').object }),

  getDefaultProps: function getDefaultProps() {
    return {
      activeOpacity: 0.2 };
  },

  getInitialState: function getInitialState() {
    return babelHelpers.extends({}, this.touchableGetInitialState(), {
      anim: new (require('Animated').Value)(this._getChildStyleOpacityWithDefault()) });
  },

  componentDidMount: function componentDidMount() {
    require('ensurePositiveDelayProps')(this.props);
  },

  UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {
    require('ensurePositiveDelayProps')(nextProps);
  },

  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
    if (this.props.disabled !== prevProps.disabled) {
      this._opacityInactive(250);
    }
  },

  setOpacityTo: function setOpacityTo(value, duration) {
    require('Animated').timing(this.state.anim, {
      toValue: value,
      duration: duration,
      easing: require('Easing').inOut(require('Easing').quad),
      useNativeDriver: true }).start();
  },

  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
    if (e.dispatchConfig.registrationName === 'onResponderGrant') {
      this._opacityActive(0);
    } else {
      this._opacityActive(150);
    }
    this.props.onPressIn && this.props.onPressIn(e);
  },

  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
    this._opacityInactive(250);
    this.props.onPressOut && this.props.onPressOut(e);
  },

  touchableHandlePress: function touchableHandlePress(e) {
    this.props.onPress && this.props.onPress(e);
  },

  touchableHandleLongPress: function touchableHandleLongPress(e) {
    this.props.onLongPress && this.props.onLongPress(e);
  },

  touchableGetPressRectOffset: function touchableGetPressRectOffset() {
    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
  },

  touchableGetHitSlop: function touchableGetHitSlop() {
    return this.props.hitSlop;
  },

  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
    return this.props.delayPressIn || 0;
  },

  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
    return this.props.delayLongPress === 0 ? 0 : this.props.delayLongPress || 500;
  },

  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
    return this.props.delayPressOut;
  },

  _opacityActive: function _opacityActive(duration) {
    this.setOpacityTo(this.props.activeOpacity, duration);
  },

  _opacityInactive: function _opacityInactive(duration) {
    this.setOpacityTo(this._getChildStyleOpacityWithDefault(), duration);
  },

  _getChildStyleOpacityWithDefault: function _getChildStyleOpacityWithDefault() {
    var childStyle = require('flattenStyle')(this.props.style) || {};
    return childStyle.opacity == undefined ? 1 : childStyle.opacity;
  },

  render: function render() {
    return require('React').createElement(require('Animated').View, {
      accessible: this.props.accessible !== false,
      accessibilityLabel: this.props.accessibilityLabel,
      accessibilityComponentType: this.props.accessibilityComponentType,
      accessibilityTraits: this.props.accessibilityTraits,
      style: [this.props.style, { opacity: this.state.anim }],
      nativeID: this.props.nativeID,
      testID: this.props.testID,
      onLayout: this.props.onLayout,
      isTVSelectable: true,
      hasTVPreferredFocus: this.props.hasTVPreferredFocus,
      tvParallaxProperties: this.props.tvParallaxProperties,
      hitSlop: this.props.hitSlop,
      onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,
      onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,
      onResponderGrant: this.touchableHandleResponderGrant,
      onResponderMove: this.touchableHandleResponderMove,
      onResponderRelease: this.touchableHandleResponderRelease,
      onResponderTerminate: this.touchableHandleResponderTerminate, __source: { fileName: _jsxFileName, lineNumber: 247 } }, this.props.children, require('Touchable').renderDebugView({ color: 'cyan', hitSlop: this.props.hitSlop }));
  } });

module.exports = TouchableOpacity;