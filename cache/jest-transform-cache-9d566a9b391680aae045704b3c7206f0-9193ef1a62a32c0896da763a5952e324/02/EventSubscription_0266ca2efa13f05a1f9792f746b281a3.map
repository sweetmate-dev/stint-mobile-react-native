{"version":3,"sources":["EventSubscription.js"],"names":["EventSubscription","subscriber","removeSubscription","module","exports"],"mappings":";;;;;;;;;;AAUA,a;;;;;;;;AAQMA,iB;;;;;;;;;AASJ,6BAAYC,UAAZ,EAAiD;AAC/C,SAAKA,UAAL,GAAkBA,UAAlB;AACD,G;;;;;AAKQ;AACP,WAAKA,UAAL,CAAgBC,kBAAhB,CAAmC,IAAnC;AACD,K;;;AAGHC,OAAOC,OAAP,GAAiBJ,iBAAjB","file":"EventSubscription.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type EventSubscriptionVendor from 'EventSubscriptionVendor';\n\n/**\n * EventSubscription represents a subscription to a particular event. It can\n * remove its own subscription.\n */\nclass EventSubscription {\n  eventType: string;\n  key: number;\n  subscriber: EventSubscriptionVendor;\n\n  /**\n   * @param {EventSubscriptionVendor} subscriber the subscriber that controls\n   *   this subscription.\n   */\n  constructor(subscriber: EventSubscriptionVendor) {\n    this.subscriber = subscriber;\n  }\n\n  /**\n   * Removes this subscription from the subscriber that controls it.\n   */\n  remove() {\n    this.subscriber.removeSubscription(this);\n  }\n}\n\nmodule.exports = EventSubscription;\n"]}