c4951d6e18914b3d9eee23e836a47456









'use strict';

var mockNativeFunction = function mockNativeFunction(methodName) {
  var warned = false;
  return function () {
    if (warned) {
      return;
    }
    warned = true;
    console.warn(
    'Calling .' +
    methodName +
    '() in the test renderer environment is not supported. Instead, mock ' +
    'out your components that use findNodeHandle with replacements that ' +
    "don't rely on the native environment.");

  };
};

var MockNativeMethods = {
  measure: mockNativeFunction('measure'),
  measureInWindow: mockNativeFunction('measureInWindow'),
  measureLayout: mockNativeFunction('measureLayout'),
  setNativeProps: mockNativeFunction('setNativeProps'),
  focus: mockNativeFunction('focus'),
  blur: mockNativeFunction('blur') };


module.exports = MockNativeMethods;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1vY2tOYXRpdmVNZXRob2RzLmpzIl0sIm5hbWVzIjpbIm1vY2tOYXRpdmVGdW5jdGlvbiIsIndhcm5lZCIsImNvbnNvbGUiLCJ3YXJuIiwibWV0aG9kTmFtZSIsIk1vY2tOYXRpdmVNZXRob2RzIiwibWVhc3VyZSIsIm1lYXN1cmVJbldpbmRvdyIsIm1lYXN1cmVMYXlvdXQiLCJzZXROYXRpdmVQcm9wcyIsImZvY3VzIiwiYmx1ciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQVNBOztBQUVBLElBQU1BLHFCQUFxQixTQUFyQkEsa0JBQXFCLGFBQWM7QUFDdkMsTUFBSUMsU0FBUyxLQUFiO0FBQ0EsU0FBTyxZQUFXO0FBQ2hCLFFBQUlBLE1BQUosRUFBWTtBQUNWO0FBQ0Q7QUFDREEsYUFBUyxJQUFUO0FBQ0FDLFlBQVFDLElBQVI7QUFDRTtBQUNFQyxjQURGO0FBRUUsMEVBRkY7QUFHRSx5RUFIRjtBQUlFLDJDQUxKOztBQU9ELEdBWkQ7QUFhRCxDQWZEOztBQWlCQSxJQUFNQyxvQkFBb0I7QUFDeEJDLFdBQVNOLG1CQUFtQixTQUFuQixDQURlO0FBRXhCTyxtQkFBaUJQLG1CQUFtQixpQkFBbkIsQ0FGTztBQUd4QlEsaUJBQWVSLG1CQUFtQixlQUFuQixDQUhTO0FBSXhCUyxrQkFBZ0JULG1CQUFtQixnQkFBbkIsQ0FKUTtBQUt4QlUsU0FBT1YsbUJBQW1CLE9BQW5CLENBTGlCO0FBTXhCVyxRQUFNWCxtQkFBbUIsTUFBbkIsQ0FOa0IsRUFBMUI7OztBQVNBWSxPQUFPQyxPQUFQLEdBQWlCUixpQkFBakIiLCJmaWxlIjoiTW9ja05hdGl2ZU1ldGhvZHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IG1vY2tOYXRpdmVGdW5jdGlvbiA9IG1ldGhvZE5hbWUgPT4ge1xuICBsZXQgd2FybmVkID0gZmFsc2U7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICBpZiAod2FybmVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHdhcm5lZCA9IHRydWU7XG4gICAgY29uc29sZS53YXJuKFxuICAgICAgJ0NhbGxpbmcgLicgK1xuICAgICAgICBtZXRob2ROYW1lICtcbiAgICAgICAgJygpIGluIHRoZSB0ZXN0IHJlbmRlcmVyIGVudmlyb25tZW50IGlzIG5vdCBzdXBwb3J0ZWQuIEluc3RlYWQsIG1vY2sgJyArXG4gICAgICAgICdvdXQgeW91ciBjb21wb25lbnRzIHRoYXQgdXNlIGZpbmROb2RlSGFuZGxlIHdpdGggcmVwbGFjZW1lbnRzIHRoYXQgJyArXG4gICAgICAgIFwiZG9uJ3QgcmVseSBvbiB0aGUgbmF0aXZlIGVudmlyb25tZW50LlwiLFxuICAgICk7XG4gIH07XG59O1xuXG5jb25zdCBNb2NrTmF0aXZlTWV0aG9kcyA9IHtcbiAgbWVhc3VyZTogbW9ja05hdGl2ZUZ1bmN0aW9uKCdtZWFzdXJlJyksXG4gIG1lYXN1cmVJbldpbmRvdzogbW9ja05hdGl2ZUZ1bmN0aW9uKCdtZWFzdXJlSW5XaW5kb3cnKSxcbiAgbWVhc3VyZUxheW91dDogbW9ja05hdGl2ZUZ1bmN0aW9uKCdtZWFzdXJlTGF5b3V0JyksXG4gIHNldE5hdGl2ZVByb3BzOiBtb2NrTmF0aXZlRnVuY3Rpb24oJ3NldE5hdGl2ZVByb3BzJyksXG4gIGZvY3VzOiBtb2NrTmF0aXZlRnVuY3Rpb24oJ2ZvY3VzJyksXG4gIGJsdXI6IG1vY2tOYXRpdmVGdW5jdGlvbignYmx1cicpLFxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBNb2NrTmF0aXZlTWV0aG9kcztcbiJdfQ==