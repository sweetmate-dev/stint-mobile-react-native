{"version":3,"sources":["LayoutAnimation.js"],"names":["PropTypes","require","UIManager","keyMirror","checkPropTypes","TypesEnum","spring","linear","easeInEaseOut","easeIn","easeOut","keyboard","Types","PropertiesEnum","opacity","scaleX","scaleY","scaleXY","Properties","animType","shape","duration","number","delay","springDamping","initialVelocity","type","oneOf","Object","keys","isRequired","property","configType","create","update","delete","checkConfig","config","location","name","configureNext","onAnimationDidEnd","__DEV__","configureNextLayoutAnimation","creationProp","Presets","LayoutAnimation","bind","module","exports"],"mappings":"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","file":"LayoutAnimation.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst PropTypes = require('prop-types');\nconst UIManager = require('UIManager');\n\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst keyMirror = require('fbjs/lib/keyMirror');\n\nconst {checkPropTypes} = PropTypes;\n\nconst TypesEnum = {\n  spring: true,\n  linear: true,\n  easeInEaseOut: true,\n  easeIn: true,\n  easeOut: true,\n  keyboard: true,\n};\nconst Types = keyMirror(TypesEnum);\n\nconst PropertiesEnum = {\n  opacity: true,\n  scaleX: true,\n  scaleY: true,\n  scaleXY: true,\n};\nconst Properties = keyMirror(PropertiesEnum);\n\nconst animType = PropTypes.shape({\n  duration: PropTypes.number,\n  delay: PropTypes.number,\n  springDamping: PropTypes.number,\n  initialVelocity: PropTypes.number,\n  type: PropTypes.oneOf(Object.keys(Types)).isRequired,\n  property: PropTypes.oneOf(\n    // Only applies to create/delete\n    Object.keys(Properties),\n  ),\n});\n\ntype Anim = {\n  duration?: number,\n  delay?: number,\n  springDamping?: number,\n  initialVelocity?: number,\n  type?: $Enum<typeof TypesEnum>,\n  property?: $Enum<typeof PropertiesEnum>,\n};\n\nconst configType = PropTypes.shape({\n  duration: PropTypes.number.isRequired,\n  create: animType,\n  update: animType,\n  delete: animType,\n});\n\ntype Config = {\n  duration: number,\n  create?: Anim,\n  update?: Anim,\n  delete?: Anim,\n};\n\nfunction checkConfig(config: Config, location: string, name: string) {\n  checkPropTypes({config: configType}, {config}, location, name);\n}\n\nfunction configureNext(config: Config, onAnimationDidEnd?: Function) {\n  if (__DEV__) {\n    checkConfig(config, 'config', 'LayoutAnimation.configureNext');\n  }\n  UIManager.configureNextLayoutAnimation(\n    config,\n    onAnimationDidEnd || function() {},\n    function() {\n      /* unused */\n    },\n  );\n}\n\nfunction create(duration: number, type, creationProp): Config {\n  return {\n    duration,\n    create: {\n      type,\n      property: creationProp,\n    },\n    update: {\n      type,\n    },\n    delete: {\n      type,\n      property: creationProp,\n    },\n  };\n}\n\nconst Presets = {\n  easeInEaseOut: create(300, Types.easeInEaseOut, Properties.opacity),\n  linear: create(500, Types.linear, Properties.opacity),\n  spring: {\n    duration: 700,\n    create: {\n      type: Types.linear,\n      property: Properties.opacity,\n    },\n    update: {\n      type: Types.spring,\n      springDamping: 0.4,\n    },\n    delete: {\n      type: Types.linear,\n      property: Properties.opacity,\n    },\n  },\n};\n\n/**\n * Automatically animates views to their new positions when the\n * next layout happens.\n *\n * A common way to use this API is to call it before calling `setState`.\n *\n * Note that in order to get this to work on **Android** you need to set the following flags via `UIManager`:\n *\n *     UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n */\nconst LayoutAnimation = {\n  /**\n   * Schedules an animation to happen on the next layout.\n   *\n   * @param config Specifies animation properties:\n   *\n   *   - `duration` in milliseconds\n   *   - `create`, config for animating in new views (see `Anim` type)\n   *   - `update`, config for animating views that have been updated\n   * (see `Anim` type)\n   *\n   * @param onAnimationDidEnd Called when the animation finished.\n   * Only supported on iOS.\n   * @param onError Called on error. Only supported on iOS.\n   */\n  configureNext,\n  /**\n   * Helper for creating a config for `configureNext`.\n   */\n  create,\n  Types,\n  Properties,\n  checkConfig,\n  Presets,\n  easeInEaseOut: configureNext.bind(null, Presets.easeInEaseOut),\n  linear: configureNext.bind(null, Presets.linear),\n  spring: configureNext.bind(null, Presets.spring),\n};\n\nmodule.exports = LayoutAnimation;\n"]}