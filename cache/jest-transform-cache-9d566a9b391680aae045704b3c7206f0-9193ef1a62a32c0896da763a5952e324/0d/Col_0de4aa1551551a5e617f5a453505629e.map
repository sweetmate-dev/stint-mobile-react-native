{"version":3,"sources":["Col.js"],"names":["ColumnNB","type","flexDirection","flex","props","size","style","width","defaultProps","nativeProps","_root","setNativeProps","onPress","prepareRootProps","component","children","Component"],"mappings":"AAAA,a;;AAEA,8B;AACA;AACA,qD;;;AAGqBA,Q;AACE;;AAEf,UAAIC,OAAO;AACVC,uBAAe,QADL;AAEVC,cAAO,KAAKC,KAAL,CAAWC,IAAZ,GAAoB,KAAKD,KAAL,CAAWC,IAA/B,GAAuC,KAAKD,KAAL,CAAWE,KAAX,IAAoB,KAAKF,KAAL,CAAWE,KAAX,CAAiBC,KAAtC,GAA+C,CAA/C,GAAmD,CAFrF,EAAX;;;AAKA,UAAIC,eAAe;AACfF,eAAOL,IADQ,EAAnB;;AAGA,aAAO,4BAAa,KAAKG,KAAlB,EAAyBI,YAAzB,CAAP;;AAEH,K;;AAEcC,e,EAAa;AAC1B,WAAKC,KAAL,CAAWC,cAAX,CAA0BF,WAA1B;AACD,K;;AAEM;AACP,UAAG,KAAKL,KAAL,CAAWQ,OAAd,EAAsB;AACpB;AACE,wCAAC,6BAAD,aAAkB,SAAS,KAAKR,KAAL,CAAWQ,OAAtC;AACI,iBAAKC,gBAAL,EADJ;AAEJ,0CAAC,iBAAD;AACE,qBAAK,gCAAa,OAAKH,KAAL,GAAaI,SAA1B,EADP;AAEM,mBAAKV,KAFX;AAGM,mBAAKS,gBAAL,EAHN;AAIE,mBAAKT,KAAL,CAAWW,QAJb,CAFI,CADF;;;AAUD,OAXD;AAYI;AACF;AACE,wCAAC,iBAAD;AACF,mBAAK,gCAAa,OAAKL,KAAL,GAAaI,SAA1B,EADH;AAEE,iBAAKV,KAFP;AAGE,iBAAKS,gBAAL,EAHF;AAIF,iBAAKT,KAAL,CAAWW,QAJT,CADF;;AAOD;AACF,K,uBAzCmCC,gB,oBAAjBhB,Q","file":"Col.js","sourcesContent":["'use strict';\n\nimport React, {Component} from 'react';\nimport {View, TouchableOpacity} from 'react-native';\nimport computeProps from '../Utils/computeProps';\n\n\nexport default class ColumnNB extends Component {\n    prepareRootProps() {\n\n        var type = {\n        \tflexDirection: 'column',\n        \tflex: (this.props.size) ? this.props.size : (this.props.style && this.props.style.width) ? 0 : 1,\n        }\n\n        var defaultProps = {\n            style: type\n        }\n        return computeProps(this.props, defaultProps);\n\n    }\n\n    setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n\n  render() {\n    if(this.props.onPress){\n      return(\n        <TouchableOpacity onPress={this.props.onPress}\n        {...this.prepareRootProps()}>\n    <View\n      ref={component => this._root = component}\n      {...this.props}\n      {...this.prepareRootProps()}\n    >{this.props.children}</View>\n      </TouchableOpacity>\n    );\n    }\n    else{\n      return(\n        <View\n      ref={component => this._root = component}\n      {...this.props}\n      {...this.prepareRootProps()}\n    >{this.props.children}</View>\n    );\n    }\n  }\n\n}\n"]}