{"version":3,"sources":["AnimatedTransform.js"],"names":["AnimatedNode","require","AnimatedWithChildren","NativeAnimatedHelper","AnimatedTransform","transforms","_transforms","forEach","key","transform","value","__makeNative","map","result","__getValue","__getAnimatedValue","__addChild","__removeChild","transConfigs","push","type","property","nodeTag","__getNativeTag","validateTransform","module","exports"],"mappings":"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","file":"AnimatedTransform.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst AnimatedNode = require('./AnimatedNode');\nconst AnimatedWithChildren = require('./AnimatedWithChildren');\nconst NativeAnimatedHelper = require('../NativeAnimatedHelper');\n\nclass AnimatedTransform extends AnimatedWithChildren {\n  _transforms: $ReadOnlyArray<Object>;\n\n  constructor(transforms: $ReadOnlyArray<Object>) {\n    super();\n    this._transforms = transforms;\n  }\n\n  __makeNative() {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__makeNative();\n        }\n      }\n    });\n    super.__makeNative();\n  }\n\n  __getValue(): $ReadOnlyArray<Object> {\n    return this._transforms.map(transform => {\n      const result = {};\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getValue();\n        } else {\n          result[key] = value;\n        }\n      }\n      return result;\n    });\n  }\n\n  __getAnimatedValue(): $ReadOnlyArray<Object> {\n    return this._transforms.map(transform => {\n      const result = {};\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getAnimatedValue();\n        } else {\n          // All transform components needed to recompose matrix\n          result[key] = value;\n        }\n      }\n      return result;\n    });\n  }\n\n  __attach(): void {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__addChild(this);\n        }\n      }\n    });\n  }\n\n  __detach(): void {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__removeChild(this);\n        }\n      }\n    });\n    super.__detach();\n  }\n\n  __getNativeConfig(): any {\n    const transConfigs = [];\n\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          transConfigs.push({\n            type: 'animated',\n            property: key,\n            nodeTag: value.__getNativeTag(),\n          });\n        } else {\n          transConfigs.push({\n            type: 'static',\n            property: key,\n            value,\n          });\n        }\n      }\n    });\n\n    NativeAnimatedHelper.validateTransform(transConfigs);\n    return {\n      type: 'transform',\n      transforms: transConfigs,\n    };\n  }\n}\n\nmodule.exports = AnimatedTransform;\n"]}