{"version":3,"sources":["StyleSheetValidation.js"],"names":["ImageStylePropTypes","require","TextStylePropTypes","ViewStylePropTypes","invariant","ReactPropTypesSecret","StyleSheetValidation","prop","style","caller","__DEV__","allStylePropTypes","undefined","message1","message2","JSON","stringify","Object","keys","sort","styleError","error","message","name","styles","validateStyleProp","stylePropTypes","key","addValidStylePropTypes","module","exports"],"mappings":";;;;;;;;;;AAUA,a;;AAEA,IAAMA,sBAAsBC,QAAQ,qBAAR,CAA5B;AACA,IAAMC,qBAAqBD,QAAQ,oBAAR,CAA3B;AACA,IAAME,qBAAqBF,QAAQ,oBAAR,CAA3B;;AAEA,IAAMG,YAAYH,QAAQ,oBAAR,CAAlB;;;;;;AAMA,IAAMI,uBAAuB,8CAA7B,C;;AAEMC,oB;AACqBC,Q,EAAcC,K,EAAeC,M,EAAgB;AACpE,UAAI,CAACC,OAAL,EAAc;AACZ;AACD;AACD,UAAIC,kBAAkBJ,IAAlB,MAA4BK,SAAhC,EAA2C;AACzC,YAAMC,WAAW,MAAMN,IAAN,GAAa,kCAA9B;AACA,YAAMO;AACJ;AACAC,aAAKC,SAAL,CAAeC,OAAOC,IAAP,CAAYP,iBAAZ,EAA+BQ,IAA/B,EAAf,EAAsD,IAAtD,EAA4D,IAA5D,CAFF;AAGAC,mBAAWP,QAAX,EAAqBL,KAArB,EAA4BC,MAA5B,EAAoCK,QAApC;AACD;AACD,UAAMO,QAAQV,kBAAkBJ,IAAlB;AACZC,WADY;AAEZD,UAFY;AAGZE,YAHY;AAIZ,YAJY;AAKZ,UALY;AAMZJ,0BANY,CAAd;;AAQA,UAAIgB,KAAJ,EAAW;AACTD,mBAAWC,MAAMC,OAAjB,EAA0Bd,KAA1B,EAAiCC,MAAjC;AACD;AACF,K;;AAEoBc,Q,EAAcC,M,EAAgB;AACjD,UAAI,CAACd,OAAL,EAAc;AACZ;AACD;AACD,WAAK,IAAMH,IAAX,IAAmBiB,OAAOD,IAAP,CAAnB,EAAiC;AAC/BjB,6BAAqBmB,iBAArB;AACElB,YADF;AAEEiB,eAAOD,IAAP,CAFF;AAGE,wBAAgBA,IAHlB;;AAKD;AACF,K;;AAE6BG,kB,EAAgB;AAC5C,WAAK,IAAMC,GAAX,IAAkBD,cAAlB,EAAkC;AAChCf,0BAAkBgB,GAAlB,IAAyBD,eAAeC,GAAf,CAAzB;AACD;AACF,K;;;AAGH,IAAMP,aAAa,SAAbA,UAAa,CAASP,QAAT,EAAmBL,KAAnB,EAA0BC,MAA1B,EAAmCK,QAAnC,EAA8C;AAC/DV;AACE,OADF;AAEES;AACE,MADF;AAEGJ,YAAU,aAFb;AAGE,MAHF;AAIEM,OAAKC,SAAL,CAAeR,KAAf,EAAsB,IAAtB,EAA4B,IAA5B,CAJF;AAKGM,cAAY,EALf,CAFF;;AASD,CAVD;;AAYA,IAAMH,oBAAoB,EAA1B;;AAEAL,qBAAqBsB,sBAArB,CAA4C5B,mBAA5C;AACAM,qBAAqBsB,sBAArB,CAA4C1B,kBAA5C;AACAI,qBAAqBsB,sBAArB,CAA4CzB,kBAA5C;;AAEA0B,OAAOC,OAAP,GAAiBxB,oBAAjB","file":"StyleSheetValidation.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst ImageStylePropTypes = require('ImageStylePropTypes');\nconst TextStylePropTypes = require('TextStylePropTypes');\nconst ViewStylePropTypes = require('ViewStylePropTypes');\n\nconst invariant = require('fbjs/lib/invariant');\n\n// Hardcoded because this is a legit case but we don't want to load it from\n// a private API. We might likely want to unify style sheet creation with how it\n// is done in the DOM so this might move into React. I know what I'm doing so\n// plz don't fire me.\nconst ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nclass StyleSheetValidation {\n  static validateStyleProp(prop: string, style: Object, caller: string) {\n    if (!__DEV__) {\n      return;\n    }\n    if (allStylePropTypes[prop] === undefined) {\n      const message1 = '\"' + prop + '\" is not a valid style property.';\n      const message2 =\n        '\\nValid style props: ' +\n        JSON.stringify(Object.keys(allStylePropTypes).sort(), null, '  ');\n      styleError(message1, style, caller, message2);\n    }\n    const error = allStylePropTypes[prop](\n      style,\n      prop,\n      caller,\n      'prop',\n      null,\n      ReactPropTypesSecret,\n    );\n    if (error) {\n      styleError(error.message, style, caller);\n    }\n  }\n\n  static validateStyle(name: string, styles: Object) {\n    if (!__DEV__) {\n      return;\n    }\n    for (const prop in styles[name]) {\n      StyleSheetValidation.validateStyleProp(\n        prop,\n        styles[name],\n        'StyleSheet ' + name,\n      );\n    }\n  }\n\n  static addValidStylePropTypes(stylePropTypes) {\n    for (const key in stylePropTypes) {\n      allStylePropTypes[key] = stylePropTypes[key];\n    }\n  }\n}\n\nconst styleError = function(message1, style, caller?, message2?) {\n  invariant(\n    false,\n    message1 +\n      '\\n' +\n      (caller || '<<unknown>>') +\n      ': ' +\n      JSON.stringify(style, null, '  ') +\n      (message2 || ''),\n  );\n};\n\nconst allStylePropTypes = {};\n\nStyleSheetValidation.addValidStylePropTypes(ImageStylePropTypes);\nStyleSheetValidation.addValidStylePropTypes(TextStylePropTypes);\nStyleSheetValidation.addValidStylePropTypes(ViewStylePropTypes);\n\nmodule.exports = StyleSheetValidation;\n"]}