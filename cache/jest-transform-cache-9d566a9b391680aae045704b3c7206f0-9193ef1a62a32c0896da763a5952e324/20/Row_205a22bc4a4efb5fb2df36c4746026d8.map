{"version":3,"sources":["Row.js"],"names":["RowNB","type","flexDirection","flex","props","size","style","height","defaultProps","nativeProps","_root","setNativeProps","onPress","prepareRootProps","component","children","Component"],"mappings":"AAAA,a;;AAEA,8B;AACA;;AAEA,qD;;;AAGqBA,K;AACE;;AAEf,UAAIC,OAAO;AACVC,uBAAe,KADL;AAEVC,cAAO,KAAKC,KAAL,CAAWC,IAAZ,GAAoB,KAAKD,KAAL,CAAWC,IAA/B,GAAuC,KAAKD,KAAL,CAAWE,KAAX,IAAoB,KAAKF,KAAL,CAAWE,KAAX,CAAiBC,MAAtC,GAAgD,CAAhD,GAAoD,CAFtF,EAAX;;;AAKA,UAAIC,eAAe;AACfF,eAAOL,IADQ,EAAnB;;AAGA,aAAO,4BAAa,KAAKG,KAAlB,EAAyBI,YAAzB,CAAP;;AAEH,K;;AAEcC,e,EAAa;AAC1B,WAAKC,KAAL,CAAWC,cAAX,CAA0BF,WAA1B;AACD,K;;AAEQ;AACP,UAAG,KAAKL,KAAL,CAAWQ,OAAd,EAAsB;AACpB;AACI,wCAAC,6BAAD,aAAkB,SAAS,KAAKR,KAAL,CAAWQ,OAAtC;AACI,iBAAKC,gBAAL,EADJ;AAEF,0CAAC,iBAAD;AACF,qBAAK,gCAAa,OAAKH,KAAL,GAAaI,SAA1B,EADH;AAEE,mBAAKV,KAFP;AAGE,mBAAKS,gBAAL,EAHF;AAIF,mBAAKT,KAAL,CAAWW,QAJT,CAFE,CADJ;;;AAUD,OAXD;AAYI;AACF;AACE,wCAAC,iBAAD;AACE,mBAAK,gCAAa,OAAKL,KAAL,GAAaI,SAA1B,EADP;AAEM,iBAAKV,KAFX;AAGM,iBAAKS,gBAAL,EAHN;AAIE,iBAAKT,KAAL,CAAWW,QAJb,CADF;;AAOD;AACF,K,oBAzC8BC,gB,oBAAdhB,K","file":"Row.js","sourcesContent":["'use strict';\n\nimport React, {Component} from 'react';\nimport {View, TouchableOpacity} from 'react-native';\n\nimport computeProps from '../Utils/computeProps';\n\n\nexport default class RowNB extends Component {\n    prepareRootProps() {\n\n        var type = {\n        \tflexDirection: 'row',\n        \tflex: (this.props.size) ? this.props.size : (this.props.style && this.props.style.height) ? 0 : 1,\n        }\n\n        var defaultProps = {\n            style: type\n        }\n        return computeProps(this.props, defaultProps);\n\n    }\n\n    setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n\n    render() {\n      if(this.props.onPress){\n        return(\n            <TouchableOpacity onPress={this.props.onPress}\n            {...this.prepareRootProps()}>\n          <View\n        ref={component => this._root = component}\n        {...this.props}\n        {...this.prepareRootProps()}\n      >{this.props.children}</View>\n          </TouchableOpacity>\n      );\n      }\n      else{\n        return(\n          <View\n            ref={component => this._root = component}\n            {...this.props}\n            {...this.prepareRootProps()}\n          >{this.props.children}</View>\n        );\n      }\n    }\n\n\n}\n"]}