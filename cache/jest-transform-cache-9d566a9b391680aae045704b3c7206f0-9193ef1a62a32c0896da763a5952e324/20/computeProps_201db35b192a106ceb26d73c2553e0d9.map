{"version":3,"sources":["computeProps.js"],"names":["computeProps","incomingProps","defaultProps","computedProps","_","clone","children","incomingPropsStyle","style","merge","computedPropsStyle","Array","isArray","forEach","StyleSheet","flatten"],"mappings":"8DAAA,8B;AACA;AACA,gC;;AAEA,SAASA,YAAT,CAAsBC,aAAtB,EAAqCC,YAArC,EAAmD;;AAEjD,MAAIC,gBAAgB,EAApB;;AAEAF,kBAAgBG,iBAAEC,KAAF,CAAQJ,aAAR,CAAhB;AACA,SAAOA,cAAcK,QAArB;;AAEA,MAAIC,qBAAqBN,cAAcO,KAAvC;AACA,SAAOP,cAAcO,KAArB;;;;AAIA,MAAIP,aAAJ,EAAmBG,iBAAEK,KAAF,CAAQN,aAAR,EAAuBD,YAAvB,EAAqCD,aAArC,EAAnB;AACKE,kBAAgBD,YAAhB;;;AAGL,MAAIK,kBAAJ,EAAwB;AACtB,QAAIG,qBAAqB,EAAzB;AACAP,kBAAcK,KAAd,GAAsB,EAAtB;AACA,QAAIG,MAAMC,OAAN,CAAcL,kBAAd,CAAJ,EAAuC;AACrCH,uBAAES,OAAF,CAAUN,kBAAV,EAA8B,iBAAS;AACrC,YAAI,OAAOC,KAAP,IAAgB,QAApB,EAA8B;AAC5BJ,2BAAEK,KAAF,CAAQC,kBAAR,EAA4BI,wBAAWC,OAAX,CAAmBP,KAAnB,CAA5B;AACD,SAFD,MAEO;AACLJ,2BAAEK,KAAF,CAAQC,kBAAR,EAA4BF,KAA5B;AACD;AACF,OAND;AAOD,KARD,MAQO;AACL,UAAI,OAAOD,kBAAP,IAA6B,QAAjC,EAA2C;AACzCG,6BAAqBI,wBAAWC,OAAX;AACnBR,0BADmB,CAArB;;AAGD,OAJD,MAIO;AACLG,6BAAqBH,kBAArB;AACD;AACF;;AAEDH,qBAAEK,KAAF,CAAQN,cAAcK,KAAtB,EAA6BN,aAAaM,KAA1C,EAAiDE,kBAAjD;AACD;;;;AAID,SAAOP,aAAP;AACD,E;;AAEcH,Y","file":"computeProps.js","sourcesContent":["import React from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport _ from 'lodash';\n\nfunction computeProps(incomingProps, defaultProps) {\n  // External props has a higher precedence\n  var computedProps = {};\n\n  incomingProps = _.clone(incomingProps);\n  delete incomingProps.children;\n\n  var incomingPropsStyle = incomingProps.style;\n  delete incomingProps.style;\n\n  // console.log(defaultProps, incomingProps);\n\n  if (incomingProps) _.merge(computedProps, defaultProps, incomingProps);\n  else computedProps = defaultProps;\n\n  // Pass the merged Style Object instead\n  if (incomingPropsStyle) {\n    var computedPropsStyle = {};\n    computedProps.style = {};\n    if (Array.isArray(incomingPropsStyle)) {\n      _.forEach(incomingPropsStyle, style => {\n        if (typeof style == \"number\") {\n          _.merge(computedPropsStyle, StyleSheet.flatten(style));\n        } else {\n          _.merge(computedPropsStyle, style);\n        }\n      });\n    } else {\n      if (typeof incomingPropsStyle == \"number\") {\n        computedPropsStyle = StyleSheet.flatten(\n          incomingPropsStyle\n        );\n      } else {\n        computedPropsStyle = incomingPropsStyle;\n      }\n    }\n\n    _.merge(computedProps.style, defaultProps.style, computedPropsStyle);\n  }\n\n  // console.log(\"computedProps \", computedProps);\n\n  return computedProps;\n};\n\nexport default computeProps;\n"]}