{"version":3,"sources":["deepDiffer.js"],"names":["deepDiffer","one","two","maxDepth","constructor","Array","isArray","len","length","ii","key","twoKey","undefined","module","exports"],"mappings":";;;;;;;;;;AAUA;;;;;AAKA,IAAMA,aAAa,SAAbA,UAAa;AACjBC,GADiB;AAEjBC,GAFiB;;AAIR,KADTC,QACS,uEADU,CAAC,CACX;AACT,MAAIA,aAAa,CAAjB,EAAoB;AAClB,WAAO,IAAP;AACD;AACD,MAAIF,QAAQC,GAAZ,EAAiB;;AAEf,WAAO,KAAP;AACD;AACD,MAAI,OAAOD,GAAP,KAAe,UAAf,IAA6B,OAAOC,GAAP,KAAe,UAAhD,EAA4D;;AAE1D,WAAO,KAAP;AACD;AACD,MAAI,OAAOD,GAAP,KAAe,QAAf,IAA2BA,QAAQ,IAAvC,EAA6C;;AAE3C,WAAOA,QAAQC,GAAf;AACD;AACD,MAAI,OAAOA,GAAP,KAAe,QAAf,IAA2BA,QAAQ,IAAvC,EAA6C;;;AAG3C,WAAO,IAAP;AACD;AACD,MAAID,IAAIG,WAAJ,KAAoBF,IAAIE,WAA5B,EAAyC;AACvC,WAAO,IAAP;AACD;AACD,MAAIC,MAAMC,OAAN,CAAcL,GAAd,CAAJ,EAAwB;;AAEtB,QAAMM,MAAMN,IAAIO,MAAhB;AACA,QAAIN,IAAIM,MAAJ,KAAeD,GAAnB,EAAwB;AACtB,aAAO,IAAP;AACD;AACD,SAAK,IAAIE,KAAK,CAAd,EAAiBA,KAAKF,GAAtB,EAA2BE,IAA3B,EAAiC;AAC/B,UAAIT,WAAWC,IAAIQ,EAAJ,CAAX,EAAoBP,IAAIO,EAAJ,CAApB,EAA6BN,WAAW,CAAxC,CAAJ,EAAgD;AAC9C,eAAO,IAAP;AACD;AACF;AACF,GAXD,MAWO;AACL,SAAK,IAAMO,GAAX,IAAkBT,GAAlB,EAAuB;AACrB,UAAID,WAAWC,IAAIS,GAAJ,CAAX,EAAqBR,IAAIQ,GAAJ,CAArB,EAA+BP,WAAW,CAA1C,CAAJ,EAAkD;AAChD,eAAO,IAAP;AACD;AACF;AACD,SAAK,IAAMQ,MAAX,IAAqBT,GAArB,EAA0B;;;AAGxB,UAAID,IAAIU,MAAJ,MAAgBC,SAAhB,IAA6BV,IAAIS,MAAJ,MAAgBC,SAAjD,EAA4D;AAC1D,eAAO,IAAP;AACD;AACF;AACF;AACD,SAAO,KAAP;AACD,CAtDD;;AAwDAC,OAAOC,OAAP,GAAiBd,UAAjB","file":"deepDiffer.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\n/*\n * @returns {bool} true if different, false if equal\n */\nconst deepDiffer = function(\n  one: any,\n  two: any,\n  maxDepth: number = -1,\n): boolean {\n  if (maxDepth === 0) {\n    return true;\n  }\n  if (one === two) {\n    // Short circuit on identical object references instead of traversing them.\n    return false;\n  }\n  if (typeof one === 'function' && typeof two === 'function') {\n    // We consider all functions equal\n    return false;\n  }\n  if (typeof one !== 'object' || one === null) {\n    // Primitives can be directly compared\n    return one !== two;\n  }\n  if (typeof two !== 'object' || two === null) {\n    // We know they are different because the previous case would have triggered\n    // otherwise.\n    return true;\n  }\n  if (one.constructor !== two.constructor) {\n    return true;\n  }\n  if (Array.isArray(one)) {\n    // We know two is also an array because the constructors are equal\n    const len = one.length;\n    if (two.length !== len) {\n      return true;\n    }\n    for (let ii = 0; ii < len; ii++) {\n      if (deepDiffer(one[ii], two[ii], maxDepth - 1)) {\n        return true;\n      }\n    }\n  } else {\n    for (const key in one) {\n      if (deepDiffer(one[key], two[key], maxDepth - 1)) {\n        return true;\n      }\n    }\n    for (const twoKey in two) {\n      // The only case we haven't checked yet is keys that are in two but aren't\n      // in one, which means they are different.\n      if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nmodule.exports = deepDiffer;\n"]}