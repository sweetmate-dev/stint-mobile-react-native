7bea4308ec939db8ffc6330b9c76315b









'use strict';function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}var







AnimatedNode = function () {function AnimatedNode() {_classCallCheck(this, AnimatedNode);}_createClass(AnimatedNode, [{ key: "__attach", value: function __attach()
    {} }, { key: "__detach", value: function __detach()
    {
      if (this.__isNative && this.__nativeTag != null) {
        require('../NativeAnimatedHelper').API.dropAnimatedNode(this.__nativeTag);
        this.__nativeTag = undefined;
      }
    } }, { key: "__getValue", value: function __getValue()
    {} }, { key: "__getAnimatedValue", value: function __getAnimatedValue()
    {
      return this.__getValue();
    } }, { key: "__addChild", value: function __addChild(
    child) {} }, { key: "__removeChild", value: function __removeChild(
    child) {} }, { key: "__getChildren", value: function __getChildren()
    {
      return [];
    } }, { key: "__makeNative", value: function __makeNative()




    {
      if (!this.__isNative) {
        throw new Error('This node cannot be made a "native" animated node');
      }
    } }, { key: "__getNativeTag", value: function __getNativeTag()
    {
      require('../NativeAnimatedHelper').assertNativeAnimatedModule();
      require('fbjs/lib/invariant')(
      this.__isNative,
      'Attempt to get native tag from node not marked as "native"');

      if (this.__nativeTag == null) {
        var nativeTag = require('../NativeAnimatedHelper').generateNewNodeTag();
        require('../NativeAnimatedHelper').API.createAnimatedNode(
        nativeTag,
        this.__getNativeConfig());

        this.__nativeTag = nativeTag;
      }
      return this.__nativeTag;
    } }, { key: "__getNativeConfig", value: function __getNativeConfig()
    {
      throw new Error(
      'This JS animated node type cannot be used as native animated node');

    } }, { key: "toJSON", value: function toJSON()
    {
      return this.__getValue();
    } }]);return AnimatedNode;}();


module.exports = AnimatedNode;