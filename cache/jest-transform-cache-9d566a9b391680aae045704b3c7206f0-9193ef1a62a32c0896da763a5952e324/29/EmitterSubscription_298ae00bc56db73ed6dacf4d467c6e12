a6f1848ceee0a3f23900d52388435698










'use strict';var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}

var EventSubscription = require('EventSubscription');var







EmitterSubscription = function (_EventSubscription) {_inherits(EmitterSubscription, _EventSubscription);














  function EmitterSubscription(
  emitter,
  subscriber,
  listener,
  context)
  {_classCallCheck(this, EmitterSubscription);var _this = _possibleConstructorReturn(this, (EmitterSubscription.__proto__ || Object.getPrototypeOf(EmitterSubscription)).call(this,
    subscriber));
    _this.emitter = emitter;
    _this.listener = listener;
    _this.context = context;return _this;
  }_createClass(EmitterSubscription, [{ key: 'remove', value: function remove()







    {
      this.emitter.removeSubscription(this);
    } }]);return EmitterSubscription;}(EventSubscription);


module.exports = EmitterSubscription;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkVtaXR0ZXJTdWJzY3JpcHRpb24uanMiXSwibmFtZXMiOlsiRXZlbnRTdWJzY3JpcHRpb24iLCJyZXF1aXJlIiwiRW1pdHRlclN1YnNjcmlwdGlvbiIsImVtaXR0ZXIiLCJzdWJzY3JpYmVyIiwibGlzdGVuZXIiLCJjb250ZXh0IiwicmVtb3ZlU3Vic2NyaXB0aW9uIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQVVBLGE7O0FBRUEsSUFBTUEsb0JBQW9CQyxRQUFRLG1CQUFSLENBQTFCLEM7Ozs7Ozs7O0FBUU1DLG1COzs7Ozs7Ozs7Ozs7Ozs7QUFlSjtBQUNFQyxTQURGO0FBRUVDLFlBRkY7QUFHRUMsVUFIRjtBQUlFQyxTQUpGO0FBS0U7QUFDTUYsY0FETjtBQUVBLFVBQUtELE9BQUwsR0FBZUEsT0FBZjtBQUNBLFVBQUtFLFFBQUwsR0FBZ0JBLFFBQWhCO0FBQ0EsVUFBS0MsT0FBTCxHQUFlQSxPQUFmLENBSkE7QUFLRCxHOzs7Ozs7OztBQVFRO0FBQ1AsV0FBS0gsT0FBTCxDQUFhSSxrQkFBYixDQUFnQyxJQUFoQztBQUNELEssa0NBbkMrQlAsaUI7OztBQXNDbENRLE9BQU9DLE9BQVAsR0FBaUJQLG1CQUFqQiIsImZpbGUiOiJFbWl0dGVyU3Vic2NyaXB0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBAZmxvd1xuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgRXZlbnRTdWJzY3JpcHRpb24gPSByZXF1aXJlKCdFdmVudFN1YnNjcmlwdGlvbicpO1xuXG5pbXBvcnQgdHlwZSBFdmVudEVtaXR0ZXIgZnJvbSAnRXZlbnRFbWl0dGVyJztcbmltcG9ydCB0eXBlIEV2ZW50U3Vic2NyaXB0aW9uVmVuZG9yIGZyb20gJ0V2ZW50U3Vic2NyaXB0aW9uVmVuZG9yJztcblxuLyoqXG4gKiBFbWl0dGVyU3Vic2NyaXB0aW9uIHJlcHJlc2VudHMgYSBzdWJzY3JpcHRpb24gd2l0aCBsaXN0ZW5lciBhbmQgY29udGV4dCBkYXRhLlxuICovXG5jbGFzcyBFbWl0dGVyU3Vic2NyaXB0aW9uIGV4dGVuZHMgRXZlbnRTdWJzY3JpcHRpb24ge1xuICBlbWl0dGVyOiBFdmVudEVtaXR0ZXI7XG4gIGxpc3RlbmVyOiBGdW5jdGlvbjtcbiAgY29udGV4dDogP09iamVjdDtcblxuICAvKipcbiAgICogQHBhcmFtIHtFdmVudEVtaXR0ZXJ9IGVtaXR0ZXIgLSBUaGUgZXZlbnQgZW1pdHRlciB0aGF0IHJlZ2lzdGVyZWQgdGhpc1xuICAgKiAgIHN1YnNjcmlwdGlvblxuICAgKiBAcGFyYW0ge0V2ZW50U3Vic2NyaXB0aW9uVmVuZG9yfSBzdWJzY3JpYmVyIC0gVGhlIHN1YnNjcmliZXIgdGhhdCBjb250cm9sc1xuICAgKiAgIHRoaXMgc3Vic2NyaXB0aW9uXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb259IGxpc3RlbmVyIC0gRnVuY3Rpb24gdG8gaW52b2tlIHdoZW4gdGhlIHNwZWNpZmllZCBldmVudCBpc1xuICAgKiAgIGVtaXR0ZWRcbiAgICogQHBhcmFtIHsqfSBjb250ZXh0IC0gT3B0aW9uYWwgY29udGV4dCBvYmplY3QgdG8gdXNlIHdoZW4gaW52b2tpbmcgdGhlXG4gICAqICAgbGlzdGVuZXJcbiAgICovXG4gIGNvbnN0cnVjdG9yKFxuICAgIGVtaXR0ZXI6IEV2ZW50RW1pdHRlcixcbiAgICBzdWJzY3JpYmVyOiBFdmVudFN1YnNjcmlwdGlvblZlbmRvcixcbiAgICBsaXN0ZW5lcjogRnVuY3Rpb24sXG4gICAgY29udGV4dDogP09iamVjdCxcbiAgKSB7XG4gICAgc3VwZXIoc3Vic2NyaWJlcik7XG4gICAgdGhpcy5lbWl0dGVyID0gZW1pdHRlcjtcbiAgICB0aGlzLmxpc3RlbmVyID0gbGlzdGVuZXI7XG4gICAgdGhpcy5jb250ZXh0ID0gY29udGV4dDtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmVzIHRoaXMgc3Vic2NyaXB0aW9uIGZyb20gdGhlIGVtaXR0ZXIgdGhhdCByZWdpc3RlcmVkIGl0LlxuICAgKiBOb3RlOiB3ZSdyZSBvdmVycmlkaW5nIHRoZSBgcmVtb3ZlKClgIG1ldGhvZCBvZiBFdmVudFN1YnNjcmlwdGlvbiBoZXJlXG4gICAqIGJ1dCBkZWxpYmVyYXRlbHkgbm90IGNhbGxpbmcgYHN1cGVyLnJlbW92ZSgpYCBhcyB0aGUgcmVzcG9uc2liaWxpdHlcbiAgICogZm9yIHJlbW92aW5nIHRoZSBzdWJzY3JpcHRpb24gbGllcyB3aXRoIHRoZSBFdmVudEVtaXR0ZXIuXG4gICAqL1xuICByZW1vdmUoKSB7XG4gICAgdGhpcy5lbWl0dGVyLnJlbW92ZVN1YnNjcmlwdGlvbih0aGlzKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEVtaXR0ZXJTdWJzY3JpcHRpb247XG4iXX0=