{"version":3,"sources":["stringifySafe.js"],"names":["stringifySafe","arg","ret","type","undefined","toString","e","JSON","stringify","E","module","exports"],"mappings":";;;;;;;;;;AAUA;;;;;;AAMA,SAASA,aAAT,CAAuBC,GAAvB,EAAyC;AACvC,MAAIC,YAAJ;AACA,MAAMC,OAAO,OAAOF,GAApB;AACA,MAAIA,QAAQG,SAAZ,EAAuB;AACrBF,UAAM,WAAN;AACD,GAFD,MAEO,IAAID,QAAQ,IAAZ,EAAkB;AACvBC,UAAM,MAAN;AACD,GAFM,MAEA,IAAIC,SAAS,QAAb,EAAuB;AAC5BD,UAAM,MAAMD,GAAN,GAAY,GAAlB;AACD,GAFM,MAEA,IAAIE,SAAS,UAAb,EAAyB;AAC9B,QAAI;AACFD,YAAMD,IAAII,QAAJ,EAAN;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACVJ,YAAM,oBAAN;AACD;AACF,GANM,MAMA;;;AAGL,QAAI;AACFA,YAAMK,KAAKC,SAAL,CAAeP,GAAf,CAAN;AACD,KAFD,CAEE,OAAOK,CAAP,EAAU;AACV,UAAI,OAAOL,IAAII,QAAX,KAAwB,UAA5B,EAAwC;AACtC,YAAI;AACFH,gBAAMD,IAAII,QAAJ,EAAN;AACD,SAFD,CAEE,OAAOI,CAAP,EAAU,CAAE;AACf;AACF;AACF;AACD,SAAOP,OAAO,OAAOC,IAAP,GAAc,wBAA5B;AACD;;AAEDO,OAAOC,OAAP,GAAiBX,aAAjB","file":"stringifySafe.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\n/**\n * Tries to stringify with JSON.stringify and toString, but catches exceptions\n * (e.g. from circular objects) and always returns a string and never throws.\n */\nfunction stringifySafe(arg: any): string {\n  let ret;\n  const type = typeof arg;\n  if (arg === undefined) {\n    ret = 'undefined';\n  } else if (arg === null) {\n    ret = 'null';\n  } else if (type === 'string') {\n    ret = '\"' + arg + '\"';\n  } else if (type === 'function') {\n    try {\n      ret = arg.toString();\n    } catch (e) {\n      ret = '[function unknown]';\n    }\n  } else {\n    // Perform a try catch, just in case the object has a circular\n    // reference or stringify throws for some other reason.\n    try {\n      ret = JSON.stringify(arg);\n    } catch (e) {\n      if (typeof arg.toString === 'function') {\n        try {\n          ret = arg.toString();\n        } catch (E) {}\n      }\n    }\n  }\n  return ret || '[\"' + type + '\" failed to stringify]';\n}\n\nmodule.exports = stringifySafe;\n"]}