{"version":3,"sources":["PooledClass.js"],"names":["invariant","require","oneArgumentPooler","copyFieldsFrom","Klass","instancePool","length","instance","pop","call","twoArgumentPooler","a1","a2","threeArgumentPooler","a3","fourArgumentPooler","a4","standardReleaser","destructor","poolSize","push","DEFAULT_POOL_SIZE","DEFAULT_POOLER","addPoolingTo","CopyConstructor","pooler","NewKlass","getPooled","release","PooledClass","module","exports"],"mappings":"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","file":"PooledClass.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst invariant = require('fbjs/lib/invariant');\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nconst oneArgumentPooler = function(copyFieldsFrom) {\n  const Klass = this;\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nconst twoArgumentPooler = function(a1, a2) {\n  const Klass = this;\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nconst threeArgumentPooler = function(a1, a2, a3) {\n  const Klass = this;\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nconst fourArgumentPooler = function(a1, a2, a3, a4) {\n  const Klass = this;\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4);\n  }\n};\n\nconst standardReleaser = function(instance) {\n  const Klass = this;\n  invariant(\n    instance instanceof Klass,\n    'Trying to release an instance into a pool of a different type.',\n  );\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nconst DEFAULT_POOL_SIZE = 10;\nconst DEFAULT_POOLER = oneArgumentPooler;\n\ntype Pooler = any;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances.\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nconst addPoolingTo = function<T>(\n  CopyConstructor: Class<T>,\n  pooler: Pooler,\n): Class<T> & {\n  getPooled(\n    ...args: $ReadOnlyArray<mixed>\n  ): /* arguments of the constructor */ T,\n  release(instance: mixed): void,\n} {\n  // Casting as any so that flow ignores the actual implementation and trusts\n  // it to match the type we declared\n  const NewKlass = (CopyConstructor: any);\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nconst PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: (oneArgumentPooler: Pooler),\n  twoArgumentPooler: (twoArgumentPooler: Pooler),\n  threeArgumentPooler: (threeArgumentPooler: Pooler),\n  fourArgumentPooler: (fourArgumentPooler: Pooler),\n};\n\nmodule.exports = PooledClass;\n"]}