{"version":3,"sources":["index.js"],"names":["deviceScreen","Dimensions","get","DOUBLE_TAP_INTERVAL","TAP_DURATION","propsWhomRequireUpdate","Drawer","_length","_prevLength","_offsetOpen","_offsetClosed","_open","_panning","_tweenPending","_activeTween","_lastPress","_panStartTime","_syncAfterUpdate","_interactionHandle","state","viewport","getChildContext","drawer","initialize","props","fullLength","getDeviceLength","getClosedOffset","getOpenOffset","styles","container","flex","justifyContent","alignItems","main","position","borderWidth","isLeftOrRightSide","top","left","initializeOpen","open","side","type","setNativeProps","style","stylesheet","StyleSheet","create","responder","PanResponder","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","resync","updatePosition","mainProps","drawerProps","ratio","getOpenLength","mainOverlayProps","drawerOverlayProps","tweenHandler","propsFrag","mainOverlay","drawerOverlay","e","gestureState","shouldOpenDrawer","getGestureDelta","close","shouldCaptureGestures","processShouldSet","negotiatePan","processMoveShouldSet","delta","acceptPan","isRightOrBottomSide","length","Math","min","max","getClosedLength","Date","now","processTapGestures","abs","inMask","testPanResponderMask","terminateActiveTween","acceptPanOnDrawer","disabled","deltaOppositeAxis","getGestureDeltaOppositeAxis","swipeToLeftOrTop","swipeToRightOrBottom","swipeOppositeAxis","swipeInCloseDirection","isLeftOrTopSide","acceptTap","tapToClose","acceptDoubleTap","getTime","timeDelta","context","_childDrawer","pos0","nativeEvent","pageX","pageY","deltaOpen","deltaClose","getOpenMask","getClosedMask","terminate","cb","start","end","onOpenStart","setInteractionHandle","duration","tweenDuration","easingType","tweenEasing","onFrame","tweenValue","onEnd","adjustForCaptureGestures","onOpen","clearInteractionHandle","onCloseStart","onClose","toggle","handleSetViewport","layout","oldViewport","width","height","didRotationChange","setState","requiresResync","nextProps","i","key","getMainWidth","getMainHeight","isTopOrBottomSide","getDrawerWidth","getDrawerHeight","panCloseMask","panOpenMask","openDrawerOffset","closedDrawerOffset","dx","dy","I18nManager","isRTL","includes","_registerChildDrawer","openDrawerThreshold","process","env","NODE_ENV","console","error","panStartCompensation","relativeDrag","hasActiveHeading","panThreshold","captureGestures","shouldCapture","pointerEvents","InteractionManager","useInteractionManager","createInteractionHandle","first","renderMain","renderDrawer","second","panHandlers","c","children","overlay","elevation","content","Component","tweenPresets","parallax","propTypes","PropTypes","bool","oneOf","node","oneOfType","number","func","object","string","any","defaultProps","contextTypes","childContextTypes","right","bottom","backgroundColor"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { PanResponder, View, StyleSheet, Dimensions, InteractionManager, I18nManager } from 'react-native'\n\nimport tween from './tweener'\n\nlet deviceScreen = Dimensions.get('window')\nconst DOUBLE_TAP_INTERVAL = 500\nconst TAP_DURATION = 250\nconst propsWhomRequireUpdate = ['closedDrawerOffset', 'openDrawerOffset', 'type', 'styles']\n\nexport default class Drawer extends Component {\n\n  _length = 0;\n  _prevLength = 0;\n  _offsetOpen = 0;\n  _offsetClosed = 0;\n  _open = false;\n  _panning = false;\n  _tweenPending = false;\n  _activeTween = null;\n  _lastPress = 0;\n  _panStartTime = 0;\n  _syncAfterUpdate = false;\n  _interactionHandle = null;\n\n  static tweenPresets = {\n    parallax: (ratio, side = 'left') => {\n      let drawer = { [side] : -150 * (1 - ratio)}\n      return { drawer }\n    }\n  };\n\n  state = {\n    viewport: deviceScreen\n  };\n\n  static propTypes = {\n    acceptDoubleTap: PropTypes.bool,\n    acceptPan: PropTypes.bool,\n    acceptTap: PropTypes.bool,\n    acceptPanOnDrawer: PropTypes.bool,\n    captureGestures: PropTypes.oneOf([true, false, 'open', 'closed']),\n    children: PropTypes.node,\n    closedDrawerOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n    content: PropTypes.node,\n    disabled: PropTypes.bool,\n    elevation: PropTypes.number,\n    initializeOpen: PropTypes.bool,\n    open: PropTypes.bool,\n    negotiatePan: PropTypes.bool,\n    onClose: PropTypes.func,\n    onCloseStart: PropTypes.func,\n    onOpen: PropTypes.func,\n    onOpenStart: PropTypes.func,\n    openDrawerOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n    panThreshold: PropTypes.number,\n    panCloseMask: PropTypes.number,\n    panOpenMask: PropTypes.number,\n    side: PropTypes.oneOf(['left', 'right', 'top', 'bottom']),\n    styles: PropTypes.object,\n    tapToClose: PropTypes.bool,\n    tweenDuration: PropTypes.number,\n    tweenEasing: PropTypes.string,\n    tweenHandler: PropTypes.func,\n    type: PropTypes.oneOf(['overlay', 'static', 'displace']),\n    useInteractionManager: PropTypes.bool,\n\n    // deprecated\n    panStartCompensation: PropTypes.bool,\n    openDrawerThreshold: PropTypes.any,\n  };\n\n  static defaultProps = {\n    open: null,\n    initializeOpen: false,\n\n    type: 'displace',\n    closedDrawerOffset: 0,\n    openDrawerOffset: 0,\n    panThreshold: 0.25, // @TODO consider rename to panThreshold\n    panOpenMask: null, // defaults to closedDrawerOffset\n    panCloseMask: null, // defaults to openDrawerOffset\n\n    tweenHandler: null,\n    tweenDuration: 250,\n    tweenEasing: 'linear',\n\n    disabled: false,\n    negotiatePan: false,\n    captureGestures: 'open',\n    acceptDoubleTap: false,\n    acceptTap: false,\n    acceptPan: true,\n    acceptPanOnDrawer: true,\n    tapToClose: false,\n\n    styles: {},\n    elevation: 0,\n    onOpen: () => {},\n    onClose: () => {},\n    side: 'left',\n\n    useInteractionManager: false,\n  };\n\n  /*** CONTEXT ***/\n  static contextTypes = { drawer: PropTypes.object };\n  static childContextTypes = { drawer: PropTypes.object };\n  getChildContext = () => ({ drawer: this });\n  /*** END CONTEXT ***/\n\n  _registerChildDrawer(drawer) {\n    // Store child drawer for gesture disambiguation with multi drawer\n    // @TODO make cleaner, generalize to work with 3+ drawers, prop to disable/configure\n    this._childDrawer = drawer\n  }\n\n  componentWillMount() {\n    if (this.context.drawer) this.context.drawer._registerChildDrawer(this)\n    if (this.props.openDrawerThreshold && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: openDrawerThreshold is obsolete. Use panThreshold instead.')\n    if (this.props.panStartCompensation && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: panStartCompensation is deprecated.')\n    if (this.props.relativeDrag && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: relativeDrag is deprecated.')\n    this.initialize(this.props)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.requiresResync(nextProps)) this.resync(null, nextProps)\n\n    if (nextProps.open !== null && this._open !== nextProps.open) {\n      this._syncAfterUpdate = true\n      this._open = nextProps.open\n    }\n  }\n\n  componentDidUpdate() {\n    if (this._syncAfterUpdate) {\n      this._syncAfterUpdate = false\n      this._open ? this.open('force') : this.close('force')\n    }\n  }\n\n  initialize = (props) => {\n    let fullLength = this.getDeviceLength();\n    this._offsetClosed = this.getClosedOffset(props, this.state.viewport)\n    this._offsetOpen = this.getOpenOffset(props, this.state.viewport)\n    // add function options\n    this._prevLength = this._length\n\n    let styles = {\n      container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n    }\n\n    styles.main = Object.assign({\n      position: 'absolute',\n      borderWidth: 0,\n    }, this.isLeftOrRightSide() ? {top: 0} : {left: 0}, this.props.styles.main)\n\n    styles.drawer = Object.assign({\n      position: 'absolute',\n      borderWidth:0,\n    }, this.isLeftOrRightSide() ? {top: 0} : {left: 0}, this.props.styles.drawer)\n\n    if (props.initializeOpen || props.open) { // open\n      this._open = true\n      this._length = fullLength - this._offsetOpen\n      styles.main[this.props.side] = 0\n      styles.drawer[this.props.side] = 0\n      if (props.type === 'static') styles.main[this.props.side] = fullLength - this._offsetOpen\n      if (props.type === 'displace') styles.main[this.props.side] = fullLength - this._offsetOpen\n    } else { // closed\n      this._open = false\n      this._length = this._offsetClosed\n      styles.main[this.props.side] = this._offsetClosed\n      if (props.type === 'static') styles.drawer[this.props.side] = 0\n      if (props.type === 'overlay') styles.drawer[this.props.side] = this._offsetClosed + this._offsetOpen - fullLength\n      if (props.type === 'displace') styles.drawer[this.props.side] = - fullLength + this._offsetClosed + this._offsetOpen\n    }\n\n    if (this.main) {\n      this.drawer.setNativeProps({ style: {left: styles.drawer.left}})\n      this.main.setNativeProps({ style: {left: styles.main.left}})\n    } else {\n      this.stylesheet = StyleSheet.create(styles)\n      this.responder = PanResponder.create({\n        onStartShouldSetPanResponder: this.onStartShouldSetPanResponder,\n        onStartShouldSetPanResponderCapture: this.onStartShouldSetPanResponderCapture,\n        onMoveShouldSetPanResponder: this.onMoveShouldSetPanResponder,\n        onMoveShouldSetPanResponderCapture: this.onMoveShouldSetPanResponderCapture,\n        onPanResponderMove: this.onPanResponderMove,\n        onPanResponderRelease: this.onPanResponderRelease,\n\tonPanResponderTerminate: this.onPanResponderTerminate\n      })\n    }\n\n    this.resync(null, props)\n  };\n\n  updatePosition = () => {\n    let mainProps = {}\n    let drawerProps = {}\n    let ratio = (this._length - this._offsetClosed) / (this.getOpenLength() - this._offsetClosed)\n\n    switch (this.props.type) {\n      case 'overlay':\n        drawerProps[this.props.side] = -this.getDeviceLength() + this._offsetOpen + this._length\n        mainProps[this.props.side] = this._offsetClosed\n        break\n      case 'static':\n        mainProps[this.props.side] = this._length\n        drawerProps[this.props.side] = 0\n        break\n      case 'displace':\n        mainProps[this.props.side] = this._length\n        drawerProps[this.props.side] = -this.getDeviceLength() + this._length + this._offsetOpen\n        break\n    }\n\n    let mainOverlayProps = null\n    let drawerOverlayProps = null\n    if (this.props.tweenHandler) {\n      let propsFrag = this.props.tweenHandler(ratio, this.props.side)\n      mainProps = Object.assign(mainProps, propsFrag.main)\n      drawerProps = Object.assign(drawerProps, propsFrag.drawer)\n      mainOverlayProps = propsFrag.mainOverlay\n      drawerOverlayProps = propsFrag.drawerOverlay\n    }\n    if (this.main && this.drawer && this.mainOverlay && this.drawerOverlay) {\n      this.drawer.setNativeProps({style: drawerProps})\n      this.main.setNativeProps({style: mainProps})\n      if (mainOverlayProps) this.mainOverlay.setNativeProps({style: mainOverlayProps})\n      if (drawerOverlayProps) this.drawerOverlay.setNativeProps({style: drawerOverlayProps})\n    }\n  };\n\n  shouldOpenDrawer(delta) {\n    let hasActiveHeading = this._open ^ delta > 0 ^ this.isRightOrBottomSide()\n    if (!hasActiveHeading) return this._open\n    else return this._open ^ Math.abs(delta) > this.getDeviceLength() * this.props.panThreshold\n  }\n\n  onPanResponderTerminate = (e, gestureState) => {\n    this._panning = false\n    this.shouldOpenDrawer(this.getGestureDelta(gestureState)) ? this.open() : this.close()\n  };\n\n  onStartShouldSetPanResponderCapture = (e, gestureState) => {\n    if (this.shouldCaptureGestures()) return this.processShouldSet(e, gestureState)\n    return false\n  };\n\n  onStartShouldSetPanResponder = (e, gestureState) => {\n    if (!this.shouldCaptureGestures()) return this.processShouldSet(e, gestureState)\n    return false\n  };\n\n  onMoveShouldSetPanResponderCapture = (e, gestureState) => {\n    if (this.shouldCaptureGestures() && this.props.negotiatePan) return this.processMoveShouldSet(e, gestureState)\n    return false\n  };\n\n  onMoveShouldSetPanResponder = (e, gestureState) => {\n    if (!this.shouldCaptureGestures() && this.props.negotiatePan) return this.processMoveShouldSet(e, gestureState)\n    return false\n  };\n\n  onPanResponderMove = (e, gestureState) => {\n    let delta = this.getGestureDelta(gestureState);\n    if (!this.props.acceptPan) return false\n\n    //Do nothing if we are panning the wrong way\n    if (this._open ^ delta < 0 ^ this.isRightOrBottomSide()) return false\n\n    delta = this.isRightOrBottomSide() ? delta * -1 : delta\n    let length = this._prevLength + delta\n    length = Math.min(length, this.getOpenLength())\n    length = Math.max(length, this.getClosedLength())\n    this._length = length\n\n    this.updatePosition()\n    this._panning = true\n  };\n\n  onPanResponderRelease = (e, gestureState) => {\n    let delta = this.getGestureDelta(gestureState);\n    this._panning = false\n    if (Date.now() - this._panStartTime < TAP_DURATION) this.processTapGestures()\n    if (Math.abs(delta) < 50 && this._activeTween) return\n\n    this.shouldOpenDrawer(delta) ? this.open() : this.close()\n    this.updatePosition()\n    this._prevLength = this._length\n  };\n\n  processShouldSet = (e, gestureState) => {\n    let inMask = this.testPanResponderMask(e, gestureState)\n    if (!inMask) return false\n    this._panStartTime = Date.now()\n    if (inMask && this.shouldCaptureGestures()) return true\n    if (this.props.negotiatePan) return false\n    if (!this.props.acceptPan) return false\n    this.terminateActiveTween()\n    return true\n  };\n\n  processMoveShouldSet = (e, gestureState) => {\n    let inMask = this.testPanResponderMask(e, gestureState)\n    if (!inMask && (!this.props.acceptPanOnDrawer || this._open === false )) return false\n    if (!this.props.acceptPan) return false\n\n    if (!this.props.negotiatePan || this.props.disabled || !this.props.acceptPan || this._panning) return false\n    let delta = this.getGestureDelta(gestureState)\n    let deltaOppositeAxis = this.getGestureDeltaOppositeAxis(gestureState)\n    let swipeToLeftOrTop = (delta < 0) ? true : false\n    let swipeToRightOrBottom = (delta > 0) ? true : false\n    let swipeOppositeAxis = (Math.abs(deltaOppositeAxis) >= Math.abs(delta)) ? true : false\n    let swipeInCloseDirection = (this.isLeftOrTopSide()) ? swipeToLeftOrTop : swipeToRightOrBottom\n    if (swipeOppositeAxis || (this._open && !swipeInCloseDirection) || (!this._open && swipeInCloseDirection)) {\n      return false\n    }\n\n    this.terminateActiveTween()\n    return true\n  };\n\n  processTapGestures = () => {\n    if (this._activeTween) return false // disable tap gestures during tween\n    if (this.props.acceptTap || (this.props.tapToClose && this._open)) {\n      this._open ? this.close() : this.open()\n      return true\n    }\n    if (this.props.acceptDoubleTap) {\n      let now = new Date().getTime()\n      let timeDelta = now - this._lastPress\n      this._lastPress = now\n      if (timeDelta < DOUBLE_TAP_INTERVAL) {\n        this._open ? this.close() : this.open()\n        return true\n      }\n    }\n    return false\n  };\n\n  shouldCaptureGestures() {\n    if (this.props.captureGestures === true) return true\n    if (this.props.captureGestures === 'closed' && this._open === false) return true\n    if (this.props.captureGestures === 'open' && this._open === true) return true\n    return false\n  }\n\n  testPanResponderMask = (e, gestureState) => {\n    if (this.props.disabled) return false\n\n    // Disable if parent or child drawer exist and are open\n    // @TODO make cleaner, generalize to work with 3+ drawers, prop to disable/configure\n    if (this.context.drawer && this.context.drawer._open) return false\n    if (this._childDrawer && this._childDrawer._open) return false\n\n    let pos0 = this.isLeftOrRightSide() ? e.nativeEvent.pageX : e.nativeEvent.pageY\n    let deltaOpen = this.isLeftOrTopSide() ? this.getDeviceLength() - pos0 : pos0\n    let deltaClose = this.isLeftOrTopSide() ? pos0 : this.getDeviceLength() - pos0\n\n    if ( this._open && deltaOpen > this.getOpenMask() ) return false\n    if ( !this._open && deltaClose > this.getClosedMask() ) return false\n    return true\n  };\n\n  terminateActiveTween = () => {\n    if (this._activeTween) {\n      this._activeTween.terminate()\n      this._activeTween = null\n    }\n  };\n\n  open = (type, cb) => {\n    let start = this._length\n    let end = this.getOpenLength()\n\n    if (this._activeTween) return\n    if (type !== 'force' && start - end === 0 && this._open === true) return // do nothing if the delta is 0\n\n    this.props.onOpenStart && this.props.onOpenStart()\n    this.setInteractionHandle()\n    this._activeTween = tween({\n      start: this._length,\n      end: this.getOpenLength(),\n      duration: this.props.tweenDuration,\n      easingType: this.props.tweenEasing,\n      onFrame: (tweenValue) => {\n        this._length = tweenValue\n        this.updatePosition()\n      },\n      onEnd: () => {\n        this._activeTween = null\n        this._open = true\n        this._prevLength = this._length\n        this.adjustForCaptureGestures()\n        this.props.onOpen()\n        this.clearInteractionHandle()\n\n        if(typeof type === 'function') {\n          type() // this is actually a callback\n        } else cb && cb()\n\n      }\n    })\n  };\n\n  close = (type, cb) => {\n    let start = this._length\n    let end = this.getClosedLength()\n\n    if (this._activeTween) return\n    if (type !== 'force' && start - end === 0 && this._open === false) return // do nothing if the delta is 0\n\n    this.props.onCloseStart && this.props.onCloseStart()\n    this.setInteractionHandle()\n    this._activeTween = tween({\n      start,\n      end,\n      easingType: this.props.tweenEasing,\n      duration: this.props.tweenDuration,\n      onFrame: (tweenValue) => {\n        this._length = tweenValue\n        this.updatePosition()\n      },\n      onEnd: () => {\n        this._activeTween = null\n        this._open = false\n        this._prevLength = this._length\n        this.adjustForCaptureGestures()\n        this.props.onClose()\n        this.clearInteractionHandle()\n\n        if(typeof type === 'function') {\n          type() // this is actually a callback\n        } else cb && cb()\n\n      }\n    })\n  };\n\n  adjustForCaptureGestures() {\n    if (!this.props.captureGestures) return\n    let shouldCapture = this.shouldCaptureGestures()\n    if (this.mainOverlay && this.drawerOverlay) {\n      this.mainOverlay.setNativeProps({ pointerEvents: shouldCapture && this._open ? 'auto' : 'none' })\n      this.drawerOverlay.setNativeProps({ pointerEvents: shouldCapture && !this._open ? 'auto' : 'none' })\n    }\n  }\n\n  setInteractionHandle() {\n    if (this._interactionHandle) InteractionManager.clearInteractionHandle(this._interactionHandle)\n    if (this.props.useInteractionManager) this._interactionHandle = InteractionManager.createInteractionHandle()\n  }\n\n  clearInteractionHandle() {\n    if (this._interactionHandle) InteractionManager.clearInteractionHandle(this._interactionHandle)\n  }\n\n  toggle = () => {\n    this._open ? this.close() : this.open()\n  };\n\n  handleSetViewport = (e) => {\n    let viewport = e.nativeEvent.layout\n    let oldViewport = this.state.viewport\n    if (viewport.width === oldViewport.width && viewport.height === oldViewport.height) return\n    let didRotationChange = viewport.width !== oldViewport.width\n    this.resync(viewport, null, didRotationChange)\n  };\n\n  resync = (viewport, props, didRotationChange) => {\n    if (didRotationChange) this._syncAfterUpdate = true\n    viewport = viewport || this.state.viewport\n    props = props || this.props\n    this._offsetClosed = this.getClosedOffset(props, viewport)\n    this._offsetOpen = this.getOpenOffset(props, viewport)\n    this.setState({ viewport })\n  };\n\n  requiresResync = (nextProps) => {\n    for (let i = 0; i < propsWhomRequireUpdate.length; i++) {\n      let key = propsWhomRequireUpdate[i]\n      if (this.props[key] !== nextProps[key]) return true\n    }\n  };\n\n  /*** DYNAMIC GETTERS ***/\n  getDeviceLength = (viewport = this.state.viewport) => this.isLeftOrRightSide() ? viewport.width : viewport.height;\n  getOpenLength = () => this.getDeviceLength() - this._offsetOpen;\n  getClosedLength = () => this._offsetClosed;\n  getMainWidth = (viewport = this.state.viewport) => {\n    return this.isLeftOrRightSide() ? viewport.width - this._offsetClosed : viewport.width;\n  };\n  getMainHeight = (viewport = this.state.viewport) => {\n    return this.isTopOrBottomSide() ? viewport.height - this._offsetClosed : viewport.height;\n  };\n  getDrawerWidth = (viewport = this.state.viewport) => {\n    return this.isLeftOrRightSide() ? viewport.width - this._offsetOpen : viewport.width;\n  };\n  getDrawerHeight = (viewport = this.state.viewport) => {\n    return this.isTopOrBottomSide() ? viewport.height - this._offsetOpen : viewport.height;\n  };\n  getOpenMask = (viewport = this.state.viewport) => {\n    if (this.props.panCloseMask && this.props.panCloseMask % 1 === 0) return this.props.panCloseMask\n    if (this.props.panCloseMask) return this.getDeviceLength(viewport) * this.props.panCloseMask\n    return Math.max(0.05, this._offsetOpen)\n  };\n  getClosedMask = () => {\n    if (this.props.panOpenMask && this.props.panOpenMask % 1 === 0) return this.props.panOpenMask\n    if (this.props.panOpenMask) return this.getDeviceLength() * this.props.panOpenMask\n    return Math.max(0.05, this._offsetClosed)\n  };\n  getOpenOffset = (props, viewport) => {\n    if (typeof props.openDrawerOffset === 'function') return props.openDrawerOffset(viewport)\n    return props.openDrawerOffset > 1 || props.openDrawerOffset < 0 ? props.openDrawerOffset : props.openDrawerOffset * this.getDeviceLength(viewport)\n  };\n  getClosedOffset = (props, viewport) => {\n    if (typeof props.closedDrawerOffset === 'function') return props.closedDrawerOffset(viewport)\n    return props.closedDrawerOffset > 1 || props.closedDrawerOffset < 0 ? props.closedDrawerOffset : props.closedDrawerOffset * this.getDeviceLength(viewport)\n  };\n  getGestureDelta = (gestureState) => this.isLeftOrRightSide() ? gestureState.dx : gestureState.dy;\n  getGestureDeltaOppositeAxis = (gestureState) => this.isLeftOrRightSide() ? gestureState.dy : gestureState.dx;\n  /*** END DYNAMIC GETTERS ***/\n\n  isLeftOrRightSide = () => {\n    if (I18nManager.isRTL) {\n      return [\"right\", \"left\"].includes(this.props.side)\n    } else {\n      return [\"left\", \"right\"].includes(this.props.side)\n    }\n  }\n  isTopOrBottomSide = () => [\"top\", \"bottom\"].includes(this.props.side);\n  isLeftOrTopSide = () => {\n    let side = \"left\";\n    if (I18nManager.isRTL) {\n      side = \"right\";\n    }\n    return [side, \"top\"].includes(this.props.side);\n  }\n  isRightOrBottomSide = () => {\n    let side = \"right\"\n    if (I18nManager.isRTL) {\n      side = \"left\"\n    }\n    return [side, \"bottom\"].includes(this.props.side);\n  }\n\n  render() {\n    let first = this.props.type === 'overlay' ? this.renderMain() : this.renderDrawer()\n    let second = this.props.type === 'overlay' ? this.renderDrawer() : this.renderMain()\n\n    return (\n      <View\n        key=\"drawerContainer\"\n        onLayout={this.handleSetViewport}\n        style={this.stylesheet.container}\n        >\n        {first}\n        {second}\n      </View>\n    )\n  }\n\n  renderMain() {\n    return (\n      <View\n        {...this.responder.panHandlers}\n        key=\"main\"\n        ref={c => this.main = c}\n        style={[this.stylesheet.main, {height: this.getMainHeight(), width: this.getMainWidth()}]}\n        >\n        {this.props.children}\n        <View\n          pointerEvents={ this._open && this.shouldCaptureGestures() ? 'auto' : 'none' }\n          ref={c => this.mainOverlay = c}\n          style={[styles.overlay, this.props.styles && this.props.styles.mainOverlay]}\n          />\n      </View>\n    )\n  }\n\n  renderDrawer() {\n    return (\n      <View\n        {...this.responder.panHandlers}\n        key=\"drawer\"\n        ref={c => this.drawer = c}\n        elevation={this.props.elevation}\n        style={[this.stylesheet.drawer, {height: this.getDrawerHeight(), width: this.getDrawerWidth()}]}\n        >\n        {this.props.content}\n        <View\n          pointerEvents={ !this._open && this.shouldCaptureGestures() ? 'auto' : 'none' }\n          ref={c => this.drawerOverlay = c}\n          style={[styles.overlay, this.props.styles && this.props.styles.drawerOverlay]}\n          />\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  overlay: {\n    right: 0,\n    left: 0,\n    top: 0,\n    bottom: 0,\n    position: 'absolute',\n    backgroundColor: 'transparent'\n  }\n})\n"]}