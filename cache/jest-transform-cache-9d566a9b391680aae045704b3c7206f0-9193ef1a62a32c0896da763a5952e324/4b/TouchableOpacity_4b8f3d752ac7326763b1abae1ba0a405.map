{"version":3,"sources":["TouchableOpacity.js"],"names":["Animated","require","Easing","NativeMethodsMixin","React","PropTypes","TimerMixin","Touchable","TouchableWithoutFeedback","createReactClass","ensurePositiveDelayProps","flattenStyle","PRESS_RETENTION_OFFSET","top","left","right","bottom","TouchableOpacity","displayName","mixins","Mixin","propTypes","activeOpacity","number","hasTVPreferredFocus","bool","tvParallaxProperties","object","getDefaultProps","getInitialState","touchableGetInitialState","anim","Value","_getChildStyleOpacityWithDefault","componentDidMount","props","UNSAFE_componentWillReceiveProps","nextProps","componentDidUpdate","prevProps","prevState","disabled","_opacityInactive","setOpacityTo","value","duration","timing","state","toValue","easing","inOut","quad","useNativeDriver","start","touchableHandleActivePressIn","e","dispatchConfig","registrationName","_opacityActive","onPressIn","touchableHandleActivePressOut","onPressOut","touchableHandlePress","onPress","touchableHandleLongPress","onLongPress","touchableGetPressRectOffset","pressRetentionOffset","touchableGetHitSlop","hitSlop","touchableGetHighlightDelayMS","delayPressIn","touchableGetLongPressDelayMS","delayLongPress","touchableGetPressOutDelayMS","delayPressOut","childStyle","style","opacity","undefined","render","accessible","accessibilityLabel","accessibilityHint","accessibilityRole","accessibilityStates","nativeID","testID","onLayout","touchableHandleStartShouldSetResponder","touchableHandleResponderTerminationRequest","touchableHandleResponderGrant","touchableHandleResponderMove","touchableHandleResponderRelease","touchableHandleResponderTerminate","children","renderDebugView","color","module","exports"],"mappings":"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","file":"TouchableOpacity.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst Animated = require('Animated');\nconst Easing = require('Easing');\nconst NativeMethodsMixin = require('NativeMethodsMixin');\nconst React = require('React');\nconst PropTypes = require('prop-types');\nconst TimerMixin = require('react-timer-mixin');\nconst Touchable = require('Touchable');\nconst TouchableWithoutFeedback = require('TouchableWithoutFeedback');\n\nconst createReactClass = require('create-react-class');\nconst ensurePositiveDelayProps = require('ensurePositiveDelayProps');\nconst flattenStyle = require('flattenStyle');\n\nimport type {Props as TouchableWithoutFeedbackProps} from 'TouchableWithoutFeedback';\nimport type {ViewStyleProp} from 'StyleSheet';\n\ntype Event = Object;\n\nconst PRESS_RETENTION_OFFSET = {top: 20, left: 20, right: 20, bottom: 30};\n\ntype TVProps = $ReadOnly<{|\n  hasTVPreferredFocus?: ?boolean,\n  tvParallaxProperties?: ?Object,\n|}>;\n\ntype Props = $ReadOnly<{|\n  ...TouchableWithoutFeedbackProps,\n  ...TVProps,\n  activeOpacity?: ?number,\n  style?: ?ViewStyleProp,\n|}>;\n\n/**\n * A wrapper for making views respond properly to touches.\n * On press down, the opacity of the wrapped view is decreased, dimming it.\n *\n * Opacity is controlled by wrapping the children in an Animated.View, which is\n * added to the view hiearchy.  Be aware that this can affect layout.\n *\n * Example:\n *\n * ```\n * renderButton: function() {\n *   return (\n *     <TouchableOpacity onPress={this._onPressButton}>\n *       <Image\n *         style={styles.button}\n *         source={require('./myButton.png')}\n *       />\n *     </TouchableOpacity>\n *   );\n * },\n * ```\n * ### Example\n *\n * ```ReactNativeWebPlayer\n * import React, { Component } from 'react'\n * import {\n *   AppRegistry,\n *   StyleSheet,\n *   TouchableOpacity,\n *   Text,\n *   View,\n * } from 'react-native'\n *\n * class App extends Component {\n *   constructor(props) {\n *     super(props)\n *     this.state = { count: 0 }\n *   }\n *\n *   onPress = () => {\n *     this.setState({\n *       count: this.state.count+1\n *     })\n *   }\n *\n *  render() {\n *    return (\n *      <View style={styles.container}>\n *        <TouchableOpacity\n *          style={styles.button}\n *          onPress={this.onPress}\n *        >\n *          <Text> Touch Here </Text>\n *        </TouchableOpacity>\n *        <View style={[styles.countContainer]}>\n *          <Text style={[styles.countText]}>\n *             { this.state.count !== 0 ? this.state.count: null}\n *           </Text>\n *         </View>\n *       </View>\n *     )\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'center',\n *     paddingHorizontal: 10\n *   },\n *   button: {\n *     alignItems: 'center',\n *     backgroundColor: '#DDDDDD',\n *     padding: 10\n *   },\n *   countContainer: {\n *     alignItems: 'center',\n *     padding: 10\n *   },\n *   countText: {\n *     color: '#FF00FF'\n *   }\n * })\n *\n * AppRegistry.registerComponent('App', () => App)\n * ```\n *\n */\nconst TouchableOpacity = ((createReactClass({\n  displayName: 'TouchableOpacity',\n  mixins: [TimerMixin, Touchable.Mixin, NativeMethodsMixin],\n\n  propTypes: {\n    ...TouchableWithoutFeedback.propTypes,\n    /**\n     * Determines what the opacity of the wrapped view should be when touch is\n     * active. Defaults to 0.2.\n     */\n    activeOpacity: PropTypes.number,\n    /**\n     * TV preferred focus (see documentation for the View component).\n     */\n    hasTVPreferredFocus: PropTypes.bool,\n    /**\n     * Apple TV parallax effects\n     */\n    tvParallaxProperties: PropTypes.object,\n  },\n\n  getDefaultProps: function() {\n    return {\n      activeOpacity: 0.2,\n    };\n  },\n\n  getInitialState: function() {\n    return {\n      ...this.touchableGetInitialState(),\n      anim: new Animated.Value(this._getChildStyleOpacityWithDefault()),\n    };\n  },\n\n  componentDidMount: function() {\n    ensurePositiveDelayProps(this.props);\n  },\n\n  UNSAFE_componentWillReceiveProps: function(nextProps) {\n    ensurePositiveDelayProps(nextProps);\n  },\n\n  componentDidUpdate: function(prevProps, prevState) {\n    if (this.props.disabled !== prevProps.disabled) {\n      this._opacityInactive(250);\n    }\n  },\n\n  /**\n   * Animate the touchable to a new opacity.\n   */\n  setOpacityTo: function(value: number, duration: number) {\n    Animated.timing(this.state.anim, {\n      toValue: value,\n      duration: duration,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: true,\n    }).start();\n  },\n\n  /**\n   * `Touchable.Mixin` self callbacks. The mixin will invoke these if they are\n   * defined on your component.\n   */\n  touchableHandleActivePressIn: function(e: Event) {\n    if (e.dispatchConfig.registrationName === 'onResponderGrant') {\n      this._opacityActive(0);\n    } else {\n      this._opacityActive(150);\n    }\n    this.props.onPressIn && this.props.onPressIn(e);\n  },\n\n  touchableHandleActivePressOut: function(e: Event) {\n    this._opacityInactive(250);\n    this.props.onPressOut && this.props.onPressOut(e);\n  },\n\n  touchableHandlePress: function(e: Event) {\n    this.props.onPress && this.props.onPress(e);\n  },\n\n  touchableHandleLongPress: function(e: Event) {\n    this.props.onLongPress && this.props.onLongPress(e);\n  },\n\n  touchableGetPressRectOffset: function() {\n    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n\n  touchableGetHitSlop: function() {\n    return this.props.hitSlop;\n  },\n\n  touchableGetHighlightDelayMS: function() {\n    return this.props.delayPressIn || 0;\n  },\n\n  touchableGetLongPressDelayMS: function() {\n    return this.props.delayLongPress === 0\n      ? 0\n      : this.props.delayLongPress || 500;\n  },\n\n  touchableGetPressOutDelayMS: function() {\n    return this.props.delayPressOut;\n  },\n\n  _opacityActive: function(duration: number) {\n    this.setOpacityTo(this.props.activeOpacity, duration);\n  },\n\n  _opacityInactive: function(duration: number) {\n    this.setOpacityTo(this._getChildStyleOpacityWithDefault(), duration);\n  },\n\n  _getChildStyleOpacityWithDefault: function() {\n    const childStyle = flattenStyle(this.props.style) || {};\n    return childStyle.opacity == undefined ? 1 : childStyle.opacity;\n  },\n\n  render: function() {\n    return (\n      <Animated.View\n        accessible={this.props.accessible !== false}\n        accessibilityLabel={this.props.accessibilityLabel}\n        accessibilityHint={this.props.accessibilityHint}\n        accessibilityRole={this.props.accessibilityRole}\n        accessibilityStates={this.props.accessibilityStates}\n        style={[this.props.style, {opacity: this.state.anim}]}\n        nativeID={this.props.nativeID}\n        testID={this.props.testID}\n        onLayout={this.props.onLayout}\n        isTVSelectable={true}\n        hasTVPreferredFocus={this.props.hasTVPreferredFocus}\n        tvParallaxProperties={this.props.tvParallaxProperties}\n        hitSlop={this.props.hitSlop}\n        onStartShouldSetResponder={this.touchableHandleStartShouldSetResponder}\n        onResponderTerminationRequest={\n          this.touchableHandleResponderTerminationRequest\n        }\n        onResponderGrant={this.touchableHandleResponderGrant}\n        onResponderMove={this.touchableHandleResponderMove}\n        onResponderRelease={this.touchableHandleResponderRelease}\n        onResponderTerminate={this.touchableHandleResponderTerminate}>\n        {this.props.children}\n        {Touchable.renderDebugView({\n          color: 'cyan',\n          hitSlop: this.props.hitSlop,\n        })}\n      </Animated.View>\n    );\n  },\n}): any): React.ComponentType<Props>);\n\nmodule.exports = TouchableOpacity;\n"]}