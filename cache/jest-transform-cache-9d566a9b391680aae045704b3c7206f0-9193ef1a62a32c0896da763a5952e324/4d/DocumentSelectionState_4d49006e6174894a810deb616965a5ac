596d312724becab006f9a0faa32dad5f










'use strict';var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}

var mixInEventEmitter = require('mixInEventEmitter');var










DocumentSelectionState = function () {




  function DocumentSelectionState(anchor, focus) {_classCallCheck(this, DocumentSelectionState);
    this._anchorOffset = anchor;
    this._focusOffset = focus;
    this._hasFocus = false;
  }_createClass(DocumentSelectionState, [{ key: 'update', value: function update(








    anchor, focus) {
      if (this._anchorOffset !== anchor || this._focusOffset !== focus) {
        this._anchorOffset = anchor;
        this._focusOffset = focus;
        this.emit('update');
      }
    } }, { key: 'constrainLength', value: function constrainLength(







    maxLength) {
      this.update(
      Math.min(this._anchorOffset, maxLength),
      Math.min(this._focusOffset, maxLength));

    } }, { key: 'focus', value: function focus()

    {
      if (!this._hasFocus) {
        this._hasFocus = true;
        this.emit('focus');
      }
    } }, { key: 'blur', value: function blur()

    {
      if (this._hasFocus) {
        this._hasFocus = false;
        this.emit('blur');
      }
    } }, { key: 'hasFocus', value: function hasFocus()




    {
      return this._hasFocus;
    } }, { key: 'isCollapsed', value: function isCollapsed()




    {
      return this._anchorOffset === this._focusOffset;
    } }, { key: 'isBackward', value: function isBackward()




    {
      return this._anchorOffset > this._focusOffset;
    } }, { key: 'getAnchorOffset', value: function getAnchorOffset()




    {
      return this._hasFocus ? this._anchorOffset : null;
    } }, { key: 'getFocusOffset', value: function getFocusOffset()




    {
      return this._hasFocus ? this._focusOffset : null;
    } }, { key: 'getStartOffset', value: function getStartOffset()




    {
      return this._hasFocus ?
      Math.min(this._anchorOffset, this._focusOffset) :
      null;
    } }, { key: 'getEndOffset', value: function getEndOffset()




    {
      return this._hasFocus ?
      Math.max(this._anchorOffset, this._focusOffset) :
      null;
    } }, { key: 'overlaps', value: function overlaps(






    start, end) {
      return (
        this.hasFocus() &&
        this.getStartOffset() <= end &&
        start <= this.getEndOffset());

    } }]);return DocumentSelectionState;}();


mixInEventEmitter(DocumentSelectionState, {
  blur: true,
  focus: true,
  update: true });


module.exports = DocumentSelectionState;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRvY3VtZW50U2VsZWN0aW9uU3RhdGUuanMiXSwibmFtZXMiOlsibWl4SW5FdmVudEVtaXR0ZXIiLCJyZXF1aXJlIiwiRG9jdW1lbnRTZWxlY3Rpb25TdGF0ZSIsImFuY2hvciIsImZvY3VzIiwiX2FuY2hvck9mZnNldCIsIl9mb2N1c09mZnNldCIsIl9oYXNGb2N1cyIsImVtaXQiLCJtYXhMZW5ndGgiLCJ1cGRhdGUiLCJNYXRoIiwibWluIiwibWF4Iiwic3RhcnQiLCJlbmQiLCJoYXNGb2N1cyIsImdldFN0YXJ0T2Zmc2V0IiwiZ2V0RW5kT2Zmc2V0IiwiYmx1ciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFVQSxhOztBQUVBLElBQU1BLG9CQUFvQkMsUUFBUSxtQkFBUixDQUExQixDOzs7Ozs7Ozs7OztBQVdNQyxzQjs7Ozs7QUFLSixrQ0FBWUMsTUFBWixFQUFvQkMsS0FBcEIsRUFBMkI7QUFDekIsU0FBS0MsYUFBTCxHQUFxQkYsTUFBckI7QUFDQSxTQUFLRyxZQUFMLEdBQW9CRixLQUFwQjtBQUNBLFNBQUtHLFNBQUwsR0FBaUIsS0FBakI7QUFDRCxHOzs7Ozs7Ozs7QUFTTUosVSxFQUFRQyxLLEVBQU87QUFDcEIsVUFBSSxLQUFLQyxhQUFMLEtBQXVCRixNQUF2QixJQUFpQyxLQUFLRyxZQUFMLEtBQXNCRixLQUEzRCxFQUFrRTtBQUNoRSxhQUFLQyxhQUFMLEdBQXFCRixNQUFyQjtBQUNBLGFBQUtHLFlBQUwsR0FBb0JGLEtBQXBCO0FBQ0EsYUFBS0ksSUFBTCxDQUFVLFFBQVY7QUFDRDtBQUNGLEs7Ozs7Ozs7O0FBUWVDLGEsRUFBVztBQUN6QixXQUFLQyxNQUFMO0FBQ0VDLFdBQUtDLEdBQUwsQ0FBUyxLQUFLUCxhQUFkLEVBQTZCSSxTQUE3QixDQURGO0FBRUVFLFdBQUtDLEdBQUwsQ0FBUyxLQUFLTixZQUFkLEVBQTRCRyxTQUE1QixDQUZGOztBQUlELEs7O0FBRU87QUFDTixVQUFJLENBQUMsS0FBS0YsU0FBVixFQUFxQjtBQUNuQixhQUFLQSxTQUFMLEdBQWlCLElBQWpCO0FBQ0EsYUFBS0MsSUFBTCxDQUFVLE9BQVY7QUFDRDtBQUNGLEs7O0FBRU07QUFDTCxVQUFJLEtBQUtELFNBQVQsRUFBb0I7QUFDbEIsYUFBS0EsU0FBTCxHQUFpQixLQUFqQjtBQUNBLGFBQUtDLElBQUwsQ0FBVSxNQUFWO0FBQ0Q7QUFDRixLOzs7OztBQUtVO0FBQ1QsYUFBTyxLQUFLRCxTQUFaO0FBQ0QsSzs7Ozs7QUFLYTtBQUNaLGFBQU8sS0FBS0YsYUFBTCxLQUF1QixLQUFLQyxZQUFuQztBQUNELEs7Ozs7O0FBS1k7QUFDWCxhQUFPLEtBQUtELGFBQUwsR0FBcUIsS0FBS0MsWUFBakM7QUFDRCxLOzs7OztBQUtpQjtBQUNoQixhQUFPLEtBQUtDLFNBQUwsR0FBaUIsS0FBS0YsYUFBdEIsR0FBc0MsSUFBN0M7QUFDRCxLOzs7OztBQUtnQjtBQUNmLGFBQU8sS0FBS0UsU0FBTCxHQUFpQixLQUFLRCxZQUF0QixHQUFxQyxJQUE1QztBQUNELEs7Ozs7O0FBS2dCO0FBQ2YsYUFBTyxLQUFLQyxTQUFMO0FBQ0hJLFdBQUtDLEdBQUwsQ0FBUyxLQUFLUCxhQUFkLEVBQTZCLEtBQUtDLFlBQWxDLENBREc7QUFFSCxVQUZKO0FBR0QsSzs7Ozs7QUFLYztBQUNiLGFBQU8sS0FBS0MsU0FBTDtBQUNISSxXQUFLRSxHQUFMLENBQVMsS0FBS1IsYUFBZCxFQUE2QixLQUFLQyxZQUFsQyxDQURHO0FBRUgsVUFGSjtBQUdELEs7Ozs7Ozs7QUFPUVEsUyxFQUFPQyxHLEVBQUs7QUFDbkI7QUFDRSxhQUFLQyxRQUFMO0FBQ0EsYUFBS0MsY0FBTCxNQUF5QkYsR0FEekI7QUFFQUQsaUJBQVMsS0FBS0ksWUFBTCxFQUhYOztBQUtELEs7OztBQUdIbEIsa0JBQWtCRSxzQkFBbEIsRUFBMEM7QUFDeENpQixRQUFNLElBRGtDO0FBRXhDZixTQUFPLElBRmlDO0FBR3hDTSxVQUFRLElBSGdDLEVBQTFDOzs7QUFNQVUsT0FBT0MsT0FBUCxHQUFpQm5CLHNCQUFqQiIsImZpbGUiOiJEb2N1bWVudFNlbGVjdGlvblN0YXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBAdHlwZWNoZWNrc1xuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgbWl4SW5FdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdtaXhJbkV2ZW50RW1pdHRlcicpO1xuXG4vKipcbiAqIERvY3VtZW50U2VsZWN0aW9uU3RhdGUgaXMgcmVzcG9uc2libGUgZm9yIG1haW50YWluaW5nIHNlbGVjdGlvbiBpbmZvcm1hdGlvblxuICogZm9yIGEgZG9jdW1lbnQuXG4gKlxuICogSXQgaXMgaW50ZW5kZWQgZm9yIHVzZSBieSBBYnN0cmFjdFRleHRFZGl0b3ItYmFzZWQgY29tcG9uZW50cyBmb3JcbiAqIGlkZW50aWZ5aW5nIHRoZSBhcHByb3ByaWF0ZSBzdGFydC9lbmQgcG9zaXRpb25zIHRvIG1vZGlmeSB0aGVcbiAqIERvY3VtZW50Q29udGVudCwgYW5kIGZvciBwcm9ncmFtbWF0aWNhbGx5IHNldHRpbmcgYnJvd3NlciBzZWxlY3Rpb24gd2hlblxuICogY29tcG9uZW50cyByZS1yZW5kZXIuXG4gKi9cbmNsYXNzIERvY3VtZW50U2VsZWN0aW9uU3RhdGUge1xuICAvKipcbiAgICogQHBhcmFtIHtudW1iZXJ9IGFuY2hvclxuICAgKiBAcGFyYW0ge251bWJlcn0gZm9jdXNcbiAgICovXG4gIGNvbnN0cnVjdG9yKGFuY2hvciwgZm9jdXMpIHtcbiAgICB0aGlzLl9hbmNob3JPZmZzZXQgPSBhbmNob3I7XG4gICAgdGhpcy5fZm9jdXNPZmZzZXQgPSBmb2N1cztcbiAgICB0aGlzLl9oYXNGb2N1cyA9IGZhbHNlO1xuICB9XG5cbiAgLyoqXG4gICAqIEFwcGx5IGFuIHVwZGF0ZSB0byB0aGUgc3RhdGUuIElmIGVpdGhlciBvZmZzZXQgdmFsdWUgaGFzIGNoYW5nZWQsXG4gICAqIHNldCB0aGUgdmFsdWVzIGFuZCBlbWl0IHRoZSBgY2hhbmdlYCBldmVudC4gT3RoZXJ3aXNlIG5vLW9wLlxuICAgKlxuICAgKiBAcGFyYW0ge251bWJlcn0gYW5jaG9yXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBmb2N1c1xuICAgKi9cbiAgdXBkYXRlKGFuY2hvciwgZm9jdXMpIHtcbiAgICBpZiAodGhpcy5fYW5jaG9yT2Zmc2V0ICE9PSBhbmNob3IgfHwgdGhpcy5fZm9jdXNPZmZzZXQgIT09IGZvY3VzKSB7XG4gICAgICB0aGlzLl9hbmNob3JPZmZzZXQgPSBhbmNob3I7XG4gICAgICB0aGlzLl9mb2N1c09mZnNldCA9IGZvY3VzO1xuICAgICAgdGhpcy5lbWl0KCd1cGRhdGUnKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogR2l2ZW4gYSBtYXggdGV4dCBsZW5ndGgsIGNvbnN0cmFpbiBvdXIgc2VsZWN0aW9uIG9mZnNldHMgdG8gZW5zdXJlXG4gICAqIHRoYXQgdGhlIHNlbGVjdGlvbiByZW1haW5zIHN0cmljdGx5IHdpdGhpbiB0aGUgdGV4dCByYW5nZS5cbiAgICpcbiAgICogQHBhcmFtIHtudW1iZXJ9IG1heExlbmd0aFxuICAgKi9cbiAgY29uc3RyYWluTGVuZ3RoKG1heExlbmd0aCkge1xuICAgIHRoaXMudXBkYXRlKFxuICAgICAgTWF0aC5taW4odGhpcy5fYW5jaG9yT2Zmc2V0LCBtYXhMZW5ndGgpLFxuICAgICAgTWF0aC5taW4odGhpcy5fZm9jdXNPZmZzZXQsIG1heExlbmd0aCksXG4gICAgKTtcbiAgfVxuXG4gIGZvY3VzKCkge1xuICAgIGlmICghdGhpcy5faGFzRm9jdXMpIHtcbiAgICAgIHRoaXMuX2hhc0ZvY3VzID0gdHJ1ZTtcbiAgICAgIHRoaXMuZW1pdCgnZm9jdXMnKTtcbiAgICB9XG4gIH1cblxuICBibHVyKCkge1xuICAgIGlmICh0aGlzLl9oYXNGb2N1cykge1xuICAgICAgdGhpcy5faGFzRm9jdXMgPSBmYWxzZTtcbiAgICAgIHRoaXMuZW1pdCgnYmx1cicpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHtib29sZWFufVxuICAgKi9cbiAgaGFzRm9jdXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2hhc0ZvY3VzO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAqL1xuICBpc0NvbGxhcHNlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5fYW5jaG9yT2Zmc2V0ID09PSB0aGlzLl9mb2N1c09mZnNldDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHtib29sZWFufVxuICAgKi9cbiAgaXNCYWNrd2FyZCgpIHtcbiAgICByZXR1cm4gdGhpcy5fYW5jaG9yT2Zmc2V0ID4gdGhpcy5fZm9jdXNPZmZzZXQ7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7P251bWJlcn1cbiAgICovXG4gIGdldEFuY2hvck9mZnNldCgpIHtcbiAgICByZXR1cm4gdGhpcy5faGFzRm9jdXMgPyB0aGlzLl9hbmNob3JPZmZzZXQgOiBudWxsO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4gez9udW1iZXJ9XG4gICAqL1xuICBnZXRGb2N1c09mZnNldCgpIHtcbiAgICByZXR1cm4gdGhpcy5faGFzRm9jdXMgPyB0aGlzLl9mb2N1c09mZnNldCA6IG51bGw7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7P251bWJlcn1cbiAgICovXG4gIGdldFN0YXJ0T2Zmc2V0KCkge1xuICAgIHJldHVybiB0aGlzLl9oYXNGb2N1c1xuICAgICAgPyBNYXRoLm1pbih0aGlzLl9hbmNob3JPZmZzZXQsIHRoaXMuX2ZvY3VzT2Zmc2V0KVxuICAgICAgOiBudWxsO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4gez9udW1iZXJ9XG4gICAqL1xuICBnZXRFbmRPZmZzZXQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2hhc0ZvY3VzXG4gICAgICA/IE1hdGgubWF4KHRoaXMuX2FuY2hvck9mZnNldCwgdGhpcy5fZm9jdXNPZmZzZXQpXG4gICAgICA6IG51bGw7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtudW1iZXJ9IHN0YXJ0XG4gICAqIEBwYXJhbSB7bnVtYmVyfSBlbmRcbiAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICovXG4gIG92ZXJsYXBzKHN0YXJ0LCBlbmQpIHtcbiAgICByZXR1cm4gKFxuICAgICAgdGhpcy5oYXNGb2N1cygpICYmXG4gICAgICB0aGlzLmdldFN0YXJ0T2Zmc2V0KCkgPD0gZW5kICYmXG4gICAgICBzdGFydCA8PSB0aGlzLmdldEVuZE9mZnNldCgpXG4gICAgKTtcbiAgfVxufVxuXG5taXhJbkV2ZW50RW1pdHRlcihEb2N1bWVudFNlbGVjdGlvblN0YXRlLCB7XG4gIGJsdXI6IHRydWUsXG4gIGZvY3VzOiB0cnVlLFxuICB1cGRhdGU6IHRydWUsXG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBEb2N1bWVudFNlbGVjdGlvblN0YXRlO1xuIl19