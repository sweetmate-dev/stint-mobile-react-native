{"version":3,"sources":["TouchableWithoutFeedback.js"],"names":["EdgeInsetsPropType","require","React","PropTypes","TimerMixin","Touchable","View","createReactClass","ensurePositiveDelayProps","warning","AccessibilityComponentTypes","AccessibilityRoles","AccessibilityStates","AccessibilityTraits","PRESS_RETENTION_OFFSET","top","left","right","bottom","TouchableWithoutFeedback","displayName","mixins","Mixin","propTypes","accessible","bool","accessibilityLabel","node","accessibilityHint","string","accessibilityComponentType","oneOf","accessibilityRole","accessibilityStates","arrayOf","accessibilityTraits","oneOfType","onFocus","func","onBlur","disabled","onPress","onPressIn","onPressOut","onLayout","onLongPress","nativeID","testID","delayPressIn","number","delayPressOut","delayLongPress","pressRetentionOffset","hitSlop","getInitialState","touchableGetInitialState","componentDidMount","props","UNSAFE_componentWillReceiveProps","nextProps","touchableHandlePress","e","touchableHandleActivePressIn","touchableHandleActivePressOut","touchableHandleLongPress","touchableGetPressRectOffset","touchableGetHitSlop","touchableGetHighlightDelayMS","touchableGetLongPressDelayMS","touchableGetPressOutDelayMS","render","child","Children","only","children","TOUCH_TARGET_DEBUG","type","toArray","push","renderDebugView","color","cloneElement","onStartShouldSetResponder","touchableHandleStartShouldSetResponder","onResponderTerminationRequest","touchableHandleResponderTerminationRequest","onResponderGrant","touchableHandleResponderGrant","onResponderMove","touchableHandleResponderMove","onResponderRelease","touchableHandleResponderRelease","onResponderTerminate","touchableHandleResponderTerminate","module","exports"],"mappings":";;;;;;;;;;AAUA;;AAEA,IAAMA,qBAAqBC,QAAQ,oBAAR,CAA3B;AACA,IAAMC,QAAQD,QAAQ,OAAR,CAAd;AACA,IAAME,YAAYF,QAAQ,YAAR,CAAlB;AACA,IAAMG,aAAaH,QAAQ,mBAAR,CAAnB;AACA,IAAMI,YAAYJ,QAAQ,WAAR,CAAlB;AACA,IAAMK,OAAOL,QAAQ,MAAR,CAAb;;AAEA,IAAMM,mBAAmBN,QAAQ,oBAAR,CAAzB;AACA,IAAMO,2BAA2BP,QAAQ,0BAAR,CAAjC;AACA,IAAMQ,UAAUR,QAAQ,kBAAR,CAAhB,C;;;;;;;AAOIA,QAAQ,mBAAR,C,CAJFS,2B,YAAAA,2B,CACAC,kB,YAAAA,kB,CACAC,mB,YAAAA,mB,CACAC,mB,YAAAA,mB;;;;;;;;;;;AAYF,IAAMC,yBAAyB,EAACC,KAAK,EAAN,EAAUC,MAAM,EAAhB,EAAoBC,OAAO,EAA3B,EAA+BC,QAAQ,EAAvC,EAA/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,IAAMC,2BAA6BZ,iBAAiB;AAClDa,eAAa,0BADqC;AAElDC,UAAQ,CAACjB,UAAD,EAAaC,UAAUiB,KAAvB,CAF0C;;AAIlDC,aAAW;AACTC,gBAAYrB,UAAUsB,IADb;AAETC,wBAAoBvB,UAAUwB,IAFrB;AAGTC,uBAAmBzB,UAAU0B,MAHpB;AAITC,gCAA4B3B,UAAU4B,KAAV,CAAgBrB,2BAAhB,CAJnB;AAKTsB,uBAAmB7B,UAAU4B,KAAV,CAAgBpB,kBAAhB,CALV;AAMTsB,yBAAqB9B,UAAU+B,OAAV;AACnB/B,cAAU4B,KAAV,CAAgBnB,mBAAhB,CADmB,CANZ;;AASTuB,yBAAqBhC,UAAUiC,SAAV,CAAoB;AACvCjC,cAAU4B,KAAV,CAAgBlB,mBAAhB,CADuC;AAEvCV,cAAU+B,OAAV,CAAkB/B,UAAU4B,KAAV,CAAgBlB,mBAAhB,CAAlB,CAFuC,CAApB,CATZ;;;;;;;AAkBTwB,aAASlC,UAAUmC,IAlBV;;;;;;AAwBTC,YAAQpC,UAAUmC,IAxBT;;;;AA4BTE,cAAUrC,UAAUsB,IA5BX;;;;;AAiCTgB,aAAStC,UAAUmC,IAjCV;;;;;AAsCTI,eAAWvC,UAAUmC,IAtCZ;;;;AA0CTK,gBAAYxC,UAAUmC,IA1Cb;;;;;;AAgDTM,cAAUzC,UAAUmC,IAhDX;;AAkDTO,iBAAa1C,UAAUmC,IAlDd;;AAoDTQ,cAAU3C,UAAU0B,MApDX;AAqDTkB,YAAQ5C,UAAU0B,MArDT;;;;;AA0DTmB,kBAAc7C,UAAU8C,MA1Df;;;;AA8DTC,mBAAe/C,UAAU8C,MA9DhB;;;;AAkETE,oBAAgBhD,UAAU8C,MAlEjB;;;;;;;;AA0ETG,0BAAsBpD,kBA1Eb;;;;;;;;;AAmFTqD,aAASrD,kBAnFA,EAJuC;;;AA0FlDsD,mBAAiB,2BAAW;AAC1B,WAAO,KAAKC,wBAAL,EAAP;AACD,GA5FiD;;AA8FlDC,qBAAmB,6BAAW;AAC5BhD,6BAAyB,KAAKiD,KAA9B;AACD,GAhGiD;;AAkGlDC,oCAAkC,0CAASC,SAAT,EAA4B;AAC5DnD,6BAAyBmD,SAAzB;AACD,GApGiD;;;;;;AA0GlDC,wBAAsB,8BAASC,CAAT,EAAwB;AAC5C,SAAKJ,KAAL,CAAWhB,OAAX,IAAsB,KAAKgB,KAAL,CAAWhB,OAAX,CAAmBoB,CAAnB,CAAtB;AACD,GA5GiD;;AA8GlDC,gCAA8B,sCAASD,CAAT,EAAwB;AACpD,SAAKJ,KAAL,CAAWf,SAAX,IAAwB,KAAKe,KAAL,CAAWf,SAAX,CAAqBmB,CAArB,CAAxB;AACD,GAhHiD;;AAkHlDE,iCAA+B,uCAASF,CAAT,EAAwB;AACrD,SAAKJ,KAAL,CAAWd,UAAX,IAAyB,KAAKc,KAAL,CAAWd,UAAX,CAAsBkB,CAAtB,CAAzB;AACD,GApHiD;;AAsHlDG,4BAA0B,kCAASH,CAAT,EAAwB;AAChD,SAAKJ,KAAL,CAAWZ,WAAX,IAA0B,KAAKY,KAAL,CAAWZ,WAAX,CAAuBgB,CAAvB,CAA1B;AACD,GAxHiD;;AA0HlDI,+BAA6B,uCAA0C;;AAErE,WAAO,KAAKR,KAAL,CAAWL,oBAAX,IAAmCtC,sBAA1C;AACD,GA7HiD;;AA+HlDoD,uBAAqB,+BAAoB;AACvC,WAAO,KAAKT,KAAL,CAAWJ,OAAlB;AACD,GAjIiD;;AAmIlDc,gCAA8B,wCAAmB;AAC/C,WAAO,KAAKV,KAAL,CAAWT,YAAX,IAA2B,CAAlC;AACD,GArIiD;;AAuIlDoB,gCAA8B,wCAAmB;AAC/C,WAAO,KAAKX,KAAL,CAAWN,cAAX,KAA8B,CAA9B;AACH,KADG;AAEH,SAAKM,KAAL,CAAWN,cAAX,IAA6B,GAFjC;AAGD,GA3IiD;;AA6IlDkB,+BAA6B,uCAAmB;AAC9C,WAAO,KAAKZ,KAAL,CAAWP,aAAX,IAA4B,CAAnC;AACD,GA/IiD;;AAiJlDoB,UAAQ,kBAA+B;;;AAGrC,QAAMC,QAAQrE,MAAMsE,QAAN,CAAeC,IAAf,CAAoB,KAAKhB,KAAL,CAAWiB,QAA/B,CAAd;AACA,QAAIA,WAAWH,MAAMd,KAAN,CAAYiB,QAA3B;AACA,QAAIrE,UAAUsE,kBAAV,IAAgCJ,MAAMK,IAAN,KAAetE,IAAnD,EAAyD;AACvDoE,iBAAWxE,MAAMsE,QAAN,CAAeK,OAAf,CAAuBH,QAAvB,CAAX;AACAA,eAASI,IAAT;AACEzE,gBAAU0E,eAAV,CAA0B,EAACC,OAAO,KAAR,EAAe3B,SAAS,KAAKI,KAAL,CAAWJ,OAAnC,EAA1B,CADF;;AAGD;AACD,WAAQnD,KAAD,CAAa+E,YAAb,CAA0BV,KAA1B,EAAiC;AACtC/C,kBAAY,KAAKiC,KAAL,CAAWjC,UAAX,KAA0B,KADA;AAEtCE,0BAAoB,KAAK+B,KAAL,CAAW/B,kBAFO;AAGtCE,yBAAmB,KAAK6B,KAAL,CAAW7B,iBAHQ;AAItCE,kCAA4B,KAAK2B,KAAL,CAAW3B,0BAJD;AAKtCE,yBAAmB,KAAKyB,KAAL,CAAWzB,iBALQ;AAMtCC,2BAAqB,KAAKwB,KAAL,CAAWxB,mBANM;AAOtCE,2BAAqB,KAAKsB,KAAL,CAAWtB,mBAPM;AAQtCW,gBAAU,KAAKW,KAAL,CAAWX,QARiB;AAStCC,cAAQ,KAAKU,KAAL,CAAWV,MATmB;AAUtCH,gBAAU,KAAKa,KAAL,CAAWb,QAViB;AAWtCS,eAAS,KAAKI,KAAL,CAAWJ,OAXkB;AAYtC6B,iCAA2B,KAAKC,sCAZM;AAatCC,qCAA+B;AAC5BC,gDAdmC;AAetCC,wBAAkB,KAAKC,6BAfe;AAgBtCC,uBAAiB,KAAKC,4BAhBgB;AAiBtCC,0BAAoB,KAAKC,+BAjBa;AAkBtCC,4BAAsB,KAAKC,iCAlBW;AAmBtCnB,wBAnBsC,EAAjC,CAAP;;AAqBD,GAjLiD,EAAjB,CAAnC;;;AAoLAoB,OAAOC,OAAP,GAAiB5E,wBAAjB","file":"TouchableWithoutFeedback.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst EdgeInsetsPropType = require('EdgeInsetsPropType');\nconst React = require('React');\nconst PropTypes = require('prop-types');\nconst TimerMixin = require('react-timer-mixin');\nconst Touchable = require('Touchable');\nconst View = require('View');\n\nconst createReactClass = require('create-react-class');\nconst ensurePositiveDelayProps = require('ensurePositiveDelayProps');\nconst warning = require('fbjs/lib/warning');\n\nconst {\n  AccessibilityComponentTypes,\n  AccessibilityRoles,\n  AccessibilityStates,\n  AccessibilityTraits,\n} = require('ViewAccessibility');\n\nimport type {PressEvent} from 'CoreEventTypes';\nimport type {EdgeInsetsProp} from 'EdgeInsetsPropType';\nimport type {\n  AccessibilityComponentType,\n  AccessibilityRole,\n  AccessibilityStates as AccessibilityStatesFlow,\n  AccessibilityTraits as AccessibilityTraitsFlow,\n} from 'ViewAccessibility';\n\nconst PRESS_RETENTION_OFFSET = {top: 20, left: 20, right: 20, bottom: 30};\n\nexport type Props = $ReadOnly<{|\n  accessible?: ?boolean,\n  accessibilityComponentType?: ?AccessibilityComponentType,\n  accessibilityLabel?:\n    | null\n    | React$PropType$Primitive<any>\n    | string\n    | Array<any>\n    | any,\n  accessibilityHint?: string,\n  accessibilityRole?: ?AccessibilityRole,\n  accessibilityStates?: ?AccessibilityStatesFlow,\n  accessibilityTraits?: ?AccessibilityTraitsFlow,\n  children?: ?React.Node,\n  delayLongPress?: ?number,\n  delayPressIn?: ?number,\n  delayPressOut?: ?number,\n  disabled?: ?boolean,\n  hitSlop?: ?EdgeInsetsProp,\n  nativeID?: ?string,\n  onLayout?: ?Function,\n  onLongPress?: ?Function,\n  onPress?: ?Function,\n  onPressIn?: ?Function,\n  onPressOut?: ?Function,\n  pressRetentionOffset?: ?EdgeInsetsProp,\n  rejectResponderTermination?: ?boolean,\n  testID?: ?string,\n|}>;\n\n/**\n * Do not use unless you have a very good reason. All elements that\n * respond to press should have a visual feedback when touched.\n *\n * TouchableWithoutFeedback supports only one child.\n * If you wish to have several child components, wrap them in a View.\n */\nconst TouchableWithoutFeedback = ((createReactClass({\n  displayName: 'TouchableWithoutFeedback',\n  mixins: [TimerMixin, Touchable.Mixin],\n\n  propTypes: {\n    accessible: PropTypes.bool,\n    accessibilityLabel: PropTypes.node,\n    accessibilityHint: PropTypes.string,\n    accessibilityComponentType: PropTypes.oneOf(AccessibilityComponentTypes),\n    accessibilityRole: PropTypes.oneOf(AccessibilityRoles),\n    accessibilityStates: PropTypes.arrayOf(\n      PropTypes.oneOf(AccessibilityStates),\n    ),\n    accessibilityTraits: PropTypes.oneOfType([\n      PropTypes.oneOf(AccessibilityTraits),\n      PropTypes.arrayOf(PropTypes.oneOf(AccessibilityTraits)),\n    ]),\n    /**\n     * When `accessible` is true (which is the default) this may be called when\n     * the OS-specific concept of \"focus\" occurs. Some platforms may not have\n     * the concept of focus.\n     */\n    onFocus: PropTypes.func,\n    /**\n     * When `accessible` is true (which is the default) this may be called when\n     * the OS-specific concept of \"blur\" occurs, meaning the element lost focus.\n     * Some platforms may not have the concept of blur.\n     */\n    onBlur: PropTypes.func,\n    /**\n     * If true, disable all interactions for this component.\n     */\n    disabled: PropTypes.bool,\n    /**\n     * Called when the touch is released, but not if cancelled (e.g. by a scroll\n     * that steals the responder lock).\n     */\n    onPress: PropTypes.func,\n    /**\n     * Called as soon as the touchable element is pressed and invoked even before onPress.\n     * This can be useful when making network requests.\n     */\n    onPressIn: PropTypes.func,\n    /**\n     * Called as soon as the touch is released even before onPress.\n     */\n    onPressOut: PropTypes.func,\n    /**\n     * Invoked on mount and layout changes with\n     *\n     *   `{nativeEvent: {layout: {x, y, width, height}}}`\n     */\n    onLayout: PropTypes.func,\n\n    onLongPress: PropTypes.func,\n\n    nativeID: PropTypes.string,\n    testID: PropTypes.string,\n\n    /**\n     * Delay in ms, from the start of the touch, before onPressIn is called.\n     */\n    delayPressIn: PropTypes.number,\n    /**\n     * Delay in ms, from the release of the touch, before onPressOut is called.\n     */\n    delayPressOut: PropTypes.number,\n    /**\n     * Delay in ms, from onPressIn, before onLongPress is called.\n     */\n    delayLongPress: PropTypes.number,\n    /**\n     * When the scroll view is disabled, this defines how far your touch may\n     * move off of the button, before deactivating the button. Once deactivated,\n     * try moving it back and you'll see that the button is once again\n     * reactivated! Move it back and forth several times while the scroll view\n     * is disabled. Ensure you pass in a constant to reduce memory allocations.\n     */\n    pressRetentionOffset: EdgeInsetsPropType,\n    /**\n     * This defines how far your touch can start away from the button. This is\n     * added to `pressRetentionOffset` when moving off of the button.\n     * ** NOTE **\n     * The touch area never extends past the parent view bounds and the Z-index\n     * of sibling views always takes precedence if a touch hits two overlapping\n     * views.\n     */\n    hitSlop: EdgeInsetsPropType,\n  },\n\n  getInitialState: function() {\n    return this.touchableGetInitialState();\n  },\n\n  componentDidMount: function() {\n    ensurePositiveDelayProps(this.props);\n  },\n\n  UNSAFE_componentWillReceiveProps: function(nextProps: Object) {\n    ensurePositiveDelayProps(nextProps);\n  },\n\n  /**\n   * `Touchable.Mixin` self callbacks. The mixin will invoke these if they are\n   * defined on your component.\n   */\n  touchableHandlePress: function(e: PressEvent) {\n    this.props.onPress && this.props.onPress(e);\n  },\n\n  touchableHandleActivePressIn: function(e: PressEvent) {\n    this.props.onPressIn && this.props.onPressIn(e);\n  },\n\n  touchableHandleActivePressOut: function(e: PressEvent) {\n    this.props.onPressOut && this.props.onPressOut(e);\n  },\n\n  touchableHandleLongPress: function(e: PressEvent) {\n    this.props.onLongPress && this.props.onLongPress(e);\n  },\n\n  touchableGetPressRectOffset: function(): typeof PRESS_RETENTION_OFFSET {\n    // $FlowFixMe Invalid prop usage\n    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n\n  touchableGetHitSlop: function(): ?Object {\n    return this.props.hitSlop;\n  },\n\n  touchableGetHighlightDelayMS: function(): number {\n    return this.props.delayPressIn || 0;\n  },\n\n  touchableGetLongPressDelayMS: function(): number {\n    return this.props.delayLongPress === 0\n      ? 0\n      : this.props.delayLongPress || 500;\n  },\n\n  touchableGetPressOutDelayMS: function(): number {\n    return this.props.delayPressOut || 0;\n  },\n\n  render: function(): React.Element<any> {\n    // Note(avik): remove dynamic typecast once Flow has been upgraded\n    // $FlowFixMe(>=0.41.0)\n    const child = React.Children.only(this.props.children);\n    let children = child.props.children;\n    if (Touchable.TOUCH_TARGET_DEBUG && child.type === View) {\n      children = React.Children.toArray(children);\n      children.push(\n        Touchable.renderDebugView({color: 'red', hitSlop: this.props.hitSlop}),\n      );\n    }\n    return (React: any).cloneElement(child, {\n      accessible: this.props.accessible !== false,\n      accessibilityLabel: this.props.accessibilityLabel,\n      accessibilityHint: this.props.accessibilityHint,\n      accessibilityComponentType: this.props.accessibilityComponentType,\n      accessibilityRole: this.props.accessibilityRole,\n      accessibilityStates: this.props.accessibilityStates,\n      accessibilityTraits: this.props.accessibilityTraits,\n      nativeID: this.props.nativeID,\n      testID: this.props.testID,\n      onLayout: this.props.onLayout,\n      hitSlop: this.props.hitSlop,\n      onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,\n      onResponderTerminationRequest: this\n        .touchableHandleResponderTerminationRequest,\n      onResponderGrant: this.touchableHandleResponderGrant,\n      onResponderMove: this.touchableHandleResponderMove,\n      onResponderRelease: this.touchableHandleResponderRelease,\n      onResponderTerminate: this.touchableHandleResponderTerminate,\n      children,\n    });\n  },\n}): any): React.ComponentType<Props>);\n\nmodule.exports = TouchableWithoutFeedback;\n"]}