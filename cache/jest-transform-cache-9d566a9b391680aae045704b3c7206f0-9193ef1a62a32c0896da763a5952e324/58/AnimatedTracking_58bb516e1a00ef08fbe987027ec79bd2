507a04ee001aec3b19aad72d9a9a2097









'use strict';var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _get = function get(object, property, receiver) {if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {var parent = Object.getPrototypeOf(object);if (parent === null) {return undefined;} else {return get(parent, property, receiver);}} else if ("value" in desc) {return desc.value;} else {var getter = desc.get;if (getter === undefined) {return undefined;}return getter.call(receiver);}};function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}

var AnimatedValue = require('./AnimatedValue');
var AnimatedNode = require('./AnimatedNode');var _require =



require('../NativeAnimatedHelper'),generateNewAnimationId = _require.generateNewAnimationId,shouldUseNativeDriver = _require.shouldUseNativeDriver;var



AnimatedTracking = function (_AnimatedNode) {_inherits(AnimatedTracking, _AnimatedNode);







  function AnimatedTracking(
  value,
  parent,
  animationClass,
  animationConfig,
  callback)
  {_classCallCheck(this, AnimatedTracking);var _this = _possibleConstructorReturn(this, (AnimatedTracking.__proto__ || Object.getPrototypeOf(AnimatedTracking)).call(this));

    _this._value = value;
    _this._parent = parent;
    _this._animationClass = animationClass;
    _this._animationConfig = animationConfig;
    _this._useNativeDriver = shouldUseNativeDriver(animationConfig);
    _this._callback = callback;
    _this.__attach();return _this;
  }_createClass(AnimatedTracking, [{ key: '__makeNative', value: function __makeNative()

    {
      this.__isNative = true;
      this._parent.__makeNative();
      _get(AnimatedTracking.prototype.__proto__ || Object.getPrototypeOf(AnimatedTracking.prototype), '__makeNative', this).call(this);
      this._value.__makeNative();
    } }, { key: '__getValue', value: function __getValue()

    {
      return this._parent.__getValue();
    } }, { key: '__attach', value: function __attach()

    {
      this._parent.__addChild(this);
      if (this._useNativeDriver) {





        this.__makeNative();
      }
    } }, { key: '__detach', value: function __detach()

    {
      this._parent.__removeChild(this);
      _get(AnimatedTracking.prototype.__proto__ || Object.getPrototypeOf(AnimatedTracking.prototype), '__detach', this).call(this);
    } }, { key: 'update', value: function update()

    {
      this._value.animate(
      new this._animationClass(_extends({},
      this._animationConfig, {
        toValue: this._animationConfig.toValue.__getValue() })),

      this._callback);

    } }, { key: '__getNativeConfig', value: function __getNativeConfig()

    {
      var animation = new this._animationClass(_extends({},
      this._animationConfig, {

        toValue: undefined }));

      var animationConfig = animation.__getNativeAnimationConfig();
      return {
        type: 'tracking',
        animationId: generateNewAnimationId(),
        animationConfig: animationConfig,
        toValue: this._parent.__getNativeTag(),
        value: this._value.__getNativeTag() };

    } }]);return AnimatedTracking;}(AnimatedNode);


module.exports = AnimatedTracking;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFuaW1hdGVkVHJhY2tpbmcuanMiXSwibmFtZXMiOlsiQW5pbWF0ZWRWYWx1ZSIsInJlcXVpcmUiLCJBbmltYXRlZE5vZGUiLCJnZW5lcmF0ZU5ld0FuaW1hdGlvbklkIiwic2hvdWxkVXNlTmF0aXZlRHJpdmVyIiwiQW5pbWF0ZWRUcmFja2luZyIsInZhbHVlIiwicGFyZW50IiwiYW5pbWF0aW9uQ2xhc3MiLCJhbmltYXRpb25Db25maWciLCJjYWxsYmFjayIsIl92YWx1ZSIsIl9wYXJlbnQiLCJfYW5pbWF0aW9uQ2xhc3MiLCJfYW5pbWF0aW9uQ29uZmlnIiwiX3VzZU5hdGl2ZURyaXZlciIsIl9jYWxsYmFjayIsIl9fYXR0YWNoIiwiX19pc05hdGl2ZSIsIl9fbWFrZU5hdGl2ZSIsIl9fZ2V0VmFsdWUiLCJfX2FkZENoaWxkIiwiX19yZW1vdmVDaGlsZCIsImFuaW1hdGUiLCJ0b1ZhbHVlIiwiYW5pbWF0aW9uIiwidW5kZWZpbmVkIiwiX19nZXROYXRpdmVBbmltYXRpb25Db25maWciLCJ0eXBlIiwiYW5pbWF0aW9uSWQiLCJfX2dldE5hdGl2ZVRhZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQVNBLGE7O0FBRUEsSUFBTUEsZ0JBQWdCQyxRQUFRLGlCQUFSLENBQXRCO0FBQ0EsSUFBTUMsZUFBZUQsUUFBUSxnQkFBUixDQUFyQixDOzs7O0FBSUlBLFFBQVEseUJBQVIsQyxDQUZGRSxzQixZQUFBQSxzQixDQUNBQyxxQixZQUFBQSxxQjs7OztBQUtJQyxnQjs7Ozs7Ozs7QUFRSjtBQUNFQyxPQURGO0FBRUVDLFFBRkY7QUFHRUMsZ0JBSEY7QUFJRUMsaUJBSkY7QUFLRUMsVUFMRjtBQU1FOztBQUVBLFVBQUtDLE1BQUwsR0FBY0wsS0FBZDtBQUNBLFVBQUtNLE9BQUwsR0FBZUwsTUFBZjtBQUNBLFVBQUtNLGVBQUwsR0FBdUJMLGNBQXZCO0FBQ0EsVUFBS00sZ0JBQUwsR0FBd0JMLGVBQXhCO0FBQ0EsVUFBS00sZ0JBQUwsR0FBd0JYLHNCQUFzQkssZUFBdEIsQ0FBeEI7QUFDQSxVQUFLTyxTQUFMLEdBQWlCTixRQUFqQjtBQUNBLFVBQUtPLFFBQUwsR0FSQTtBQVNELEc7O0FBRWM7QUFDYixXQUFLQyxVQUFMLEdBQWtCLElBQWxCO0FBQ0EsV0FBS04sT0FBTCxDQUFhTyxZQUFiO0FBQ0E7QUFDQSxXQUFLUixNQUFMLENBQVlRLFlBQVo7QUFDRCxLOztBQUVvQjtBQUNuQixhQUFPLEtBQUtQLE9BQUwsQ0FBYVEsVUFBYixFQUFQO0FBQ0QsSzs7QUFFZ0I7QUFDZixXQUFLUixPQUFMLENBQWFTLFVBQWIsQ0FBd0IsSUFBeEI7QUFDQSxVQUFJLEtBQUtOLGdCQUFULEVBQTJCOzs7Ozs7QUFNekIsYUFBS0ksWUFBTDtBQUNEO0FBQ0YsSzs7QUFFZ0I7QUFDZixXQUFLUCxPQUFMLENBQWFVLGFBQWIsQ0FBMkIsSUFBM0I7QUFDQTtBQUNELEs7O0FBRWM7QUFDYixXQUFLWCxNQUFMLENBQVlZLE9BQVo7QUFDRSxVQUFJLEtBQUtWLGVBQVQ7QUFDSyxXQUFLQyxnQkFEVjtBQUVFVSxpQkFBVSxLQUFLVixnQkFBTCxDQUFzQlUsT0FBdkIsQ0FBcUNKLFVBQXJDLEVBRlgsSUFERjs7QUFLRSxXQUFLSixTQUxQOztBQU9ELEs7O0FBRXdCO0FBQ3ZCLFVBQU1TLFlBQVksSUFBSSxLQUFLWixlQUFUO0FBQ2IsV0FBS0MsZ0JBRFE7O0FBR2hCVSxpQkFBU0UsU0FITyxJQUFsQjs7QUFLQSxVQUFNakIsa0JBQWtCZ0IsVUFBVUUsMEJBQVYsRUFBeEI7QUFDQSxhQUFPO0FBQ0xDLGNBQU0sVUFERDtBQUVMQyxxQkFBYTFCLHdCQUZSO0FBR0xNLHdDQUhLO0FBSUxlLGlCQUFTLEtBQUtaLE9BQUwsQ0FBYWtCLGNBQWIsRUFKSjtBQUtMeEIsZUFBTyxLQUFLSyxNQUFMLENBQVltQixjQUFaLEVBTEYsRUFBUDs7QUFPRCxLLCtCQTdFNEI1QixZOzs7QUFnRi9CNkIsT0FBT0MsT0FBUCxHQUFpQjNCLGdCQUFqQiIsImZpbGUiOiJBbmltYXRlZFRyYWNraW5nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvd1xuICogQGZvcm1hdFxuICovXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IEFuaW1hdGVkVmFsdWUgPSByZXF1aXJlKCcuL0FuaW1hdGVkVmFsdWUnKTtcbmNvbnN0IEFuaW1hdGVkTm9kZSA9IHJlcXVpcmUoJy4vQW5pbWF0ZWROb2RlJyk7XG5jb25zdCB7XG4gIGdlbmVyYXRlTmV3QW5pbWF0aW9uSWQsXG4gIHNob3VsZFVzZU5hdGl2ZURyaXZlcixcbn0gPSByZXF1aXJlKCcuLi9OYXRpdmVBbmltYXRlZEhlbHBlcicpO1xuXG5pbXBvcnQgdHlwZSB7RW5kQ2FsbGJhY2t9IGZyb20gJy4uL2FuaW1hdGlvbnMvQW5pbWF0aW9uJztcblxuY2xhc3MgQW5pbWF0ZWRUcmFja2luZyBleHRlbmRzIEFuaW1hdGVkTm9kZSB7XG4gIF92YWx1ZTogQW5pbWF0ZWRWYWx1ZTtcbiAgX3BhcmVudDogQW5pbWF0ZWROb2RlO1xuICBfY2FsbGJhY2s6ID9FbmRDYWxsYmFjaztcbiAgX2FuaW1hdGlvbkNvbmZpZzogT2JqZWN0O1xuICBfYW5pbWF0aW9uQ2xhc3M6IGFueTtcbiAgX3VzZU5hdGl2ZURyaXZlcjogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICB2YWx1ZTogQW5pbWF0ZWRWYWx1ZSxcbiAgICBwYXJlbnQ6IEFuaW1hdGVkTm9kZSxcbiAgICBhbmltYXRpb25DbGFzczogYW55LFxuICAgIGFuaW1hdGlvbkNvbmZpZzogT2JqZWN0LFxuICAgIGNhbGxiYWNrPzogP0VuZENhbGxiYWNrLFxuICApIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX3ZhbHVlID0gdmFsdWU7XG4gICAgdGhpcy5fcGFyZW50ID0gcGFyZW50O1xuICAgIHRoaXMuX2FuaW1hdGlvbkNsYXNzID0gYW5pbWF0aW9uQ2xhc3M7XG4gICAgdGhpcy5fYW5pbWF0aW9uQ29uZmlnID0gYW5pbWF0aW9uQ29uZmlnO1xuICAgIHRoaXMuX3VzZU5hdGl2ZURyaXZlciA9IHNob3VsZFVzZU5hdGl2ZURyaXZlcihhbmltYXRpb25Db25maWcpO1xuICAgIHRoaXMuX2NhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgdGhpcy5fX2F0dGFjaCgpO1xuICB9XG5cbiAgX19tYWtlTmF0aXZlKCkge1xuICAgIHRoaXMuX19pc05hdGl2ZSA9IHRydWU7XG4gICAgdGhpcy5fcGFyZW50Ll9fbWFrZU5hdGl2ZSgpO1xuICAgIHN1cGVyLl9fbWFrZU5hdGl2ZSgpO1xuICAgIHRoaXMuX3ZhbHVlLl9fbWFrZU5hdGl2ZSgpO1xuICB9XG5cbiAgX19nZXRWYWx1ZSgpOiBPYmplY3Qge1xuICAgIHJldHVybiB0aGlzLl9wYXJlbnQuX19nZXRWYWx1ZSgpO1xuICB9XG5cbiAgX19hdHRhY2goKTogdm9pZCB7XG4gICAgdGhpcy5fcGFyZW50Ll9fYWRkQ2hpbGQodGhpcyk7XG4gICAgaWYgKHRoaXMuX3VzZU5hdGl2ZURyaXZlcikge1xuICAgICAgLy8gd2hlbiB0aGUgdHJhY2tpbmcgc3RhcnRzIHdlIG5lZWQgdG8gY29udmVydCB0aGlzIG5vZGUgdG8gYSBcIm5hdGl2ZSBub2RlXCJcbiAgICAgIC8vIHNvIHRoYXQgdGhlIHBhcmVudCBub2RlIHdpbGwgYmUgbWFkZSBcIm5hdGl2ZVwiIHRvby4gVGhpcyBpcyBuZWNlc3NhcnkgYXNcbiAgICAgIC8vIGlmIHdlIGRvbid0IGRvIHRoaXMgYHVwZGF0ZWAgbWV0aG9kIHdpbGwgZ2V0IGNhbGxlZC4gQXQgdGhhdCBwb2ludCBpdFxuICAgICAgLy8gbWF5IGJlIHRvbyBsYXRlIGFzIGl0IHdvdWxkIG1lYW4gdGhlIEpTIGRyaXZlciBoYXMgYWxyZWFkeSBzdGFydGVkXG4gICAgICAvLyB1cGRhdGluZyBub2RlIHZhbHVlc1xuICAgICAgdGhpcy5fX21ha2VOYXRpdmUoKTtcbiAgICB9XG4gIH1cblxuICBfX2RldGFjaCgpOiB2b2lkIHtcbiAgICB0aGlzLl9wYXJlbnQuX19yZW1vdmVDaGlsZCh0aGlzKTtcbiAgICBzdXBlci5fX2RldGFjaCgpO1xuICB9XG5cbiAgdXBkYXRlKCk6IHZvaWQge1xuICAgIHRoaXMuX3ZhbHVlLmFuaW1hdGUoXG4gICAgICBuZXcgdGhpcy5fYW5pbWF0aW9uQ2xhc3Moe1xuICAgICAgICAuLi50aGlzLl9hbmltYXRpb25Db25maWcsXG4gICAgICAgIHRvVmFsdWU6ICh0aGlzLl9hbmltYXRpb25Db25maWcudG9WYWx1ZTogYW55KS5fX2dldFZhbHVlKCksXG4gICAgICB9KSxcbiAgICAgIHRoaXMuX2NhbGxiYWNrLFxuICAgICk7XG4gIH1cblxuICBfX2dldE5hdGl2ZUNvbmZpZygpOiBhbnkge1xuICAgIGNvbnN0IGFuaW1hdGlvbiA9IG5ldyB0aGlzLl9hbmltYXRpb25DbGFzcyh7XG4gICAgICAuLi50aGlzLl9hbmltYXRpb25Db25maWcsXG4gICAgICAvLyByZW1vdmUgdG9WYWx1ZSBmcm9tIHRoZSBjb25maWcgYXMgaXQncyBhIHJlZiB0byBBbmltYXRlZC5WYWx1ZVxuICAgICAgdG9WYWx1ZTogdW5kZWZpbmVkLFxuICAgIH0pO1xuICAgIGNvbnN0IGFuaW1hdGlvbkNvbmZpZyA9IGFuaW1hdGlvbi5fX2dldE5hdGl2ZUFuaW1hdGlvbkNvbmZpZygpO1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiAndHJhY2tpbmcnLFxuICAgICAgYW5pbWF0aW9uSWQ6IGdlbmVyYXRlTmV3QW5pbWF0aW9uSWQoKSxcbiAgICAgIGFuaW1hdGlvbkNvbmZpZyxcbiAgICAgIHRvVmFsdWU6IHRoaXMuX3BhcmVudC5fX2dldE5hdGl2ZVRhZygpLFxuICAgICAgdmFsdWU6IHRoaXMuX3ZhbHVlLl9fZ2V0TmF0aXZlVGFnKCksXG4gICAgfTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEFuaW1hdGVkVHJhY2tpbmc7XG4iXX0=