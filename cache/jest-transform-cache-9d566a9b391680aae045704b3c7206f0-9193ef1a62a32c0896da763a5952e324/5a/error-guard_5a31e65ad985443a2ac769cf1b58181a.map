{"version":3,"sources":["error-guard.js"],"names":["_inGuard","_globalHandler","onError","e","ErrorUtils","setGlobalHandler","fun","getGlobalHandler","reportError","error","reportFatalError","applyWithGuard","context","args","apply","applyWithGuardIfNeeded","inGuard","guard","name","console","warn","guarded","arguments","global"],"mappings":";;;;;;;;;;;AAWA,IAAIA,WAAW,CAAf;;;;;;;AAOA,IAAIC,iBAAiB,SAASC,OAAT,CAAiBC,CAAjB,EAAoB;AACvC,QAAMA,CAAN;AACD,CAFD;;;;;;;;;;AAYA,IAAMC,aAAa;AACjBC,kBADiB,4BACAC,GADA,EACK;AACpBL,qBAAiBK,GAAjB;AACD,GAHgB;AAIjBC,kBAJiB,8BAIE;AACjB,WAAON,cAAP;AACD,GANgB;AAOjBO,aAPiB,uBAOLC,KAPK,EAOE;AACjBR,sBAAkBA,eAAeQ,KAAf,CAAlB;AACD,GATgB;AAUjBC,kBAViB,4BAUAD,KAVA,EAUO;AACtBR,sBAAkBA,eAAeQ,KAAf,EAAsB,IAAtB,CAAlB;AACD,GAZgB;AAajBE,gBAbiB,0BAaFL,GAbE,EAaGM,OAbH,EAaYC,IAbZ,EAakB;AACjC,QAAI;AACFb;AACA,aAAOM,IAAIQ,KAAJ,CAAUF,OAAV,EAAmBC,IAAnB,CAAP;AACD,KAHD,CAGE,OAAOV,CAAP,EAAU;AACVC,iBAAWI,WAAX,CAAuBL,CAAvB;AACD,KALD,SAKU;AACRH;AACD;AACD,WAAO,IAAP;AACD,GAvBgB;AAwBjBe,wBAxBiB,kCAwBMT,GAxBN,EAwBWM,OAxBX,EAwBoBC,IAxBpB,EAwB0B;AACzC,QAAIT,WAAWY,OAAX,EAAJ,EAA0B;AACxB,aAAOV,IAAIQ,KAAJ,CAAUF,OAAV,EAAmBC,IAAnB,CAAP;AACD,KAFD,MAEO;AACLT,iBAAWO,cAAX,CAA0BL,GAA1B,EAA+BM,OAA/B,EAAwCC,IAAxC;AACD;AACD,WAAO,IAAP;AACD,GA/BgB;AAgCjBG,SAhCiB,qBAgCP;AACR,WAAOhB,QAAP;AACD,GAlCgB;AAmCjBiB,OAnCiB,iBAmCXX,GAnCW,EAmCNY,IAnCM,EAmCAN,OAnCA,EAmCS;AACxB,QAAI,OAAON,GAAP,KAAe,UAAnB,EAA+B;AAC7Ba,cAAQC,IAAR,CAAa,qDAAb,EAAoEd,GAApE;AACA,aAAO,IAAP;AACD;AACDY,WAAOA,QAAQZ,IAAIY,IAAZ,IAAoB,mBAA3B;AACA,aAASG,OAAT,GAAmB;AACjB,aAAOjB,WAAWO,cAAX;AACLL,SADK;AAELM,iBAAW,IAFN;AAGLU,eAHK;AAIL,UAJK;AAKLJ,UALK,CAAP;;AAOD;;AAED,WAAOG,OAAP;AACD,GApDgB,EAAnB;;;AAuDAE,OAAOnB,UAAP,GAAoBA,UAApB","file":"error-guard.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @polyfill\n * @nolint\n */\n\nlet _inGuard = 0;\n\n/**\n * This is the error handler that is called when we encounter an exception\n * when loading a module. This will report any errors encountered before\n * ExceptionsManager is configured.\n */\nlet _globalHandler = function onError(e) {\n  throw e;\n};\n\n/**\n * The particular require runtime that we are using looks for a global\n * `ErrorUtils` object and if it exists, then it requires modules with the\n * error handler specified via ErrorUtils.setGlobalHandler by calling the\n * require function with applyWithGuard. Since the require module is loaded\n * before any of the modules, this ErrorUtils must be defined (and the handler\n * set) globally before requiring anything.\n */\nconst ErrorUtils = {\n  setGlobalHandler(fun) {\n    _globalHandler = fun;\n  },\n  getGlobalHandler() {\n    return _globalHandler;\n  },\n  reportError(error) {\n    _globalHandler && _globalHandler(error);\n  },\n  reportFatalError(error) {\n    _globalHandler && _globalHandler(error, true);\n  },\n  applyWithGuard(fun, context, args) {\n    try {\n      _inGuard++;\n      return fun.apply(context, args);\n    } catch (e) {\n      ErrorUtils.reportError(e);\n    } finally {\n      _inGuard--;\n    }\n    return null;\n  },\n  applyWithGuardIfNeeded(fun, context, args) {\n    if (ErrorUtils.inGuard()) {\n      return fun.apply(context, args);\n    } else {\n      ErrorUtils.applyWithGuard(fun, context, args);\n    }\n    return null;\n  },\n  inGuard() {\n    return _inGuard;\n  },\n  guard(fun, name, context) {\n    if (typeof fun !== 'function') {\n      console.warn('A function must be passed to ErrorUtils.guard, got ', fun);\n      return null;\n    }\n    name = name || fun.name || '<generated guard>';\n    function guarded() {\n      return ErrorUtils.applyWithGuard(\n        fun,\n        context || this,\n        arguments,\n        null,\n        name,\n      );\n    }\n\n    return guarded;\n  },\n};\n\nglobal.ErrorUtils = ErrorUtils;\n"]}