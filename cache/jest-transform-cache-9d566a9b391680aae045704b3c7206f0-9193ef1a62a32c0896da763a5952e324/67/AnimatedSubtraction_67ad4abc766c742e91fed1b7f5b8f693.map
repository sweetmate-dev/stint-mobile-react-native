{"version":3,"sources":["AnimatedSubtraction.js"],"names":["AnimatedInterpolation","require","AnimatedNode","AnimatedValue","AnimatedWithChildren","AnimatedSubtraction","a","b","_a","_b","__makeNative","__getValue","config","__addChild","__removeChild","type","input","__getNativeTag","module","exports"],"mappings":";;;;;;;;;AASA,a;;AAEA,IAAMA,wBAAwBC,QAAQ,yBAAR,CAA9B;AACA,IAAMC,eAAeD,QAAQ,gBAAR,CAArB;AACA,IAAME,gBAAgBF,QAAQ,iBAAR,CAAtB;AACA,IAAMG,uBAAuBH,QAAQ,wBAAR,CAA7B,C;;;;AAIMI,mB;;;;AAIJ,+BAAYC,CAAZ,EAAsCC,CAAtC,EAAgE;;AAE9D,UAAKC,EAAL,GAAU,OAAOF,CAAP,KAAa,QAAb,GAAwB,IAAIH,aAAJ,CAAkBG,CAAlB,CAAxB,GAA+CA,CAAzD;AACA,UAAKG,EAAL,GAAU,OAAOF,CAAP,KAAa,QAAb,GAAwB,IAAIJ,aAAJ,CAAkBI,CAAlB,CAAxB,GAA+CA,CAAzD,CAH8D;AAI/D,G;;AAEc;AACb,WAAKC,EAAL,CAAQE,YAAR;AACA,WAAKD,EAAL,CAAQC,YAAR;AACA;AACD,K;;AAEoB;AACnB,aAAO,KAAKF,EAAL,CAAQG,UAAR,KAAuB,KAAKF,EAAL,CAAQE,UAAR,EAA9B;AACD,K;;AAEWC,U,EAAwD;AAClE,aAAO,IAAIZ,qBAAJ,CAA0B,IAA1B,EAAgCY,MAAhC,CAAP;AACD,K;;AAEgB;AACf,WAAKJ,EAAL,CAAQK,UAAR,CAAmB,IAAnB;AACA,WAAKJ,EAAL,CAAQI,UAAR,CAAmB,IAAnB;AACD,K;;AAEgB;AACf,WAAKL,EAAL,CAAQM,aAAR,CAAsB,IAAtB;AACA,WAAKL,EAAL,CAAQK,aAAR,CAAsB,IAAtB;AACA;AACD,K;;AAEwB;AACvB,aAAO;AACLC,cAAM,aADD;AAELC,eAAO,CAAC,KAAKR,EAAL,CAAQS,cAAR,EAAD,EAA2B,KAAKR,EAAL,CAAQQ,cAAR,EAA3B,CAFF,EAAP;;AAID,K,kCAxC+Bb,oB;;;AA2ClCc,OAAOC,OAAP,GAAiBd,mBAAjB","file":"AnimatedSubtraction.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst AnimatedInterpolation = require('./AnimatedInterpolation');\nconst AnimatedNode = require('./AnimatedNode');\nconst AnimatedValue = require('./AnimatedValue');\nconst AnimatedWithChildren = require('./AnimatedWithChildren');\n\nimport type {InterpolationConfigType} from './AnimatedInterpolation';\n\nclass AnimatedSubtraction extends AnimatedWithChildren {\n  _a: AnimatedNode;\n  _b: AnimatedNode;\n\n  constructor(a: AnimatedNode | number, b: AnimatedNode | number) {\n    super();\n    this._a = typeof a === 'number' ? new AnimatedValue(a) : a;\n    this._b = typeof b === 'number' ? new AnimatedValue(b) : b;\n  }\n\n  __makeNative() {\n    this._a.__makeNative();\n    this._b.__makeNative();\n    super.__makeNative();\n  }\n\n  __getValue(): number {\n    return this._a.__getValue() - this._b.__getValue();\n  }\n\n  interpolate(config: InterpolationConfigType): AnimatedInterpolation {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  __attach(): void {\n    this._a.__addChild(this);\n    this._b.__addChild(this);\n  }\n\n  __detach(): void {\n    this._a.__removeChild(this);\n    this._b.__removeChild(this);\n    super.__detach();\n  }\n\n  __getNativeConfig(): any {\n    return {\n      type: 'subtraction',\n      input: [this._a.__getNativeTag(), this._b.__getNativeTag()],\n    };\n  }\n}\n\nmodule.exports = AnimatedSubtraction;\n"]}