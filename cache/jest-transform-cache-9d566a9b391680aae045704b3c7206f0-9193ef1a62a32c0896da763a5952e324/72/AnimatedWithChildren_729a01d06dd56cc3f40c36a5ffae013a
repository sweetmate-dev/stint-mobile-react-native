a8b44ddc90a44073b337a7bd72f8da7d









'use strict';var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}

var AnimatedNode = require('./AnimatedNode');
var NativeAnimatedHelper = require('../NativeAnimatedHelper');var

AnimatedWithChildren = function (_AnimatedNode) {_inherits(AnimatedWithChildren, _AnimatedNode);


  function AnimatedWithChildren() {_classCallCheck(this, AnimatedWithChildren);var _this = _possibleConstructorReturn(this, (AnimatedWithChildren.__proto__ || Object.getPrototypeOf(AnimatedWithChildren)).call(this));

    _this._children = [];return _this;
  }_createClass(AnimatedWithChildren, [{ key: '__makeNative', value: function __makeNative()

    {
      if (!this.__isNative) {
        this.__isNative = true;
        for (var _iterator = this._children, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {var _ref;if (_isArray) {if (_i >= _iterator.length) break;_ref = _iterator[_i++];} else {_i = _iterator.next();if (_i.done) break;_ref = _i.value;}var child = _ref;
          child.__makeNative();
          NativeAnimatedHelper.API.connectAnimatedNodes(
          this.__getNativeTag(),
          child.__getNativeTag());

        }
      }
    } }, { key: '__addChild', value: function __addChild(

    child) {
      if (this._children.length === 0) {
        this.__attach();
      }
      this._children.push(child);
      if (this.__isNative) {

        child.__makeNative();
        NativeAnimatedHelper.API.connectAnimatedNodes(
        this.__getNativeTag(),
        child.__getNativeTag());

      }
    } }, { key: '__removeChild', value: function __removeChild(

    child) {
      var index = this._children.indexOf(child);
      if (index === -1) {
        console.warn("Trying to remove a child that doesn't exist");
        return;
      }
      if (this.__isNative && child.__isNative) {
        NativeAnimatedHelper.API.disconnectAnimatedNodes(
        this.__getNativeTag(),
        child.__getNativeTag());

      }
      this._children.splice(index, 1);
      if (this._children.length === 0) {
        this.__detach();
      }
    } }, { key: '__getChildren', value: function __getChildren()

    {
      return this._children;
    } }]);return AnimatedWithChildren;}(AnimatedNode);


module.exports = AnimatedWithChildren;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFuaW1hdGVkV2l0aENoaWxkcmVuLmpzIl0sIm5hbWVzIjpbIkFuaW1hdGVkTm9kZSIsInJlcXVpcmUiLCJOYXRpdmVBbmltYXRlZEhlbHBlciIsIkFuaW1hdGVkV2l0aENoaWxkcmVuIiwiX2NoaWxkcmVuIiwiX19pc05hdGl2ZSIsImNoaWxkIiwiX19tYWtlTmF0aXZlIiwiQVBJIiwiY29ubmVjdEFuaW1hdGVkTm9kZXMiLCJfX2dldE5hdGl2ZVRhZyIsImxlbmd0aCIsIl9fYXR0YWNoIiwicHVzaCIsImluZGV4IiwiaW5kZXhPZiIsImNvbnNvbGUiLCJ3YXJuIiwiZGlzY29ubmVjdEFuaW1hdGVkTm9kZXMiLCJzcGxpY2UiLCJfX2RldGFjaCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQVNBLGE7O0FBRUEsSUFBTUEsZUFBZUMsUUFBUSxnQkFBUixDQUFyQjtBQUNBLElBQU1DLHVCQUF1QkQsUUFBUSx5QkFBUixDQUE3QixDOztBQUVNRSxvQjs7O0FBR0osa0NBQWM7O0FBRVosVUFBS0MsU0FBTCxHQUFpQixFQUFqQixDQUZZO0FBR2IsRzs7QUFFYztBQUNiLFVBQUksQ0FBQyxLQUFLQyxVQUFWLEVBQXNCO0FBQ3BCLGFBQUtBLFVBQUwsR0FBa0IsSUFBbEI7QUFDQSw2QkFBb0IsS0FBS0QsU0FBekIsZ0tBQW9DLHdKQUF6QkUsS0FBeUI7QUFDbENBLGdCQUFNQyxZQUFOO0FBQ0FMLCtCQUFxQk0sR0FBckIsQ0FBeUJDLG9CQUF6QjtBQUNFLGVBQUtDLGNBQUwsRUFERjtBQUVFSixnQkFBTUksY0FBTixFQUZGOztBQUlEO0FBQ0Y7QUFDRixLOztBQUVVSixTLEVBQTJCO0FBQ3BDLFVBQUksS0FBS0YsU0FBTCxDQUFlTyxNQUFmLEtBQTBCLENBQTlCLEVBQWlDO0FBQy9CLGFBQUtDLFFBQUw7QUFDRDtBQUNELFdBQUtSLFNBQUwsQ0FBZVMsSUFBZixDQUFvQlAsS0FBcEI7QUFDQSxVQUFJLEtBQUtELFVBQVQsRUFBcUI7O0FBRW5CQyxjQUFNQyxZQUFOO0FBQ0FMLDZCQUFxQk0sR0FBckIsQ0FBeUJDLG9CQUF6QjtBQUNFLGFBQUtDLGNBQUwsRUFERjtBQUVFSixjQUFNSSxjQUFOLEVBRkY7O0FBSUQ7QUFDRixLOztBQUVhSixTLEVBQTJCO0FBQ3ZDLFVBQU1RLFFBQVEsS0FBS1YsU0FBTCxDQUFlVyxPQUFmLENBQXVCVCxLQUF2QixDQUFkO0FBQ0EsVUFBSVEsVUFBVSxDQUFDLENBQWYsRUFBa0I7QUFDaEJFLGdCQUFRQyxJQUFSLENBQWEsNkNBQWI7QUFDQTtBQUNEO0FBQ0QsVUFBSSxLQUFLWixVQUFMLElBQW1CQyxNQUFNRCxVQUE3QixFQUF5QztBQUN2Q0gsNkJBQXFCTSxHQUFyQixDQUF5QlUsdUJBQXpCO0FBQ0UsYUFBS1IsY0FBTCxFQURGO0FBRUVKLGNBQU1JLGNBQU4sRUFGRjs7QUFJRDtBQUNELFdBQUtOLFNBQUwsQ0FBZWUsTUFBZixDQUFzQkwsS0FBdEIsRUFBNkIsQ0FBN0I7QUFDQSxVQUFJLEtBQUtWLFNBQUwsQ0FBZU8sTUFBZixLQUEwQixDQUE5QixFQUFpQztBQUMvQixhQUFLUyxRQUFMO0FBQ0Q7QUFDRixLOztBQUVvQztBQUNuQyxhQUFPLEtBQUtoQixTQUFaO0FBQ0QsSyxtQ0F4RGdDSixZOzs7QUEyRG5DcUIsT0FBT0MsT0FBUCxHQUFpQm5CLG9CQUFqQiIsImZpbGUiOiJBbmltYXRlZFdpdGhDaGlsZHJlbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3cgc3RyaWN0LWxvY2FsXG4gKiBAZm9ybWF0XG4gKi9cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgQW5pbWF0ZWROb2RlID0gcmVxdWlyZSgnLi9BbmltYXRlZE5vZGUnKTtcbmNvbnN0IE5hdGl2ZUFuaW1hdGVkSGVscGVyID0gcmVxdWlyZSgnLi4vTmF0aXZlQW5pbWF0ZWRIZWxwZXInKTtcblxuY2xhc3MgQW5pbWF0ZWRXaXRoQ2hpbGRyZW4gZXh0ZW5kcyBBbmltYXRlZE5vZGUge1xuICBfY2hpbGRyZW46IEFycmF5PEFuaW1hdGVkTm9kZT47XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9jaGlsZHJlbiA9IFtdO1xuICB9XG5cbiAgX19tYWtlTmF0aXZlKCkge1xuICAgIGlmICghdGhpcy5fX2lzTmF0aXZlKSB7XG4gICAgICB0aGlzLl9faXNOYXRpdmUgPSB0cnVlO1xuICAgICAgZm9yIChjb25zdCBjaGlsZCBvZiB0aGlzLl9jaGlsZHJlbikge1xuICAgICAgICBjaGlsZC5fX21ha2VOYXRpdmUoKTtcbiAgICAgICAgTmF0aXZlQW5pbWF0ZWRIZWxwZXIuQVBJLmNvbm5lY3RBbmltYXRlZE5vZGVzKFxuICAgICAgICAgIHRoaXMuX19nZXROYXRpdmVUYWcoKSxcbiAgICAgICAgICBjaGlsZC5fX2dldE5hdGl2ZVRhZygpLFxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIF9fYWRkQ2hpbGQoY2hpbGQ6IEFuaW1hdGVkTm9kZSk6IHZvaWQge1xuICAgIGlmICh0aGlzLl9jaGlsZHJlbi5sZW5ndGggPT09IDApIHtcbiAgICAgIHRoaXMuX19hdHRhY2goKTtcbiAgICB9XG4gICAgdGhpcy5fY2hpbGRyZW4ucHVzaChjaGlsZCk7XG4gICAgaWYgKHRoaXMuX19pc05hdGl2ZSkge1xuICAgICAgLy8gT25seSBhY2NlcHQgXCJuYXRpdmVcIiBhbmltYXRlZCBub2RlcyBhcyBjaGlsZHJlblxuICAgICAgY2hpbGQuX19tYWtlTmF0aXZlKCk7XG4gICAgICBOYXRpdmVBbmltYXRlZEhlbHBlci5BUEkuY29ubmVjdEFuaW1hdGVkTm9kZXMoXG4gICAgICAgIHRoaXMuX19nZXROYXRpdmVUYWcoKSxcbiAgICAgICAgY2hpbGQuX19nZXROYXRpdmVUYWcoKSxcbiAgICAgICk7XG4gICAgfVxuICB9XG5cbiAgX19yZW1vdmVDaGlsZChjaGlsZDogQW5pbWF0ZWROb2RlKTogdm9pZCB7XG4gICAgY29uc3QgaW5kZXggPSB0aGlzLl9jaGlsZHJlbi5pbmRleE9mKGNoaWxkKTtcbiAgICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgICBjb25zb2xlLndhcm4oXCJUcnlpbmcgdG8gcmVtb3ZlIGEgY2hpbGQgdGhhdCBkb2Vzbid0IGV4aXN0XCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAodGhpcy5fX2lzTmF0aXZlICYmIGNoaWxkLl9faXNOYXRpdmUpIHtcbiAgICAgIE5hdGl2ZUFuaW1hdGVkSGVscGVyLkFQSS5kaXNjb25uZWN0QW5pbWF0ZWROb2RlcyhcbiAgICAgICAgdGhpcy5fX2dldE5hdGl2ZVRhZygpLFxuICAgICAgICBjaGlsZC5fX2dldE5hdGl2ZVRhZygpLFxuICAgICAgKTtcbiAgICB9XG4gICAgdGhpcy5fY2hpbGRyZW4uc3BsaWNlKGluZGV4LCAxKTtcbiAgICBpZiAodGhpcy5fY2hpbGRyZW4ubGVuZ3RoID09PSAwKSB7XG4gICAgICB0aGlzLl9fZGV0YWNoKCk7XG4gICAgfVxuICB9XG5cbiAgX19nZXRDaGlsZHJlbigpOiBBcnJheTxBbmltYXRlZE5vZGU+IHtcbiAgICByZXR1cm4gdGhpcy5fY2hpbGRyZW47XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBBbmltYXRlZFdpdGhDaGlsZHJlbjtcbiJdfQ==