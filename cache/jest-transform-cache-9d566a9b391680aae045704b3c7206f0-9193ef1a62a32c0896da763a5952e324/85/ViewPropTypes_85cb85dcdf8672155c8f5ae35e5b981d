5cd3713d353935b317c2dbb0ab969155


'use strict';
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};var ownKeys = Object.keys(source);if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }return target;
}function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }return obj;
}

var stylePropType = require('StyleSheetPropType')(require('ViewStylePropTypes'));

module.exports = _objectSpread({

  accessible: require('prop-types').bool,

  accessibilityLabel: require('prop-types').node,

  accessibilityHint: require('prop-types').string,

  accessibilityActions: require('prop-types').arrayOf(require('prop-types').string),

  accessibilityIgnoresInvertColors: require('prop-types').bool,

  accessibilityComponentType: require('prop-types').oneOf(require('ViewAccessibility').AccessibilityComponentTypes),

  accessibilityRole: require('prop-types').oneOf(require('ViewAccessibility').AccessibilityRoles),

  accessibilityStates: require('prop-types').arrayOf(require('prop-types').oneOf(require('ViewAccessibility').AccessibilityStates)),

  accessibilityLiveRegion: require('prop-types').oneOf(['none', 'polite', 'assertive']),

  importantForAccessibility: require('prop-types').oneOf(['auto', 'yes', 'no', 'no-hide-descendants']),

  accessibilityTraits: require('prop-types').oneOfType([require('prop-types').oneOf(require('ViewAccessibility').AccessibilityTraits), require('prop-types').arrayOf(require('prop-types').oneOf(require('ViewAccessibility').AccessibilityTraits))]),

  accessibilityViewIsModal: require('prop-types').bool,

  accessibilityElementsHidden: require('prop-types').bool,

  onAccessibilityAction: require('prop-types').func,

  onAccessibilityTap: require('prop-types').func,

  onMagicTap: require('prop-types').func,

  testID: require('prop-types').string,

  nativeID: require('prop-types').string,

  onResponderGrant: require('prop-types').func,

  onResponderMove: require('prop-types').func,

  onResponderReject: require('prop-types').func,

  onResponderRelease: require('prop-types').func,

  onResponderTerminate: require('prop-types').func,

  onResponderTerminationRequest: require('prop-types').func,

  onStartShouldSetResponder: require('prop-types').func,

  onStartShouldSetResponderCapture: require('prop-types').func,

  onMoveShouldSetResponder: require('prop-types').func,

  onMoveShouldSetResponderCapture: require('prop-types').func,

  hitSlop: require('EdgeInsetsPropType'),

  onLayout: require('prop-types').func,

  pointerEvents: require('prop-types').oneOf(['box-none', 'none', 'box-only', 'auto']),

  style: stylePropType,

  removeClippedSubviews: require('prop-types').bool,

  renderToHardwareTextureAndroid: require('prop-types').bool,

  shouldRasterizeIOS: require('prop-types').bool,

  collapsable: require('prop-types').bool,

  needsOffscreenAlphaCompositing: require('prop-types').bool }, require('PlatformViewPropTypes'));