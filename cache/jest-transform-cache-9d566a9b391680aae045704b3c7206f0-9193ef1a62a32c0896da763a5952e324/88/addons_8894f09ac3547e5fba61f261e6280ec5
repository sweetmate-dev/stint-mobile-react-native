93ed097e8d24a112108560cf1b031a3f
"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.createVariations = createVariations;exports.createSharedStyle = createSharedStyle;var _lodash = _interopRequireDefault(require("lodash"));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};var ownKeys = Object.keys(source);if (typeof Object.getOwnPropertySymbols === 'function') {ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {return Object.getOwnPropertyDescriptor(source, sym).enumerable;}));}ownKeys.forEach(function (key) {_defineProperty(target, key, source[key]);});}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}

function capitalizeFirstLetter(value) {
  return value.charAt(0).toUpperCase() + value.slice(1);
}
































function createVariations(baseName, nameSuffixes, key, value) {
  return _lodash.default.reduce(nameSuffixes, function (result, variant) {
    var variantName = variant ? baseName + "-" + variant : baseName;
    var keyName = variant ? "" + key + capitalizeFirstLetter(variant) : key;


    result[variantName] = _defineProperty({},
    keyName, value);


    return result;
  }, {});
}
































function createSharedStyle(componentNames) {var sharedStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};var customStyles = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  return _lodash.default.reduce(componentNames, function (result, componentName) {

    result[componentName] = _objectSpread({},
    sharedStyle,
    customStyles[componentName]);


    return result;
  }, {});
}