ff83b49d64df9c8fc02551825ce2360b










'use strict';var _jsxFileName = "/Users/johnamuesi/Documents/PRODUCTION/REACTNATIVE/STINT/stint/node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicator.js";function _extends() {_extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};return _extends.apply(this, arguments);}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};var ownKeys = Object.keys(source);if (typeof Object.getOwnPropertySymbols === 'function') {ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {return Object.getOwnPropertyDescriptor(source, sym).enumerable;}));}ownKeys.forEach(function (key) {_defineProperty(target, key, source[key]);});}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _objectWithoutProperties(source, excluded) {if (source == null) return {};var target = _objectWithoutPropertiesLoose(source, excluded);var key, i;if (Object.getOwnPropertySymbols) {var sourceSymbolKeys = Object.getOwnPropertySymbols(source);for (i = 0; i < sourceSymbolKeys.length; i++) {key = sourceSymbolKeys[i];if (excluded.indexOf(key) >= 0) continue;if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;target[key] = source[key];}}return target;}function _objectWithoutPropertiesLoose(source, excluded) {if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];}return target;}











var RCTActivityIndicator =
require('Platform').OS === 'android' ?
require('ProgressBarAndroid') :
require('requireNativeComponent')('RCTActivityIndicatorView');

var GRAY = '#999999';











































var ActivityIndicator = function ActivityIndicator(
props,
forwardedRef)
{var
  onLayout = props.onLayout,style = props.style,restProps = _objectWithoutProperties(props, ["onLayout", "style"]);
  var sizeStyle;

  switch (props.size) {
    case 'small':
      sizeStyle = styles.sizeSmall;
      break;
    case 'large':
      sizeStyle = styles.sizeLarge;
      break;
    default:
      sizeStyle = { height: props.size, width: props.size };
      break;}


  var nativeProps = _objectSpread({},
  restProps, {
    ref: forwardedRef,
    style: sizeStyle,
    styleAttr: 'Normal',
    indeterminate: true });


  return (
    require('React').createElement(require('View'), {
      onLayout: onLayout,
      style: require('StyleSheet').compose(
      styles.container,
      style), __source: { fileName: _jsxFileName, lineNumber: 100 } },



    require('React').createElement(RCTActivityIndicator, _extends({}, nativeProps, { __source: { fileName: _jsxFileName, lineNumber: 108 } }))));


};


var ActivityIndicatorWithRef = require('React').forwardRef(ActivityIndicator);

ActivityIndicatorWithRef.defaultProps = {
  animating: true,
  color: require('Platform').OS === 'ios' ? GRAY : null,
  hidesWhenStopped: true,
  size: 'small' };


var styles = require('StyleSheet').create({
  container: {
    alignItems: 'center',
    justifyContent: 'center' },

  sizeSmall: {
    width: 20,
    height: 20 },

  sizeLarge: {
    width: 36,
    height: 36 } });



module.exports = ActivityIndicatorWithRef;