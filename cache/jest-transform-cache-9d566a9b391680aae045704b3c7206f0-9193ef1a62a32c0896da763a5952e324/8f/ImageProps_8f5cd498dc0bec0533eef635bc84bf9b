85e87549b519e53464d365f700660239










'use strict';

var EdgeInsetsPropType = require('EdgeInsetsPropType');
var ImageSourcePropType = require('ImageSourcePropType');
var ImageStylePropTypes = require('ImageStylePropTypes');
var PropTypes = require('prop-types');
var StyleSheetPropType = require('StyleSheetPropType');



























































module.exports = {



  style: StyleSheetPropType(ImageStylePropTypes),





  source: ImageSourcePropType,





  defaultSource: PropTypes.oneOfType([
  PropTypes.shape({
    uri: PropTypes.string,
    width: PropTypes.number,
    height: PropTypes.number,
    scale: PropTypes.number }),

  PropTypes.number]),






  accessible: PropTypes.bool,






  accessibilityLabel: PropTypes.node,





  blurRadius: PropTypes.number,



  capInsets: EdgeInsetsPropType,



  resizeMethod: PropTypes.oneOf(['auto', 'resize', 'scale']),






  resizeMode: PropTypes.oneOf([
  'cover',
  'contain',
  'stretch',
  'repeat',
  'center']),







  testID: PropTypes.string,






  onLayout: PropTypes.func,





  onLoadStart: PropTypes.func,





  onProgress: PropTypes.func,





  onError: PropTypes.func,





  onPartialLoad: PropTypes.func,





  onLoad: PropTypes.func,





  onLoadEnd: PropTypes.func };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkltYWdlUHJvcHMuanMiXSwibmFtZXMiOlsiRWRnZUluc2V0c1Byb3BUeXBlIiwicmVxdWlyZSIsIkltYWdlU291cmNlUHJvcFR5cGUiLCJJbWFnZVN0eWxlUHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiU3R5bGVTaGVldFByb3BUeXBlIiwibW9kdWxlIiwiZXhwb3J0cyIsInN0eWxlIiwic291cmNlIiwiZGVmYXVsdFNvdXJjZSIsIm9uZU9mVHlwZSIsInNoYXBlIiwidXJpIiwic3RyaW5nIiwid2lkdGgiLCJudW1iZXIiLCJoZWlnaHQiLCJzY2FsZSIsImFjY2Vzc2libGUiLCJib29sIiwiYWNjZXNzaWJpbGl0eUxhYmVsIiwibm9kZSIsImJsdXJSYWRpdXMiLCJjYXBJbnNldHMiLCJyZXNpemVNZXRob2QiLCJvbmVPZiIsInJlc2l6ZU1vZGUiLCJ0ZXN0SUQiLCJvbkxheW91dCIsImZ1bmMiLCJvbkxvYWRTdGFydCIsIm9uUHJvZ3Jlc3MiLCJvbkVycm9yIiwib25QYXJ0aWFsTG9hZCIsIm9uTG9hZCIsIm9uTG9hZEVuZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQVVBOztBQUVBLElBQU1BLHFCQUFxQkMsUUFBUSxvQkFBUixDQUEzQjtBQUNBLElBQU1DLHNCQUFzQkQsUUFBUSxxQkFBUixDQUE1QjtBQUNBLElBQU1FLHNCQUFzQkYsUUFBUSxxQkFBUixDQUE1QjtBQUNBLElBQU1HLFlBQVlILFFBQVEsWUFBUixDQUFsQjtBQUNBLElBQU1JLHFCQUFxQkosUUFBUSxvQkFBUixDQUEzQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNERBSyxPQUFPQyxPQUFQLEdBQWlCOzs7O0FBSWZDLFNBQU9ILG1CQUFtQkYsbUJBQW5CLENBSlE7Ozs7OztBQVVmTSxVQUFRUCxtQkFWTzs7Ozs7O0FBZ0JmUSxpQkFBZU4sVUFBVU8sU0FBVixDQUFvQjtBQUNqQ1AsWUFBVVEsS0FBVixDQUFnQjtBQUNkQyxTQUFLVCxVQUFVVSxNQUREO0FBRWRDLFdBQU9YLFVBQVVZLE1BRkg7QUFHZEMsWUFBUWIsVUFBVVksTUFISjtBQUlkRSxXQUFPZCxVQUFVWSxNQUpILEVBQWhCLENBRGlDOztBQU9qQ1osWUFBVVksTUFQdUIsQ0FBcEIsQ0FoQkE7Ozs7Ozs7QUE4QmZHLGNBQVlmLFVBQVVnQixJQTlCUDs7Ozs7OztBQXFDZkMsc0JBQW9CakIsVUFBVWtCLElBckNmOzs7Ozs7QUEyQ2ZDLGNBQVluQixVQUFVWSxNQTNDUDs7OztBQStDZlEsYUFBV3hCLGtCQS9DSTs7OztBQW1EZnlCLGdCQUFjckIsVUFBVXNCLEtBQVYsQ0FBZ0IsQ0FBQyxNQUFELEVBQVMsUUFBVCxFQUFtQixPQUFuQixDQUFoQixDQW5EQzs7Ozs7OztBQTBEZkMsY0FBWXZCLFVBQVVzQixLQUFWLENBQWdCO0FBQzFCLFNBRDBCO0FBRTFCLFdBRjBCO0FBRzFCLFdBSDBCO0FBSTFCLFVBSjBCO0FBSzFCLFVBTDBCLENBQWhCLENBMURHOzs7Ozs7OztBQXVFZkUsVUFBUXhCLFVBQVVVLE1BdkVIOzs7Ozs7O0FBOEVmZSxZQUFVekIsVUFBVTBCLElBOUVMOzs7Ozs7QUFvRmZDLGVBQWEzQixVQUFVMEIsSUFwRlI7Ozs7OztBQTBGZkUsY0FBWTVCLFVBQVUwQixJQTFGUDs7Ozs7O0FBZ0dmRyxXQUFTN0IsVUFBVTBCLElBaEdKOzs7Ozs7QUFzR2ZJLGlCQUFlOUIsVUFBVTBCLElBdEdWOzs7Ozs7QUE0R2ZLLFVBQVEvQixVQUFVMEIsSUE1R0g7Ozs7OztBQWtIZk0sYUFBV2hDLFVBQVUwQixJQWxITixFQUFqQiIsImZpbGUiOiJJbWFnZVByb3BzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvd1xuICogQGZvcm1hdFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgRWRnZUluc2V0c1Byb3BUeXBlID0gcmVxdWlyZSgnRWRnZUluc2V0c1Byb3BUeXBlJyk7XG5jb25zdCBJbWFnZVNvdXJjZVByb3BUeXBlID0gcmVxdWlyZSgnSW1hZ2VTb3VyY2VQcm9wVHlwZScpO1xuY29uc3QgSW1hZ2VTdHlsZVByb3BUeXBlcyA9IHJlcXVpcmUoJ0ltYWdlU3R5bGVQcm9wVHlwZXMnKTtcbmNvbnN0IFByb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcbmNvbnN0IFN0eWxlU2hlZXRQcm9wVHlwZSA9IHJlcXVpcmUoJ1N0eWxlU2hlZXRQcm9wVHlwZScpO1xuXG5pbXBvcnQgdHlwZSB7RGltZW5zaW9uVmFsdWV9IGZyb20gJ1N0eWxlU2hlZXRUeXBlcyc7XG5pbXBvcnQgdHlwZSB7Vmlld1Byb3BzfSBmcm9tICdWaWV3UHJvcFR5cGVzJztcbmltcG9ydCB0eXBlIHtJbWFnZVNvdXJjZX0gZnJvbSAnSW1hZ2VTb3VyY2UnO1xuaW1wb3J0IHR5cGUge0VkZ2VJbnNldHNQcm9wfSBmcm9tICdFZGdlSW5zZXRzUHJvcFR5cGUnO1xuaW1wb3J0IHR5cGUge1N5bnRoZXRpY0V2ZW50fSBmcm9tICdDb3JlRXZlbnRUeXBlcyc7XG5pbXBvcnQgdHlwZSB7SW1hZ2VTdHlsZVByb3B9IGZyb20gJ1N0eWxlU2hlZXQnO1xuXG50eXBlIE9uTG9hZEV2ZW50ID0gU3ludGhldGljRXZlbnQ8XG4gICRSZWFkT25seTx7fFxuICAgIC8vIE9ubHkgb24gQW5kcm9pZFxuICAgIHVyaT86IHN0cmluZyxcblxuICAgIHNvdXJjZTogJFJlYWRPbmx5PHt8XG4gICAgICB3aWR0aDogbnVtYmVyLFxuICAgICAgaGVpZ2h0OiBudW1iZXIsXG4gICAgICB1cmw6IHN0cmluZyxcbiAgICB8fT4sXG4gIHx9Pixcbj47XG5cbnR5cGUgSU9TSW1hZ2VQcm9wcyA9ICRSZWFkT25seTx7fFxuICBkZWZhdWx0U291cmNlPzogP0ltYWdlU291cmNlLFxuICBvblBhcnRpYWxMb2FkPzogPygpID0+IHZvaWQsXG4gIG9uUHJvZ3Jlc3M/OiA/KFxuICAgIGV2ZW50OiBTeW50aGV0aWNFdmVudDwkUmVhZE9ubHk8e3xsb2FkZWQ6IG51bWJlciwgdG90YWw6IG51bWJlcnx9Pj4sXG4gICkgPT4gdm9pZCxcbnx9PjtcblxudHlwZSBBbmRyb2lkSW1hZ2VQcm9wcyA9ICRSZWFkT25seTx7fFxuICBsb2FkaW5nSW5kaWNhdG9yU291cmNlPzogPyhudW1iZXIgfCAkUmVhZE9ubHk8e3x1cmk6IHN0cmluZ3x9PiksXG4gIHByb2dyZXNzaXZlUmVuZGVyaW5nRW5hYmxlZD86ID9ib29sZWFuLFxuICBmYWRlRHVyYXRpb24/OiA/bnVtYmVyLFxufH0+O1xuXG5leHBvcnQgdHlwZSBJbWFnZVByb3BzID0ge3xcbiAgLi4uVmlld1Byb3BzLFxuICAuLi5JT1NJbWFnZVByb3BzLFxuICAuLi5BbmRyb2lkSW1hZ2VQcm9wcyxcbiAgYmx1clJhZGl1cz86IG51bWJlcixcbiAgY2FwSW5zZXRzPzogP0VkZ2VJbnNldHNQcm9wLFxuXG4gIG9uRXJyb3I/OiA/KGV2ZW50OiBTeW50aGV0aWNFdmVudDwkUmVhZE9ubHk8e3x8fT4+KSA9PiB2b2lkLFxuICBvbkxvYWQ/OiA/KGV2ZW50OiBPbkxvYWRFdmVudCkgPT4gdm9pZCxcbiAgb25Mb2FkRW5kPzogPygpID0+IHZvaWQsXG4gIG9uTG9hZFN0YXJ0PzogPygpID0+IHZvaWQsXG4gIHJlc2l6ZU1ldGhvZD86ID8oJ2F1dG8nIHwgJ3Jlc2l6ZScgfCAnc2NhbGUnKSxcbiAgc291cmNlPzogP0ltYWdlU291cmNlLFxuICBzdHlsZT86IEltYWdlU3R5bGVQcm9wLFxuXG4gIC8vIENhbiBiZSBzZXQgdmlhIHByb3BzIG9yIHN0eWxlLCBmb3Igbm93XG4gIGhlaWdodD86IERpbWVuc2lvblZhbHVlLFxuICB3aWR0aD86IERpbWVuc2lvblZhbHVlLFxuICByZXNpemVNb2RlPzogPygnY292ZXInIHwgJ2NvbnRhaW4nIHwgJ3N0cmV0Y2gnIHwgJ3JlcGVhdCcgfCAnY2VudGVyJyksXG5cbiAgc3JjPzogZW1wdHksXG4gIGNoaWxkcmVuPzogZW1wdHksXG58fTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIC8qKlxuICAgKiBTZWUgaHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QtbmF0aXZlL2RvY3MvaW1hZ2UuaHRtbCNzdHlsZVxuICAgKi9cbiAgc3R5bGU6IFN0eWxlU2hlZXRQcm9wVHlwZShJbWFnZVN0eWxlUHJvcFR5cGVzKSxcbiAgLyoqXG4gICAqIFRoZSBpbWFnZSBzb3VyY2UgKGVpdGhlciBhIHJlbW90ZSBVUkwgb3IgYSBsb2NhbCBmaWxlIHJlc291cmNlKS5cbiAgICpcbiAgICogU2VlIGh0dHBzOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0LW5hdGl2ZS9kb2NzL2ltYWdlLmh0bWwjc291cmNlXG4gICAqL1xuICBzb3VyY2U6IEltYWdlU291cmNlUHJvcFR5cGUsXG4gIC8qKlxuICAgKiBBIHN0YXRpYyBpbWFnZSB0byBkaXNwbGF5IHdoaWxlIGxvYWRpbmcgdGhlIGltYWdlIHNvdXJjZS5cbiAgICpcbiAgICogU2VlIGh0dHBzOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0LW5hdGl2ZS9kb2NzL2ltYWdlLmh0bWwjZGVmYXVsdHNvdXJjZVxuICAgKi9cbiAgZGVmYXVsdFNvdXJjZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbXG4gICAgUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgIHVyaTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICAgIHdpZHRoOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgICAgaGVpZ2h0OiBQcm9wVHlwZXMubnVtYmVyLFxuICAgICAgc2NhbGU6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgfSksXG4gICAgUHJvcFR5cGVzLm51bWJlcixcbiAgXSksXG4gIC8qKlxuICAgKiBXaGVuIHRydWUsIGluZGljYXRlcyB0aGUgaW1hZ2UgaXMgYW4gYWNjZXNzaWJpbGl0eSBlbGVtZW50LlxuICAgKlxuICAgKiBTZWUgaHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QtbmF0aXZlL2RvY3MvaW1hZ2UuaHRtbCNhY2Nlc3NpYmxlXG4gICAqL1xuICBhY2Nlc3NpYmxlOiBQcm9wVHlwZXMuYm9vbCxcbiAgLyoqXG4gICAqIFRoZSB0ZXh0IHRoYXQncyByZWFkIGJ5IHRoZSBzY3JlZW4gcmVhZGVyIHdoZW4gdGhlIHVzZXIgaW50ZXJhY3RzIHdpdGhcbiAgICogdGhlIGltYWdlLlxuICAgKlxuICAgKiBTZWUgaHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QtbmF0aXZlL2RvY3MvaW1hZ2UuaHRtbCNhY2Nlc3NpYmlsaXR5bGFiZWxcbiAgICovXG4gIGFjY2Vzc2liaWxpdHlMYWJlbDogUHJvcFR5cGVzLm5vZGUsXG4gIC8qKlxuICAgKiBibHVyUmFkaXVzOiB0aGUgYmx1ciByYWRpdXMgb2YgdGhlIGJsdXIgZmlsdGVyIGFkZGVkIHRvIHRoZSBpbWFnZVxuICAgKlxuICAgKiBTZWUgaHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QtbmF0aXZlL2RvY3MvaW1hZ2UuaHRtbCNibHVycmFkaXVzXG4gICAqL1xuICBibHVyUmFkaXVzOiBQcm9wVHlwZXMubnVtYmVyLFxuICAvKipcbiAgICogU2VlIGh0dHBzOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0LW5hdGl2ZS9kb2NzL2ltYWdlLmh0bWwjY2FwaW5zZXRzXG4gICAqL1xuICBjYXBJbnNldHM6IEVkZ2VJbnNldHNQcm9wVHlwZSxcbiAgLyoqXG4gICAqIFNlZSBodHRwczovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC1uYXRpdmUvZG9jcy9pbWFnZS5odG1sI3Jlc2l6ZW1ldGhvZFxuICAgKi9cbiAgcmVzaXplTWV0aG9kOiBQcm9wVHlwZXMub25lT2YoWydhdXRvJywgJ3Jlc2l6ZScsICdzY2FsZSddKSxcbiAgLyoqXG4gICAqIERldGVybWluZXMgaG93IHRvIHJlc2l6ZSB0aGUgaW1hZ2Ugd2hlbiB0aGUgZnJhbWUgZG9lc24ndCBtYXRjaCB0aGUgcmF3XG4gICAqIGltYWdlIGRpbWVuc2lvbnMuXG4gICAqXG4gICAqIFNlZSBodHRwczovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC1uYXRpdmUvZG9jcy9pbWFnZS5odG1sI3Jlc2l6ZW1vZGVcbiAgICovXG4gIHJlc2l6ZU1vZGU6IFByb3BUeXBlcy5vbmVPZihbXG4gICAgJ2NvdmVyJyxcbiAgICAnY29udGFpbicsXG4gICAgJ3N0cmV0Y2gnLFxuICAgICdyZXBlYXQnLFxuICAgICdjZW50ZXInLFxuICBdKSxcbiAgLyoqXG4gICAqIEEgdW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoaXMgZWxlbWVudCB0byBiZSB1c2VkIGluIFVJIEF1dG9tYXRpb25cbiAgICogdGVzdGluZyBzY3JpcHRzLlxuICAgKlxuICAgKiBTZWUgaHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QtbmF0aXZlL2RvY3MvaW1hZ2UuaHRtbCN0ZXN0aWRcbiAgICovXG4gIHRlc3RJRDogUHJvcFR5cGVzLnN0cmluZyxcbiAgLyoqXG4gICAqIEludm9rZWQgb24gbW91bnQgYW5kIGxheW91dCBjaGFuZ2VzIHdpdGhcbiAgICogYHtuYXRpdmVFdmVudDoge2xheW91dDoge3gsIHksIHdpZHRoLCBoZWlnaHR9fX1gLlxuICAgKlxuICAgKiBTZWUgaHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QtbmF0aXZlL2RvY3MvaW1hZ2UuaHRtbCNvbmxheW91dFxuICAgKi9cbiAgb25MYXlvdXQ6IFByb3BUeXBlcy5mdW5jLFxuICAvKipcbiAgICogSW52b2tlZCBvbiBsb2FkIHN0YXJ0LlxuICAgKlxuICAgKiBTZWUgaHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QtbmF0aXZlL2RvY3MvaW1hZ2UuaHRtbCNvbmxvYWRzdGFydFxuICAgKi9cbiAgb25Mb2FkU3RhcnQ6IFByb3BUeXBlcy5mdW5jLFxuICAvKipcbiAgICogSW52b2tlZCBvbiBkb3dubG9hZCBwcm9ncmVzcyB3aXRoIGB7bmF0aXZlRXZlbnQ6IHtsb2FkZWQsIHRvdGFsfX1gLlxuICAgKlxuICAgKiBTZWUgaHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QtbmF0aXZlL2RvY3MvaW1hZ2UuaHRtbCNvbnByb2dyZXNzXG4gICAqL1xuICBvblByb2dyZXNzOiBQcm9wVHlwZXMuZnVuYyxcbiAgLyoqXG4gICAqIEludm9rZWQgb24gbG9hZCBlcnJvciB3aXRoIGB7bmF0aXZlRXZlbnQ6IHtlcnJvcn19YC5cbiAgICpcbiAgICogU2VlIGh0dHBzOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0LW5hdGl2ZS9kb2NzL2ltYWdlLmh0bWwjb25lcnJvclxuICAgKi9cbiAgb25FcnJvcjogUHJvcFR5cGVzLmZ1bmMsXG4gIC8qKlxuICAgKiBJbnZva2VkIHdoZW4gYSBwYXJ0aWFsIGxvYWQgb2YgdGhlIGltYWdlIGlzIGNvbXBsZXRlLlxuICAgKlxuICAgKiBTZWUgaHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QtbmF0aXZlL2RvY3MvaW1hZ2UuaHRtbCNvbnBhcnRpYWxsb2FkXG4gICAqL1xuICBvblBhcnRpYWxMb2FkOiBQcm9wVHlwZXMuZnVuYyxcbiAgLyoqXG4gICAqIEludm9rZWQgd2hlbiBsb2FkIGNvbXBsZXRlcyBzdWNjZXNzZnVsbHkuXG4gICAqXG4gICAqIFNlZSBodHRwczovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC1uYXRpdmUvZG9jcy9pbWFnZS5odG1sI29ubG9hZFxuICAgKi9cbiAgb25Mb2FkOiBQcm9wVHlwZXMuZnVuYyxcbiAgLyoqXG4gICAqIEludm9rZWQgd2hlbiBsb2FkIGVpdGhlciBzdWNjZWVkcyBvciBmYWlscy5cbiAgICpcbiAgICogU2VlIGh0dHBzOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0LW5hdGl2ZS9kb2NzL2ltYWdlLmh0bWwjb25sb2FkZW5kXG4gICAqL1xuICBvbkxvYWRFbmQ6IFByb3BUeXBlcy5mdW5jLFxufTtcbiJdfQ==