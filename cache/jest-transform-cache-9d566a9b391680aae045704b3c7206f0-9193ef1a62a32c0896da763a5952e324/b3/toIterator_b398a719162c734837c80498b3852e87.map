{"version":3,"sources":["toIterator.js"],"names":["KIND_KEY","KIND_VALUE","KIND_KEY_VAL","ITERATOR_SYMBOL","Symbol","iterator","toIterator","Array","prototype","String","ArrayIterator","array","kind","isArray","TypeError","_iteratedObject","_kind","_nextIndex","createIterResultObject","undefined","len","length","index","StringIterator","string","_iteratedString","s","ret","first","charCodeAt","second","value","done","object","module","exports"],"mappings":"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","file":"toIterator.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\n/**\n * Given an object `toIterator` will return the itrator for that object. If the\n * object has a `Symbol.iterator` method we just call that. Otherwise we\n * implement the ES6 `Array` and `String` Iterator.\n */\n\n/**\n * Constants\n */\n\nconst KIND_KEY = 'key';\nconst KIND_VALUE = 'value';\nconst KIND_KEY_VAL = 'key+value';\n/*global Symbol: true*/\nconst ITERATOR_SYMBOL =\n  typeof Symbol === 'function' ? Symbol.iterator : '@@iterator';\n\nconst toIterator = (function() {\n  if (\n    !(Array.prototype[ITERATOR_SYMBOL] && String.prototype[ITERATOR_SYMBOL])\n  ) {\n    // IIFE to avoid creating classes for no reason because of hoisting.\n    return (function() {\n      class ArrayIterator {\n        // 22.1.5.1 CreateArrayIterator Abstract Operation\n        constructor(array, kind) {\n          if (!Array.isArray(array)) {\n            throw new TypeError('Object is not an Array');\n          }\n          this._iteratedObject = array;\n          this._kind = kind;\n          this._nextIndex = 0;\n        }\n\n        // 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n        next() {\n          if (!this instanceof ArrayIterator) {\n            throw new TypeError('Object is not an ArrayIterator');\n          }\n\n          if (this._iteratedObject == null) {\n            return createIterResultObject(undefined, true);\n          }\n\n          const array = this._iteratedObject;\n          const len = this._iteratedObject.length;\n          const index = this._nextIndex;\n          const kind = this._kind;\n\n          if (index >= len) {\n            this._iteratedObject = undefined;\n            return createIterResultObject(undefined, true);\n          }\n\n          this._nextIndex = index + 1;\n\n          if (kind === KIND_KEY) {\n            return createIterResultObject(index, false);\n          } else if (kind === KIND_VALUE) {\n            return createIterResultObject(array[index], false);\n          } else if (kind === KIND_KEY_VAL) {\n            return createIterResultObject([index, array[index]], false);\n          }\n        }\n\n        // 22.1.5.2.2 %ArrayIteratorPrototype%[@@iterator]()\n        '@@iterator'() {\n          return this;\n        }\n      }\n\n      class StringIterator {\n        // 21.1.5.1 CreateStringIterator Abstract Operation\n        constructor(string) {\n          if (typeof string !== 'string') {\n            throw new TypeError('Object is not a string');\n          }\n          this._iteratedString = string;\n          this._nextIndex = 0;\n        }\n\n        // 21.1.5.2.1 %StringIteratorPrototype%.next()\n        next() {\n          if (!this instanceof StringIterator) {\n            throw new TypeError('Object is not a StringIterator');\n          }\n\n          if (this._iteratedString == null) {\n            return createIterResultObject(undefined, true);\n          }\n\n          const index = this._nextIndex;\n          const s = this._iteratedString;\n          const len = s.length;\n\n          if (index >= len) {\n            this._iteratedString = undefined;\n            return createIterResultObject(undefined, true);\n          }\n\n          let ret;\n          const first = s.charCodeAt(index);\n\n          if (first < 0xd800 || first > 0xdbff || index + 1 === len) {\n            ret = s[index];\n          } else {\n            const second = s.charCodeAt(index + 1);\n            if (second < 0xdc00 || second > 0xdfff) {\n              ret = s[index];\n            } else {\n              ret = s[index] + s[index + 1];\n            }\n          }\n\n          this._nextIndex = index + ret.length;\n\n          return createIterResultObject(ret, false);\n        }\n\n        // 21.1.5.2.2 %StringIteratorPrototype%[@@ITERATOR_SYMBOL]()\n        '@@iterator'() {\n          return this;\n        }\n      }\n\n      // 7.4.7 createIterResultObject(value, done)\n      function createIterResultObject(value, done) {\n        return {value: value, done: done};\n      }\n\n      return function(object, kind) {\n        if (typeof object === 'string') {\n          return new StringIterator(object);\n        } else if (Array.isArray(object)) {\n          return new ArrayIterator(object, kind || KIND_VALUE);\n        } else {\n          return object[ITERATOR_SYMBOL]();\n        }\n      };\n    })();\n  } else {\n    return function(object) {\n      return object[ITERATOR_SYMBOL]();\n    };\n  }\n})();\n\n/**\n * Export constants\n */\n\nObject.assign(toIterator, {\n  KIND_KEY,\n  KIND_VALUE,\n  KIND_KEY_VAL,\n  ITERATOR_SYMBOL,\n});\n\nmodule.exports = toIterator;\n"]}