{"version":3,"sources":["VirtualizedList.js"],"names":["Batchinator","require","FillRateHelper","PropTypes","React","ReactNative","RefreshControl","ScrollView","StyleSheet","UIManager","View","ViewabilityHelper","flattenStyle","infoLog","invariant","warning","computeWindowedRenderLimits","_usedIndexForKey","_keylessItemComponentName","VirtualizedList","params","animated","veryLast","props","getItemCount","data","frame","_getFrameMetricsApprox","offset","Math","max","length","_footerLength","_scrollMetrics","visibleLength","_scrollRef","scrollTo","horizontal","x","y","getItemLayout","onScrollToIndexFailed","index","viewOffset","viewPosition","_highestMeasuredFrameIndex","averageItemLength","_averageCellLength","highestMeasuredFrameIndex","item","getItem","itemCount","scrollToIndex","_nestedChildLists","forEach","childList","ref","recordInteraction","_viewabilityTuples","t","viewabilityHelper","_updateViewableItems","flashScrollIndicators","getScrollResponder","getScrollableNode","findNodeHandle","setNativeProps","virtualizedList","getScrollMetrics","_getScrollMetrics","getOutermostParentListRef","_getOutermostParentListRef","getNestedChildState","_getNestedChildState","registerAsNestedChild","_registerAsNestedChild","unregisterAsNestedChild","_unregisterAsNestedChild","context","virtualizedCell","cellKey","_hasMore","onScroll","__isNative","windowSize","_fillRateHelper","_getFrameMetrics","_updateCellsToRenderBatcher","_updateCellsToRender","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","push","initialState","first","initialScrollIndex","last","min","initialNumToRender","_isNestedWithSameOrientation","storedState","listKey","_getCellKey","state","_frames","frames","key","dispose","abort","tuple","deactivateAndFlush","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","CellRendererComponent","ItemSeparatorComponent","keyExtractor","stickyOffset","ListHeaderComponent","end","prevCellKey","ii","_indicesToKeys","set","has","undefined","_onUpdateSeparators","_onCellLayout","e","_onCellUnmount","_cellRefs","disableVirtualization","nestedContext","__DEV__","flatStyles","contentContainerStyle","flexWrap","ListEmptyComponent","ListFooterComponent","isVirtualizationDisabled","_isVirtualizationDisabled","inverted","styles","horizontallyInverted","verticallyInverted","Set","element","isValidElement","_onLayoutHeader","compose","ListHeaderComponentStyle","spacerKey","lastInitialIndex","_pushCells","firstAfterInitial","insertedStickySpacer","size","initBlock","stickyBlock","leadSpace","trailSpace","firstSpace","_hasWarned","keys","console","warn","lastFrame","endFrame","tailSpacerLength","cloneElement","onLayout","_onLayoutEmpty","event","style","_onLayoutFooter","ListFooterComponentStyle","scrollProps","onContentSizeChange","_onContentSizeChange","_onLayout","_onScroll","onScrollBeginDrag","_onScrollBeginDrag","onScrollEndDrag","_onScrollEndDrag","onMomentumScrollEnd","_onMomentumScrollEnd","scrollEventThrottle","invertStickyHeaders","ret","renderScrollComponent","_defaultRenderScrollComponent","_captureScrollRef","debug","flex","_renderDebugOverlay","prevProps","extraData","_hasDataChangedSinceEndReached","resetViewableIndices","_scheduleCellsToRenderUpdate","computeBlankness","layout","nativeEvent","next","_selectOffset","_selectLength","inLayout","curr","_totalCellLength","_totalCellsMeasured","childListKeys","_cellKeysToChildListKeys","get","childKey","measureLayoutRelativeToContainingList","_computeBlankness","measureLayout","width","height","_offsetFromParentVirtualizedList","contentLength","scrollMetrics","_convertParentScrollMetrics","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","baseStyle","position","top","right","bottom","borderColor","borderWidth","f","left","backgroundColor","metrics","onEndReached","onEndReachedThreshold","distanceFromEnd","_sentEndForContentLength","velocity","hiPri","scrollingThreshold","distTop","distBottom","schedule","onUpdate","_createViewToken","newProps","prevState","maxToRenderPerBatch","PureComponent","defaultProps","type","displayName","String","contextTypes","shape","string","func","bool","childContextTypes","existingChildData","childListsInCell","add","_hasInteracted","updateSeparatorProps","Map","_headerLength","_hasDoneInitialScroll","_prevParentOffset","dOffset","dt","timestamp","onRefresh","refreshing","JSON","stringify","refreshControl","progressViewOffset","_maybeCallOnEndReached","timeStamp","layoutMeasurement","contentSize","contentOffset","perf","prevDt","activate","setState","newState","renderAhead","newFirst","newLast","cellKeyForIndex","someChildHasMore","hasMore","isViewable","frameType","number","isRequired","checkPropTypes","CellRenderer","separatorProps","highlighted","leadingItem","_separators","highlight","onUpdateSeparators","unhighlight","updateProps","select","onUnmount","fillRateHelper","parentProps","renderItem","separators","enabled","itemSeparator","cellStyle","flexDirection","Component","VirtualizedCellWrapper","children","create","transform","scaleY","scaleX","module","exports"],"mappings":"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","file":"VirtualizedList.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst Batchinator = require('Batchinator');\nconst FillRateHelper = require('FillRateHelper');\nconst PropTypes = require('prop-types');\nconst React = require('React');\nconst ReactNative = require('ReactNative');\nconst RefreshControl = require('RefreshControl');\nconst ScrollView = require('ScrollView');\nconst StyleSheet = require('StyleSheet');\nconst UIManager = require('UIManager');\nconst View = require('View');\nconst ViewabilityHelper = require('ViewabilityHelper');\n\nconst flattenStyle = require('flattenStyle');\nconst infoLog = require('infoLog');\nconst invariant = require('fbjs/lib/invariant');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst warning = require('fbjs/lib/warning');\n\nconst {computeWindowedRenderLimits} = require('VirtualizeUtils');\n\nimport type {DangerouslyImpreciseStyleProp, ViewStyleProp} from 'StyleSheet';\nimport type {\n  ViewabilityConfig,\n  ViewToken,\n  ViewabilityConfigCallbackPair,\n} from 'ViewabilityHelper';\n\ntype Item = any;\n\nexport type renderItemType = (info: any) => ?React.Element<any>;\n\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n  }) => void,\n};\n\ntype RequiredProps = {\n  // TODO: Conflicts with the optional `renderItem` in\n  // `VirtualizedSectionList`'s props.\n  renderItem: $FlowFixMe<renderItemType>,\n  /**\n   * The default accessor functions assume this is an Array<{key: string}> but you can override\n   * getItem, getItemCount, and keyExtractor to handle any type of index-based data.\n   */\n  data?: any,\n  /**\n   * A generic accessor for extracting an item from any sort of data blob.\n   */\n  getItem: (data: any, index: number) => ?Item,\n  /**\n   * Determines how many items are in the data blob.\n   */\n  getItemCount: (data: any) => number,\n};\ntype OptionalProps = {\n  /**\n   * `debug` will turn on extra logging and visual overlays to aid with debugging both usage and\n   * implementation, but with a significant perf hit.\n   */\n  debug?: ?boolean,\n  /**\n   * DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully\n   * unmounts react instances that are outside of the render window. You should only need to disable\n   * this for debugging purposes.\n   */\n  disableVirtualization: boolean,\n  /**\n   * A marker property for telling the list to re-render (since it implements `PureComponent`). If\n   * any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the\n   * `data` prop, stick it here and treat it immutably.\n   */\n  extraData?: any,\n  getItemLayout?: (\n    data: any,\n    index: number,\n  ) => {length: number, offset: number, index: number}, // e.g. height, y\n  horizontal?: ?boolean,\n  /**\n   * How many items to render in the initial batch. This should be enough to fill the screen but not\n   * much more. Note these items will never be unmounted as part of the windowed rendering in order\n   * to improve perceived performance of scroll-to-top actions.\n   */\n  initialNumToRender: number,\n  /**\n   * Instead of starting at the top with the first item, start at `initialScrollIndex`. This\n   * disables the \"scroll to top\" optimization that keeps the first `initialNumToRender` items\n   * always rendered and immediately renders the items starting at this initial index. Requires\n   * `getItemLayout` to be implemented.\n   */\n  initialScrollIndex?: ?number,\n  /**\n   * Reverses the direction of scroll. Uses scale transforms of -1.\n   */\n  inverted?: ?boolean,\n  keyExtractor: (item: Item, index: number) => string,\n  /**\n   * Each cell is rendered using this element. Can be a React Component Class,\n   * or a render function. Defaults to using View.\n   */\n  CellRendererComponent?: ?React.ComponentType<any>,\n  /**\n   * Rendered when the list is empty. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListEmptyComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered at the bottom of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListFooterComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListFooterComponent\n   */\n  ListFooterComponentStyle?: ViewStyleProp,\n  /**\n   * Rendered at the top of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListHeaderComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListHeaderComponent\n   */\n  ListHeaderComponentStyle?: ViewStyleProp,\n  /**\n   * A unique identifier for this list. If there are multiple VirtualizedLists at the same level of\n   * nesting within another VirtualizedList, this key is necessary for virtualization to\n   * work properly.\n   */\n  listKey?: string,\n  /**\n   * The maximum number of items to render in each incremental render batch. The more rendered at\n   * once, the better the fill rate, but responsiveness my suffer because rendering content may\n   * interfere with responding to button taps or other interactions.\n   */\n  maxToRenderPerBatch: number,\n  onEndReached?: ?(info: {distanceFromEnd: number}) => void,\n  onEndReachedThreshold?: ?number, // units of visible length\n  onLayout?: ?Function,\n  /**\n   * If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make\n   * sure to also set the `refreshing` prop correctly.\n   */\n  onRefresh?: ?Function,\n  /**\n   * Used to handle failures when scrolling to an index that has not been measured yet. Recommended\n   * action is to either compute your own offset and `scrollTo` it, or scroll as far as possible and\n   * then try again after more items have been rendered.\n   */\n  onScrollToIndexFailed?: ?(info: {\n    index: number,\n    highestMeasuredFrameIndex: number,\n    averageItemLength: number,\n  }) => void,\n  /**\n   * Called when the viewability of rows changes, as defined by the\n   * `viewabilityConfig` prop.\n   */\n  onViewableItemsChanged?: ?(info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n  }) => void,\n  /**\n   * Set this when offset is needed for the loading indicator to show correctly.\n   * @platform android\n   */\n  progressViewOffset?: number,\n  /**\n   * A custom refresh control element. When set, it overrides the default\n   * <RefreshControl> component built internally. The onRefresh and refreshing\n   * props are also ignored. Only works for vertical VirtualizedList.\n   */\n  refreshControl?: ?React.Element<any>,\n  /**\n   * Set this true while waiting for new data from a refresh.\n   */\n  refreshing?: ?boolean,\n  /**\n   * Note: may have bugs (missing content) in some circumstances - use at your own risk.\n   *\n   * This may improve scroll performance for large lists.\n   */\n  removeClippedSubviews?: boolean,\n  /**\n   * Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\n   */\n  renderScrollComponent?: (props: Object) => React.Element<any>,\n  /**\n   * Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off\n   * screen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.\n   */\n  updateCellsBatchingPeriod: number,\n  viewabilityConfig?: ViewabilityConfig,\n  /**\n   * List of ViewabilityConfig/onViewableItemsChanged pairs. A specific onViewableItemsChanged\n   * will be called when its corresponding ViewabilityConfig's conditions are met.\n   */\n  viewabilityConfigCallbackPairs?: Array<ViewabilityConfigCallbackPair>,\n  /**\n   * Determines the maximum number of items rendered outside of the visible area, in units of\n   * visible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will\n   * render the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing\n   * this number will reduce memory consumption and may improve performance, but will increase the\n   * chance that fast scrolling may reveal momentary blank areas of unrendered content.\n   */\n  windowSize: number,\n};\n/* $FlowFixMe - this Props seems to be missing a bunch of stuff. Remove this\n * comment to see the errors */\nexport type Props = RequiredProps & OptionalProps;\n\nlet _usedIndexForKey = false;\nlet _keylessItemComponentName: string = '';\n\ntype Frame = {\n  offset: number,\n  length: number,\n  index: number,\n  inLayout: boolean,\n};\n\ntype ChildListState = {\n  first: number,\n  last: number,\n  frames: {[key: number]: Frame},\n};\n\ntype State = {first: number, last: number};\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](/react-native/docs/flatlist.html)\n * and [`<SectionList>`](/react-native/docs/sectionlist.html) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n */\nclass VirtualizedList extends React.PureComponent<Props, State> {\n  props: Props;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params?: ?{animated?: ?boolean}) {\n    const animated = params ? params.animated : true;\n    const veryLast = this.props.getItemCount(this.props.data) - 1;\n    const frame = this._getFrameMetricsApprox(veryLast);\n    const offset = Math.max(\n      0,\n      frame.offset +\n        frame.length +\n        this._footerLength -\n        this._scrollMetrics.visibleLength,\n    );\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.scrollTo(\n      /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n       * comment suppresses an error when upgrading Flow's support for React.\n       * To see the error delete this comment and run Flow. */\n      this.props.horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n  }) {\n    const {\n      data,\n      horizontal,\n      getItemCount,\n      getItemLayout,\n      onScrollToIndexFailed,\n    } = this.props;\n    const {animated, index, viewOffset, viewPosition} = params;\n    invariant(\n      index >= 0 && index < getItemCount(data),\n      `scrollToIndex out of range: ${index} vs ${getItemCount(data) - 1}`,\n    );\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(\n        !!onScrollToIndexFailed,\n        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +\n          'otherwise there is no way to know the location of offscreen indices or handle failures.',\n      );\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index,\n      });\n      return;\n    }\n    const frame = this._getFrameMetricsApprox(index);\n    const offset =\n      Math.max(\n        0,\n        frame.offset -\n          (viewPosition || 0) *\n            (this._scrollMetrics.visibleLength - frame.length),\n      ) - (viewOffset || 0);\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.scrollTo(\n      /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n       * comment suppresses an error when upgrading Flow's support for React.\n       * To see the error delete this comment and run Flow. */\n      horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewPosition?: number,\n  }) {\n    const {item} = params;\n    const {data, getItem, getItemCount} = this.props;\n    const itemCount = getItemCount(data);\n    for (let index = 0; index < itemCount; index++) {\n      if (getItem(data, index) === item) {\n        this.scrollToIndex({...params, index});\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number}) {\n    const {animated, offset} = params;\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.scrollTo(\n      /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n       * comment suppresses an error when upgrading Flow's support for React.\n       * To see the error delete this comment and run Flow. */\n      this.props.horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props.data);\n  }\n\n  flashScrollIndicators() {\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder() {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return ReactNative.findNodeHandle(this._scrollRef);\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  static defaultProps = {\n    disableVirtualization: false,\n    horizontal: false,\n    initialNumToRender: 10,\n    keyExtractor: (item: Item, index: number) => {\n      if (item.key != null) {\n        return item.key;\n      }\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n      return String(index);\n    },\n    maxToRenderPerBatch: 10,\n    onEndReachedThreshold: 2, // multiples of length\n    scrollEventThrottle: 50,\n    updateCellsBatchingPeriod: 50,\n    windowSize: 21, // multiples of length\n  };\n\n  static contextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n    virtualizedList: PropTypes.shape({\n      getScrollMetrics: PropTypes.func,\n      horizontal: PropTypes.bool,\n      getOutermostParentListRef: PropTypes.func,\n      getNestedChildState: PropTypes.func,\n      registerAsNestedChild: PropTypes.func,\n      unregisterAsNestedChild: PropTypes.func,\n    }),\n  };\n\n  static childContextTypes = {\n    virtualizedList: PropTypes.shape({\n      getScrollMetrics: PropTypes.func,\n      horizontal: PropTypes.bool,\n      getOutermostParentListRef: PropTypes.func,\n      getNestedChildState: PropTypes.func,\n      registerAsNestedChild: PropTypes.func,\n      unregisterAsNestedChild: PropTypes.func,\n    }),\n  };\n\n  getChildContext() {\n    return {\n      virtualizedList: {\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: this.props.horizontal,\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        getNestedChildState: this._getNestedChildState,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild,\n      },\n    };\n  }\n\n  _getCellKey(): string {\n    return (\n      (this.context.virtualizedCell && this.context.virtualizedCell.cellKey) ||\n      'rootList'\n    );\n  }\n\n  _getScrollMetrics = () => {\n    return this._scrollMetrics;\n  };\n\n  hasMore(): boolean {\n    return this._hasMore;\n  }\n\n  _getOutermostParentListRef = () => {\n    if (this._isNestedWithSameOrientation()) {\n      return this.context.virtualizedList.getOutermostParentListRef();\n    } else {\n      return this;\n    }\n  };\n\n  _getNestedChildState = (key: string): ?ChildListState => {\n    const existingChildData = this._nestedChildLists.get(key);\n    return existingChildData && existingChildData.state;\n  };\n\n  _registerAsNestedChild = (childList: {\n    cellKey: string,\n    key: string,\n    ref: VirtualizedList,\n  }): ?ChildListState => {\n    // Register the mapping between this child key and the cellKey for its cell\n    const childListsInCell =\n      this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n    childListsInCell.add(childList.key);\n    this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n\n    const existingChildData = this._nestedChildLists.get(childList.key);\n    invariant(\n      !(existingChildData && existingChildData.ref !== null),\n      'A VirtualizedList contains a cell which itself contains ' +\n        'more than one VirtualizedList of the same orientation as the parent ' +\n        'list. You must pass a unique listKey prop to each sibling list.',\n    );\n    this._nestedChildLists.set(childList.key, {\n      ref: childList.ref,\n      state: null,\n    });\n\n    if (this._hasInteracted) {\n      childList.ref.recordInteraction();\n    }\n  };\n\n  _unregisterAsNestedChild = (childList: {\n    key: string,\n    state: ChildListState,\n  }): void => {\n    this._nestedChildLists.set(childList.key, {\n      ref: null,\n      state: childList.state,\n    });\n  };\n\n  state: State;\n\n  constructor(props: Props, context: Object) {\n    super(props, context);\n    invariant(\n      !props.onScroll || !props.onScroll.__isNative,\n      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +\n        'to support native onScroll events with useNativeDriver',\n    );\n\n    invariant(\n      props.windowSize > 0,\n      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',\n    );\n\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(\n      this._updateCellsToRender,\n      this.props.updateCellsBatchingPeriod,\n    );\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else if (this.props.onViewableItemsChanged) {\n      this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(this.props.viewabilityConfig),\n        onViewableItemsChanged: this.props.onViewableItemsChanged,\n      });\n    }\n\n    let initialState = {\n      first: this.props.initialScrollIndex || 0,\n      last:\n        Math.min(\n          this.props.getItemCount(this.props.data),\n          (this.props.initialScrollIndex || 0) + this.props.initialNumToRender,\n        ) - 1,\n    };\n\n    if (this._isNestedWithSameOrientation()) {\n      const storedState = this.context.virtualizedList.getNestedChildState(\n        this.props.listKey || this._getCellKey(),\n      );\n      if (storedState) {\n        initialState = storedState;\n        this.state = storedState;\n        this._frames = storedState.frames;\n      }\n    }\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.virtualizedList.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this.props.listKey || this._getCellKey(),\n        ref: this,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.virtualizedList.unregisterAsNestedChild({\n        key: this.props.listKey || this._getCellKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames,\n        },\n      });\n    }\n    this._updateViewableItems(null);\n    this._updateCellsToRenderBatcher.dispose({abort: true});\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n  }\n\n  static getDerivedStateFromProps(newProps: Props, prevState: State) {\n    const {data, extraData, getItemCount, maxToRenderPerBatch} = newProps;\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    return {\n      first: Math.max(\n        0,\n        Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch),\n      ),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1)),\n    };\n  }\n\n  _pushCells(\n    cells: Array<Object>,\n    stickyHeaderIndices: Array<number>,\n    stickyIndicesFromProps: Set<number>,\n    first: number,\n    last: number,\n    inversionStyle: ?DangerouslyImpreciseStyleProp,\n  ) {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      data,\n      getItem,\n      getItemCount,\n      horizontal,\n      keyExtractor,\n    } = this.props;\n    const stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    const end = getItemCount(data) - 1;\n    let prevCellKey;\n    last = Math.min(end, last);\n    for (let ii = first; ii <= last; ii++) {\n      const item = getItem(data, ii);\n      const key = keyExtractor(item, ii);\n      this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n      cells.push(\n        <CellRenderer\n          CellRendererComponent={CellRendererComponent}\n          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}\n          cellKey={key}\n          fillRateHelper={this._fillRateHelper}\n          horizontal={horizontal}\n          index={ii}\n          inversionStyle={inversionStyle}\n          item={item}\n          key={key}\n          prevCellKey={prevCellKey}\n          onUpdateSeparators={this._onUpdateSeparators}\n          onLayout={e => this._onCellLayout(e, key, ii)}\n          onUnmount={this._onCellUnmount}\n          parentProps={this.props}\n          ref={ref => {\n            this._cellRefs[key] = ref;\n          }}\n        />,\n      );\n      prevCellKey = key;\n    }\n  }\n\n  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {\n    keys.forEach(key => {\n      const ref = key != null && this._cellRefs[key];\n      ref && ref.updateSeparatorProps(newProps);\n    });\n  };\n\n  _isVirtualizationDisabled(): boolean {\n    return this.props.disableVirtualization;\n  }\n\n  _isNestedWithSameOrientation(): boolean {\n    const nestedContext = this.context.virtualizedList;\n    return !!(\n      nestedContext && !!nestedContext.horizontal === !!this.props.horizontal\n    );\n  }\n\n  render() {\n    if (__DEV__) {\n      const flatStyles = flattenStyle(this.props.contentContainerStyle);\n      warning(\n        flatStyles == null || flatStyles.flexWrap !== 'wrap',\n        '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +\n          'Consider using `numColumns` with `FlatList` instead.',\n      );\n    }\n    const {\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListHeaderComponent,\n    } = this.props;\n    const {data, horizontal} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    const inversionStyle = this.props.inverted\n      ? this.props.horizontal\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : null;\n    const cells = [];\n    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    const stickyHeaderIndices = [];\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      const element = React.isValidElement(ListHeaderComponent) ? (\n        ListHeaderComponent\n      ) : (\n        // $FlowFixMe\n        <ListHeaderComponent />\n      );\n      cells.push(\n        <VirtualizedCellWrapper\n          cellKey={this._getCellKey() + '-header'}\n          key=\"$header\">\n          <View\n            onLayout={this._onLayoutHeader}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListHeaderComponentStyle,\n            )}>\n            {\n              // $FlowFixMe - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedCellWrapper>,\n      );\n    }\n    const itemCount = this.props.getItemCount(data);\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      const spacerKey = !horizontal ? 'height' : 'width';\n      const lastInitialIndex = this.props.initialScrollIndex\n        ? -1\n        : this.props.initialNumToRender - 1;\n      const {first, last} = this.state;\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        0,\n        lastInitialIndex,\n        inversionStyle,\n      );\n      const firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        let insertedStickySpacer = false;\n        if (stickyIndicesFromProps.size > 0) {\n          const stickyOffset = ListHeaderComponent ? 1 : 0;\n          // See if there are any sticky headers in the virtualized space that we need to render.\n          for (let ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n              const stickyBlock = this._getFrameMetricsApprox(ii);\n              const leadSpace = stickyBlock.offset - initBlock.offset;\n              cells.push(\n                <View key=\"$sticky_lead\" style={{[spacerKey]: leadSpace}} />,\n              );\n              this._pushCells(\n                cells,\n                stickyHeaderIndices,\n                stickyIndicesFromProps,\n                ii,\n                ii,\n                inversionStyle,\n              );\n              const trailSpace =\n                this._getFrameMetricsApprox(first).offset -\n                (stickyBlock.offset + stickyBlock.length);\n              cells.push(\n                <View key=\"$sticky_trail\" style={{[spacerKey]: trailSpace}} />,\n              );\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n        if (!insertedStickySpacer) {\n          const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n          const firstSpace =\n            this._getFrameMetricsApprox(first).offset -\n            (initBlock.offset + initBlock.length);\n          cells.push(\n            <View key=\"$lead_spacer\" style={{[spacerKey]: firstSpace}} />,\n          );\n        }\n      }\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        firstAfterInitial,\n        last,\n        inversionStyle,\n      );\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn(\n          'VirtualizedList: missing keys for items, make sure to specify a key property on each ' +\n            'item or provide a custom keyExtractor.',\n          _keylessItemComponentName,\n        );\n        this._hasWarned.keys = true;\n      }\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        const lastFrame = this._getFrameMetricsApprox(last);\n        // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n        const end = this.props.getItemLayout\n          ? itemCount - 1\n          : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n        const endFrame = this._getFrameMetricsApprox(end);\n        const tailSpacerLength =\n          endFrame.offset +\n          endFrame.length -\n          (lastFrame.offset + lastFrame.length);\n        cells.push(\n          <View key=\"$tail_spacer\" style={{[spacerKey]: tailSpacerLength}} />,\n        );\n      }\n    } else if (ListEmptyComponent) {\n      const element: React.Element<any> = ((React.isValidElement(\n        ListEmptyComponent,\n      ) ? (\n        ListEmptyComponent\n      ) : (\n        // $FlowFixMe\n        <ListEmptyComponent />\n      )): any);\n      cells.push(\n        React.cloneElement(element, {\n          key: '$empty',\n          onLayout: event => {\n            this._onLayoutEmpty(event);\n            if (element.props.onLayout) {\n              element.props.onLayout(event);\n            }\n          },\n          style: [element.props.style, inversionStyle],\n        }),\n      );\n    }\n    if (ListFooterComponent) {\n      const element = React.isValidElement(ListFooterComponent) ? (\n        ListFooterComponent\n      ) : (\n        // $FlowFixMe\n        <ListFooterComponent />\n      );\n      cells.push(\n        <VirtualizedCellWrapper\n          cellKey={this._getCellKey() + '-footer'}\n          key=\"$footer\">\n          <View\n            onLayout={this._onLayoutFooter}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListFooterComponentStyle,\n            )}>\n            {\n              // $FlowFixMe - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedCellWrapper>,\n      );\n    }\n    const scrollProps = {\n      ...this.props,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: this.props.scrollEventThrottle, // TODO: Android support\n      invertStickyHeaders:\n        this.props.invertStickyHeaders !== undefined\n          ? this.props.invertStickyHeaders\n          : this.props.inverted,\n      stickyHeaderIndices,\n    };\n    if (inversionStyle) {\n      /* $FlowFixMe(>=0.70.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.70 was deployed. To see the error delete\n       * this comment and run Flow. */\n      scrollProps.style = [inversionStyle, this.props.style];\n    }\n\n    this._hasMore =\n      this.state.last < this.props.getItemCount(this.props.data) - 1;\n\n    const ret = React.cloneElement(\n      (this.props.renderScrollComponent || this._defaultRenderScrollComponent)(\n        scrollProps,\n      ),\n      // $FlowFixMe Invalid prop usage\n      {\n        ref: this._captureScrollRef,\n      },\n      cells,\n    );\n    if (this.props.debug) {\n      return (\n        <View style={{flex: 1}}>\n          {ret}\n          {this._renderDebugOverlay()}\n        </View>\n      );\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {data, extraData} = this.props;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      this._hasDataChangedSinceEndReached = true;\n\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    this._scheduleCellsToRenderUpdate();\n  }\n\n  _averageCellLength = 0;\n  // Maps a cell key to the set of keys for all outermost child lists within that cell\n  _cellKeysToChildListKeys: Map<string, Set<string>> = new Map();\n  _cellRefs = {};\n  _fillRateHelper: FillRateHelper;\n  _frames = {};\n  _footerLength = 0;\n  _hasDataChangedSinceEndReached = true;\n  _hasInteracted = false;\n  _hasMore = false;\n  _hasWarned = {};\n  _highestMeasuredFrameIndex = 0;\n  _headerLength = 0;\n  _indicesToKeys: Map<number, string> = new Map();\n  _hasDoneInitialScroll = false;\n  _nestedChildLists: Map<\n    string,\n    {ref: ?VirtualizedList, state: ?ChildListState},\n  > = new Map();\n  _offsetFromParentVirtualizedList: number = 0;\n  _prevParentOffset: number = 0;\n  _scrollMetrics = {\n    contentLength: 0,\n    dOffset: 0,\n    dt: 10,\n    offset: 0,\n    timestamp: 0,\n    velocity: 0,\n    visibleLength: 0,\n  };\n  _scrollRef: ?React.ElementRef<any> = null;\n  _sentEndForContentLength = 0;\n  _totalCellLength = 0;\n  _totalCellsMeasured = 0;\n  _updateCellsToRenderBatcher: Batchinator;\n  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n\n  _captureScrollRef = ref => {\n    this._scrollRef = ref;\n  };\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(\n      this.props,\n      this.state,\n      this._scrollMetrics,\n    );\n  }\n\n  _defaultRenderScrollComponent = props => {\n    const onRefresh = props.onRefresh;\n    if (this._isNestedWithSameOrientation()) {\n      // $FlowFixMe - Typing ReactNativeComponent revealed errors\n      return <View {...props} />;\n    } else if (onRefresh) {\n      invariant(\n        typeof props.refreshing === 'boolean',\n        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n          JSON.stringify(props.refreshing) +\n          '`',\n      );\n      return (\n        // $FlowFixMe Invalid prop usage\n        <ScrollView\n          {...props}\n          refreshControl={\n            props.refreshControl == null ? (\n              <RefreshControl\n                refreshing={props.refreshing}\n                onRefresh={onRefresh}\n                progressViewOffset={props.progressViewOffset}\n              />\n            ) : (\n              props.refreshControl\n            )\n          }\n        />\n      );\n    } else {\n      // $FlowFixMe Invalid prop usage\n      return <ScrollView {...props} />;\n    }\n  };\n\n  _onCellLayout(e, cellKey, index) {\n    const layout = e.nativeEvent.layout;\n    const next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true,\n    };\n    const curr = this._frames[cellKey];\n    if (\n      !curr ||\n      next.offset !== curr.offset ||\n      next.length !== curr.length ||\n      index !== curr.index\n    ) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength =\n        this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(\n        this._highestMeasuredFrameIndex,\n        index,\n      );\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    const childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n    if (childListKeys) {\n      for (let childKey of childListKeys) {\n        const childList = this._nestedChildLists.get(childKey);\n        childList &&\n          childList.ref &&\n          childList.ref.measureLayoutRelativeToContainingList();\n      }\n    }\n\n    this._computeBlankness();\n  }\n\n  _onCellUnmount = (cellKey: string) => {\n    const curr = this._frames[cellKey];\n    if (curr) {\n      this._frames[cellKey] = {...curr, inLayout: false};\n    }\n  };\n\n  measureLayoutRelativeToContainingList(): void {\n    UIManager.measureLayout(\n      ReactNative.findNodeHandle(this),\n      ReactNative.findNodeHandle(\n        this.context.virtualizedList.getOutermostParentListRef(),\n      ),\n      error => {\n        console.warn(\n          \"VirtualizedList: Encountered an error while measuring a list's\" +\n            ' offset from its containing VirtualizedList.',\n        );\n      },\n      (x, y, width, height) => {\n        this._offsetFromParentVirtualizedList = this._selectOffset({x, y});\n        this._scrollMetrics.contentLength = this._selectLength({width, height});\n\n        const scrollMetrics = this._convertParentScrollMetrics(\n          this.context.virtualizedList.getScrollMetrics(),\n        );\n        this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n        this._scrollMetrics.offset = scrollMetrics.offset;\n      },\n    );\n  }\n\n  _onLayout = (e: Object) => {\n    if (this._isNestedWithSameOrientation()) {\n      // Need to adjust our scroll metrics to be relative to our containing\n      // VirtualizedList before we can make claims about list item viewability\n      this.measureLayoutRelativeToContainingList();\n    } else {\n      this._scrollMetrics.visibleLength = this._selectLength(\n        e.nativeEvent.layout,\n      );\n    }\n    this.props.onLayout && this.props.onLayout(e);\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  _onLayoutEmpty = e => {\n    this.props.onLayout && this.props.onLayout(e);\n  };\n\n  _onLayoutFooter = e => {\n    this._footerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _onLayoutHeader = e => {\n    this._headerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _renderDebugOverlay() {\n    const normalize =\n      this._scrollMetrics.visibleLength / this._scrollMetrics.contentLength;\n    const framesInLayout = [];\n    const itemCount = this.props.getItemCount(this.props.data);\n    for (let ii = 0; ii < itemCount; ii++) {\n      const frame = this._getFrameMetricsApprox(ii);\n      /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.68 was deployed. To see the error delete this\n       * comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    const windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n    const frameLast = this._getFrameMetricsApprox(this.state.last);\n    const windowLen = frameLast.offset + frameLast.length - windowTop;\n    const visTop = this._scrollMetrics.offset;\n    const visLen = this._scrollMetrics.visibleLength;\n    const baseStyle = {position: 'absolute', top: 0, right: 0};\n    return (\n      <View\n        style={{\n          ...baseStyle,\n          bottom: 0,\n          width: 20,\n          borderColor: 'blue',\n          borderWidth: 1,\n        }}>\n        {framesInLayout.map((f, ii) => (\n          <View\n            key={'f' + ii}\n            style={{\n              ...baseStyle,\n              left: 0,\n              top: f.offset * normalize,\n              height: f.length * normalize,\n              backgroundColor: 'orange',\n            }}\n          />\n        ))}\n        <View\n          style={{\n            ...baseStyle,\n            left: 0,\n            top: windowTop * normalize,\n            height: windowLen * normalize,\n            borderColor: 'green',\n            borderWidth: 2,\n          }}\n        />\n        <View\n          style={{\n            ...baseStyle,\n            left: 0,\n            top: visTop * normalize,\n            height: visLen * normalize,\n            borderColor: 'red',\n            borderWidth: 2,\n          }}\n        />\n      </View>\n    );\n  }\n\n  _selectLength(metrics: $ReadOnly<{height: number, width: number}>): number {\n    return !this.props.horizontal ? metrics.height : metrics.width;\n  }\n\n  _selectOffset(metrics: $ReadOnly<{x: number, y: number}>): number {\n    return !this.props.horizontal ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEndReached() {\n    const {\n      data,\n      getItemCount,\n      onEndReached,\n      onEndReachedThreshold,\n    } = this.props;\n    const {contentLength, visibleLength, offset} = this._scrollMetrics;\n    const distanceFromEnd = contentLength - visibleLength - offset;\n    if (\n      onEndReached &&\n      this.state.last === getItemCount(data) - 1 &&\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete this\n       * comment and run Flow. */\n      distanceFromEnd < onEndReachedThreshold * visibleLength &&\n      (this._hasDataChangedSinceEndReached ||\n        this._scrollMetrics.contentLength !== this._sentEndForContentLength)\n    ) {\n      // Only call onEndReached once for a given dataset + content length.\n      this._hasDataChangedSinceEndReached = false;\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({distanceFromEnd});\n    }\n  }\n\n  _onContentSizeChange = (width: number, height: number) => {\n    if (\n      width > 0 &&\n      height > 0 &&\n      this.props.initialScrollIndex != null &&\n      this.props.initialScrollIndex > 0 &&\n      !this._hasDoneInitialScroll\n    ) {\n      this.scrollToIndex({\n        animated: false,\n        index: this.props.initialScrollIndex,\n      });\n      this._hasDoneInitialScroll = true;\n    }\n    if (this.props.onContentSizeChange) {\n      this.props.onContentSizeChange(width, height);\n    }\n    this._scrollMetrics.contentLength = this._selectLength({height, width});\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n  _convertParentScrollMetrics = (metrics: {\n    visibleLength: number,\n    offset: number,\n  }) => {\n    // Offset of the top of the nested list relative to the top of its parent's viewport\n    const offset = metrics.offset - this._offsetFromParentVirtualizedList;\n    // Child's visible length is the same as its parent's\n    const visibleLength = metrics.visibleLength;\n    const dOffset = offset - this._scrollMetrics.offset;\n    const contentLength = this._scrollMetrics.contentLength;\n\n    return {\n      visibleLength,\n      contentLength,\n      offset,\n      dOffset,\n    };\n  };\n\n  _onScroll = (e: Object) => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScroll(e);\n    });\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const timestamp = e.timeStamp;\n    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n    let contentLength = this._selectLength(e.nativeEvent.contentSize);\n    let offset = this._selectOffset(e.nativeEvent.contentOffset);\n    let dOffset = offset - this._scrollMetrics.offset;\n\n    if (this._isNestedWithSameOrientation()) {\n      if (this._scrollMetrics.contentLength === 0) {\n        // Ignore scroll events until onLayout has been called and we\n        // know our offset from our offset from our parent\n        return;\n      }\n      ({\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset,\n      } = this._convertParentScrollMetrics({\n        visibleLength,\n        offset,\n      }));\n    }\n\n    const dt = this._scrollMetrics.timestamp\n      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)\n      : 1;\n    const velocity = dOffset / dt;\n\n    if (\n      dt > 500 &&\n      this._scrollMetrics.dt > 500 &&\n      contentLength > 5 * visibleLength &&\n      !this._hasWarned.perf\n    ) {\n      infoLog(\n        'VirtualizedList: You have a large list that is slow to update - make sure your ' +\n          'renderItem function renders components that follow React performance best practices ' +\n          'like PureComponent, shouldComponentUpdate, etc.',\n        {dt, prevDt: this._scrollMetrics.dt, contentLength},\n      );\n      this._hasWarned.perf = true;\n    }\n    this._scrollMetrics = {\n      contentLength,\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n    };\n    this._updateViewableItems(this.props.data);\n    if (!this.props) {\n      return;\n    }\n    this._maybeCallOnEndReached();\n    if (velocity !== 0) {\n      this._fillRateHelper.activate();\n    }\n    this._computeBlankness();\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _scheduleCellsToRenderUpdate() {\n    const {first, last} = this.state;\n    const {offset, visibleLength, velocity} = this._scrollMetrics;\n    const itemCount = this.props.getItemCount(this.props.data);\n    let hiPri = false;\n    const scrollingThreshold =\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete\n       * this comment and run Flow. */\n      (this.props.onEndReachedThreshold * visibleLength) / 2;\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      const distTop = offset - this._getFrameMetricsApprox(first).offset;\n      hiPri =\n        hiPri || distTop < 0 || (velocity < -2 && distTop < scrollingThreshold);\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (last < itemCount - 1) {\n      const distBottom =\n        this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      hiPri =\n        hiPri ||\n        distBottom < 0 ||\n        (velocity > 2 && distBottom < scrollingThreshold);\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    if (hiPri && this._averageCellLength) {\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({abort: true});\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _onScrollBeginDrag = (e): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScrollBeginDrag(e);\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.recordInteraction();\n    });\n    this._hasInteracted = true;\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  _onScrollEndDrag = (e): void => {\n    const {velocity} = e.nativeEvent;\n    if (velocity) {\n      this._scrollMetrics.velocity = this._selectOffset(velocity);\n    }\n    this._computeBlankness();\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  _onMomentumScrollEnd = (e): void => {\n    this._scrollMetrics.velocity = 0;\n    this._computeBlankness();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  _updateCellsToRender = () => {\n    const {data, getItemCount, onEndReachedThreshold} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    this._updateViewableItems(data);\n    if (!data) {\n      return;\n    }\n    this.setState(state => {\n      let newState;\n      if (!isVirtualizationDisabled) {\n        // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n        // and wipe out the initialNumToRender rendered elements.\n        // So let's wait until the scroll view metrics have been set up. And until then,\n        // we will trust the initialNumToRender suggestion\n        if (this._scrollMetrics.visibleLength) {\n          // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n          // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n          // So let's wait until we've scrolled the view to the right place. And until then,\n          // we will trust the initialScrollIndex suggestion.\n          if (!this.props.initialScrollIndex || this._scrollMetrics.offset) {\n            newState = computeWindowedRenderLimits(\n              this.props,\n              state,\n              this._getFrameMetricsApprox,\n              this._scrollMetrics,\n            );\n          }\n        }\n      } else {\n        const {contentLength, offset, visibleLength} = this._scrollMetrics;\n        const distanceFromEnd = contentLength - visibleLength - offset;\n        const renderAhead =\n          /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses\n           * an error found when Flow v0.63 was deployed. To see the error\n           * delete this comment and run Flow. */\n          distanceFromEnd < onEndReachedThreshold * visibleLength\n            ? this.props.maxToRenderPerBatch\n            : 0;\n        newState = {\n          first: 0,\n          last: Math.min(state.last + renderAhead, getItemCount(data) - 1),\n        };\n      }\n      if (newState && this._nestedChildLists.size > 0) {\n        const newFirst = newState.first;\n        const newLast = newState.last;\n        // If some cell in the new state has a child list in it, we should only render\n        // up through that item, so that we give that list a chance to render.\n        // Otherwise there's churn from multiple child lists mounting and un-mounting\n        // their items.\n        for (let ii = newFirst; ii <= newLast; ii++) {\n          const cellKeyForIndex = this._indicesToKeys.get(ii);\n          const childListKeys =\n            cellKeyForIndex &&\n            this._cellKeysToChildListKeys.get(cellKeyForIndex);\n          if (!childListKeys) {\n            continue;\n          }\n          let someChildHasMore = false;\n          // For each cell, need to check whether any child list in it has more elements to render\n          for (let childKey of childListKeys) {\n            const childList = this._nestedChildLists.get(childKey);\n            if (childList && childList.ref && childList.ref.hasMore()) {\n              someChildHasMore = true;\n              break;\n            }\n          }\n          if (someChildHasMore) {\n            newState.last = ii;\n            break;\n          }\n        }\n      }\n      return newState;\n    });\n  };\n\n  _createViewToken = (index: number, isViewable: boolean) => {\n    const {data, getItem, keyExtractor} = this.props;\n    const item = getItem(data, index);\n    return {index, item, key: keyExtractor(item, index), isViewable};\n  };\n\n  _getFrameMetricsApprox = (\n    index: number,\n  ): {length: number, offset: number} => {\n    const frame = this._getFrameMetrics(index);\n    if (frame && frame.index === index) {\n      // check for invalid frames due to row re-ordering\n      return frame;\n    } else {\n      const {getItemLayout} = this.props;\n      invariant(\n        !getItemLayout,\n        'Should not have to estimate frames when a measurement metrics function is provided',\n      );\n      return {\n        length: this._averageCellLength,\n        offset: this._averageCellLength * index,\n      };\n    }\n  };\n\n  _getFrameMetrics = (\n    index: number,\n  ): ?{\n    length: number,\n    offset: number,\n    index: number,\n    inLayout?: boolean,\n  } => {\n    const {\n      data,\n      getItem,\n      getItemCount,\n      getItemLayout,\n      keyExtractor,\n    } = this.props;\n    invariant(\n      getItemCount(data) > index,\n      'Tried to get frame for out of range index ' + index,\n    );\n    const item = getItem(data, index);\n    let frame = item && this._frames[keyExtractor(item, index)];\n    if (!frame || frame.index !== index) {\n      if (getItemLayout) {\n        frame = getItemLayout(data, index);\n        if (__DEV__) {\n          const frameType = PropTypes.shape({\n            length: PropTypes.number.isRequired,\n            offset: PropTypes.number.isRequired,\n            index: PropTypes.number.isRequired,\n          }).isRequired;\n          PropTypes.checkPropTypes(\n            {frame: frameType},\n            {frame},\n            'frame',\n            'VirtualizedList.getItemLayout',\n          );\n        }\n      }\n    }\n    /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.63 was deployed. To see the error delete this\n     * comment and run Flow. */\n    return frame;\n  };\n\n  _updateViewableItems(data: any) {\n    const {getItemCount} = this.props;\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        getItemCount(data),\n        this._scrollMetrics.offset,\n        this._scrollMetrics.visibleLength,\n        this._getFrameMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        this.state,\n      );\n    });\n  }\n}\n\nclass CellRenderer extends React.Component<\n  {\n    CellRendererComponent?: ?React.ComponentType<any>,\n    ItemSeparatorComponent: ?React.ComponentType<*>,\n    cellKey: string,\n    fillRateHelper: FillRateHelper,\n    horizontal: ?boolean,\n    index: number,\n    inversionStyle: ?DangerouslyImpreciseStyleProp,\n    item: Item,\n    onLayout: (event: Object) => void, // This is extracted by ScrollViewStickyHeader\n    onUnmount: (cellKey: string) => void,\n    onUpdateSeparators: (cellKeys: Array<?string>, props: Object) => void,\n    parentProps: {\n      getItemLayout?: ?Function,\n      renderItem: renderItemType,\n    },\n    prevCellKey: ?string,\n  },\n  $FlowFixMeState,\n> {\n  state = {\n    separatorProps: {\n      highlighted: false,\n      leadingItem: this.props.item,\n    },\n  };\n\n  static childContextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n  };\n\n  getChildContext() {\n    return {\n      virtualizedCell: {\n        cellKey: this.props.cellKey,\n      },\n    };\n  }\n\n  // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n  _separators = {\n    highlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: true,\n      });\n    },\n    unhighlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: false,\n      });\n    },\n    updateProps: (select: 'leading' | 'trailing', newProps: Object) => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators(\n        [select === 'leading' ? prevCellKey : cellKey],\n        newProps,\n      );\n    },\n  };\n\n  updateSeparatorProps(newProps: Object) {\n    this.setState(state => ({\n      separatorProps: {...state.separatorProps, ...newProps},\n    }));\n  }\n\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n\n  render() {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      fillRateHelper,\n      horizontal,\n      item,\n      index,\n      inversionStyle,\n      parentProps,\n    } = this.props;\n    const {renderItem, getItemLayout} = parentProps;\n    invariant(renderItem, 'no renderItem!');\n    const element = renderItem({\n      item,\n      index,\n      separators: this._separators,\n    });\n    const onLayout =\n      /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.68 was deployed. To see the error delete this\n       * comment and run Flow. */\n      getItemLayout && !parentProps.debug && !fillRateHelper.enabled()\n        ? undefined\n        : this.props.onLayout;\n    // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n    const itemSeparator = ItemSeparatorComponent && (\n      <ItemSeparatorComponent {...this.state.separatorProps} />\n    );\n    const cellStyle = inversionStyle\n      ? horizontal\n        ? [{flexDirection: 'row-reverse'}, inversionStyle]\n        : [{flexDirection: 'column-reverse'}, inversionStyle]\n      : horizontal\n        ? [{flexDirection: 'row'}, inversionStyle]\n        : inversionStyle;\n    if (!CellRendererComponent) {\n      return (\n        <View style={cellStyle} onLayout={onLayout}>\n          {element}\n          {itemSeparator}\n        </View>\n      );\n    }\n    return (\n      <CellRendererComponent\n        {...this.props}\n        style={cellStyle}\n        onLayout={onLayout}>\n        {element}\n        {itemSeparator}\n      </CellRendererComponent>\n    );\n  }\n}\n\nclass VirtualizedCellWrapper extends React.Component<{\n  cellKey: string,\n  children: React.Node,\n}> {\n  static childContextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n  };\n\n  getChildContext() {\n    return {\n      virtualizedCell: {\n        cellKey: this.props.cellKey,\n      },\n    };\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nconst styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{scaleY: -1}],\n  },\n  horizontallyInverted: {\n    transform: [{scaleX: -1}],\n  },\n});\n\nmodule.exports = VirtualizedList;\n"]}