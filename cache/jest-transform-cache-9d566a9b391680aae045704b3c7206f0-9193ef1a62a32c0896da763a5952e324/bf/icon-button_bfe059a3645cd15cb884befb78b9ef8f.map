{"version":3,"sources":["icon-button.js"],"names":["createIconButtonComponent","styles","StyleSheet","create","container","flexDirection","justifyContent","alignItems","padding","touchable","overflow","icon","marginRight","text","fontWeight","backgroundColor","IOS7_BLUE","Icon","props","style","iconStyle","children","restProps","iconProps","Object","keys","Text","propTypes","touchableProps","TouchableHighlight","colorStyle","blockStyle","PureComponent","PropTypes","oneOfType","string","number","borderRadius","color","size","any","node","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BwBA,yB,CA5BxB,2C,mDACA,mC,2CACA,mC,2CACA,8B,6CACA,uC,qDACA,6C,ypCAEA,IAAMC,SAASC,wBAAWC,MAAX,CAAkB,EAC/BC,WAAW,EACTC,eAAe,KADN,EAETC,gBAAgB,YAFP,EAGTC,YAAY,QAHH,EAITC,SAAS,CAJA,EADoB,EAO/BC,WAAW,EACTC,UAAU,QADD,EAPoB,EAU/BC,MAAM,EACJC,aAAa,EADT,EAVyB,EAa/BC,MAAM,EACJC,YAAY,KADR,EAEJC,iBAAiB,aAFb,EAbyB,EAAlB,CAAf,CAmBA,IAAMC,YAAY,SAAlB,CAEe,SAAShB,yBAAT,CAAmCiB,IAAnC,EAAyC;AACtD;;;;;;;;;;;;;;;;;;;;;AAqBW;AAC8C,aAAKC,KADnD,CACCC,KADD,UACCA,KADD,CACQC,SADR,UACQA,SADR,CACmBC,QADnB,UACmBA,QADnB,CACgCC,SADhC;;AAGP,YAAMC,YAAY;AAChBD,iBADgB;AAEhBE,eAAOC,IAAP,CAAYC,kBAAKC,SAAjB,CAFgB;AAGhB,eAHgB;AAIhB,cAJgB;AAKhB,cALgB;AAMhB,eANgB,CAAlB;;AAQA,YAAMC,iBAAiB;AACrBN,iBADqB;AAErBE,eAAOC,IAAP,CAAYI,gCAAmBF,SAA/B,CAFqB,CAAvB;;AAIA,YAAMT,QAAQ;AACZI,iBADY;AAEZE,eAAOC,IAAP,CAAYF,SAAZ,CAFY;AAGZC,eAAOC,IAAP,CAAYG,cAAZ,CAHY;AAIZ,mBAJY;AAKZ,sBALY;AAMZ,yBANY,CAAd;;AAQAL,kBAAUJ,KAAV,GAAkBC,YAAY,CAACnB,OAAOU,IAAR,EAAcS,SAAd,CAAZ,GAAuCnB,OAAOU,IAAhE;;AAEA,YAAMmB,aAAa,oBAAK,KAAKZ,KAAV,EAAiB,OAAjB,CAAnB;AACA,YAAMa,aAAa,oBAAK,KAAKb,KAAV,EAAiB,iBAAjB,EAAoC,cAApC,CAAnB;;AAEA;AACE,wCAAC,+BAAD;AACE,qBAAO,CAACjB,OAAOQ,SAAR,EAAmBsB,UAAnB,CADT;AAEMH,0BAFN;;AAIE,0CAAC,iBAAD,aAAM,OAAO,CAAC3B,OAAOG,SAAR,EAAmB2B,UAAnB,EAA+BZ,KAA/B,CAAb,IAAwDD,KAAxD;AACE,4CAAC,IAAD,EAAUK,SAAV,CADF;AAEG,sCAASF,QAAT;AACC,4CAAC,iBAAD,IAAM,OAAO,CAACpB,OAAOY,IAAR,EAAciB,UAAd,CAAb,IAAyCT,QAAzC,CADD;;AAGCA,sBALJ,CAJF,CADF;;;;;AAeD,OAhEH,yBAAgCW,oBAAhC,UACSL,SADT,GACqB,EACjBZ,iBAAiBkB,oBAAUC,SAAV,CAAoB,CACnCD,oBAAUE,MADyB,EAEnCF,oBAAUG,MAFyB,CAApB,CADA,EAKjBC,cAAcJ,oBAAUG,MALP,EAMjBE,OAAOL,oBAAUC,SAAV,CAAoB,CAACD,oBAAUE,MAAX,EAAmBF,oBAAUG,MAA7B,CAApB,CANU,EAOjBG,MAAMN,oBAAUG,MAPC,EAQjBhB,WAAWa,oBAAUO,GARJ,EASjBrB,OAAOc,oBAAUO,GATA,EAUjBnB,UAAUY,oBAAUQ,IAVH,EADrB,SAcSC,YAdT,GAcwB,EACpB3B,iBAAiBC,SADG,EAEpBqB,cAAc,CAFM,EAGpBC,OAAO,OAHa,EAIpBC,MAAM,EAJc,EAdxB;;AAkED","file":"icon-button.js","sourcesContent":["import isString from 'lodash/isString';\nimport omit from 'lodash/omit';\nimport pick from 'lodash/pick';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, TouchableHighlight, View } from './react-native';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 8,\n  },\n  touchable: {\n    overflow: 'hidden',\n  },\n  icon: {\n    marginRight: 10,\n  },\n  text: {\n    fontWeight: '600',\n    backgroundColor: 'transparent',\n  },\n});\n\nconst IOS7_BLUE = '#007AFF';\n\nexport default function createIconButtonComponent(Icon) {\n  return class IconButton extends PureComponent {\n    static propTypes = {\n      backgroundColor: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]),\n      borderRadius: PropTypes.number,\n      color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      size: PropTypes.number,\n      iconStyle: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      style: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      children: PropTypes.node,\n    };\n\n    static defaultProps = {\n      backgroundColor: IOS7_BLUE,\n      borderRadius: 5,\n      color: 'white',\n      size: 20,\n    };\n\n    render() {\n      const { style, iconStyle, children, ...restProps } = this.props;\n\n      const iconProps = pick(\n        restProps,\n        Object.keys(Text.propTypes),\n        'style',\n        'name',\n        'size',\n        'color'\n      );\n      const touchableProps = pick(\n        restProps,\n        Object.keys(TouchableHighlight.propTypes)\n      );\n      const props = omit(\n        restProps,\n        Object.keys(iconProps),\n        Object.keys(touchableProps),\n        'iconStyle',\n        'borderRadius',\n        'backgroundColor'\n      );\n      iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;\n\n      const colorStyle = pick(this.props, 'color');\n      const blockStyle = pick(this.props, 'backgroundColor', 'borderRadius');\n\n      return (\n        <TouchableHighlight\n          style={[styles.touchable, blockStyle]}\n          {...touchableProps}\n        >\n          <View style={[styles.container, blockStyle, style]} {...props}>\n            <Icon {...iconProps} />\n            {isString(children) ? (\n              <Text style={[styles.text, colorStyle]}>{children}</Text>\n            ) : (\n              children\n            )}\n          </View>\n        </TouchableHighlight>\n      );\n    }\n  };\n}\n"]}