{"version":3,"sources":["addons.js"],"names":["createVariations","createSharedStyle","capitalizeFirstLetter","value","charAt","toUpperCase","slice","baseName","nameSuffixes","key","_","reduce","result","variant","variantName","keyName","componentNames","sharedStyle","customStyles","componentName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCgBA,gB,GAAAA,gB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CAC,iB,GAAAA,iB,CAlFhB,gC,sVAEA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC,CACpC,OAAOA,MAAMC,MAAN,CAAa,CAAb,EAAgBC,WAAhB,KAAgCF,MAAMG,KAAN,CAAY,CAAZ,CAAvC,CACD,CAiCM,SAASN,gBAAT,CAA0BO,QAA1B,EAAoCC,YAApC,EAAkDC,GAAlD,EAAuDN,KAAvD,EAA8D,CACnE,OAAOO,iBAAEC,MAAF,CAASH,YAAT,EAAuB,UAACI,MAAD,EAASC,OAAT,EAAqB,CACjD,IAAMC,cAAcD,UAAaN,QAAb,SAAyBM,OAAzB,GAAqCN,QAAzD,CACA,IAAMQ,UAAUF,eAAaJ,GAAb,GAAmBP,sBAAsBW,OAAtB,CAAnB,GAAsDJ,GAAtE,CAGAG,OAAOE,WAAP,wBACGC,OADH,EACaZ,KADb,EAIA,OAAOS,MAAP,CACD,CAVM,EAUJ,EAVI,CAAP,CAWD,CAiCM,SAASX,iBAAT,CAA2Be,cAA3B,EAAgF,KAArCC,WAAqC,uEAAvB,EAAuB,KAAnBC,YAAmB,uEAAJ,EAAI;AACrF,SAAOR,iBAAEC,MAAF,CAASK,cAAT,EAAyB,UAACJ,MAAD,EAASO,aAAT,EAA2B;;AAEzDP,WAAOO,aAAP;AACKF,eADL;AAEKC,iBAAaC,aAAb,CAFL;;;AAKA,WAAOP,MAAP;AACD,GARM,EAQJ,EARI,CAAP;AASD","file":"addons.js","sourcesContent":["import _ from 'lodash';\n\nfunction capitalizeFirstLetter(value) {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n}\n\n/**\n * Creates a set of style variations with the provided name\n * suffixes. This function is useful when creating style variations\n * for styles with shorthands, e.g., margin, padding, etc. This function\n * will return an object with the keys that represent the style variations,\n * and each key will have an object with the provided key and value. Both\n * style variation, and value object keys will get the provided suffixes. The\n * style variation key names are expected to be in snake-case, and value keys\n * are expected to be in camelCase.\n *\n * Example:\n * createVariations('large-margin', ['', 'left', 'right'], 'margin', 30)\n * will return:\n * {\n *   'large-margin': {\n *     margin: 30\n *   },\n *   'large-margin-left': {\n *     marginLeft: 30,\n *   },\n *   'large-margin-right': {\n *     marginRight: 30,\n *   }\n * }\n *\n * @param baseName Base name for style variation Â§names.\n * @param nameSuffixes Suffixes that will be concatenated to baseName.\n * @param key The value key name to use.\n * @param value The value that will be assigned to the key property.\n * @returns {object} An object with the generated style variants.\n */\nexport function createVariations(baseName, nameSuffixes, key, value) {\n  return _.reduce(nameSuffixes, (result, variant) => {\n    const variantName = variant ? `${baseName}-${variant}` : baseName;\n    const keyName = variant ? `${key}${capitalizeFirstLetter(variant)}` : key;\n\n    // eslint-disable-next-line no-param-reassign\n    result[variantName] = {\n      [keyName]: value,\n    };\n\n    return result;\n  }, {});\n}\n\n/**\n * Creates a set of style rules for the provided components. This function\n * is useful when a set of components needs to have the same style. The\n * shared style will be applied to each component. It is also possible to\n * provide custom style for each component that will be applied on top of\n * the shared style.\n *\n * Example:\n * createSharedStyle(['shoutem.ui.Text', 'shoutem.ui.Title'], {\n *   color: 'white'\n * }, {\n *   'shoutem.ui.Title: {\n *     marginBottom: 15\n *   }\n * );\n * will return:\n * {\n *   'shoutem.ui.Text': {\n *     color: 'white'\n *   },\n *   'shoutem.ui.Title': {\n *     color: 'white',\n *     marginBottom: 15\n *   }\n * }\n *\n * @param componentNames The names of the components to generate styles for.\n * @param sharedStyle The style to apply to each component.\n * @param customStyles Style overrides by component names.\n * @returns {object} An object with the generated styles.\n */\nexport function createSharedStyle(componentNames, sharedStyle = {}, customStyles = {}) {\n  return _.reduce(componentNames, (result, componentName) => {\n    // eslint-disable-next-line no-param-reassign\n    result[componentName] = {\n      ...sharedStyle,\n      ...customStyles[componentName],\n    };\n\n    return result;\n  }, {});\n}\n"]}