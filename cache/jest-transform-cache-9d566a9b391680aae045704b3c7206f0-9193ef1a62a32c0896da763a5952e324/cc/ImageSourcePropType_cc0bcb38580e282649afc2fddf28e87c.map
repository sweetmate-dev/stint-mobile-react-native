{"version":3,"sources":["ImageSourcePropType.js"],"names":["PropTypes","require","ImageURISourcePropType","shape","uri","string","bundle","method","headers","objectOf","body","cache","oneOf","width","number","height","scale","ImageSourcePropType","oneOfType","arrayOf","module","exports"],"mappings":";;;;;;;;;AASA;;AAEA,IAAMA,YAAYC,QAAQ,YAAR,CAAlB;;AAEA,IAAMC,yBAAyBF,UAAUG,KAAV,CAAgB;;;;;;;AAO7CC,OAAKJ,UAAUK,MAP8B;;;;;;AAa7CC,UAAQN,UAAUK,MAb2B;;;;AAiB7CE,UAAQP,UAAUK,MAjB2B;;;;;AAsB7CG,WAASR,UAAUS,QAAV,CAAmBT,UAAUK,MAA7B,CAtBoC;;;;;;AA4B7CK,QAAMV,UAAUK,MA5B6B;;;;;;;;;;;;;;;;;;;;;AAiD7CM,SAAOX,UAAUY,KAAV,CAAgB;AACrB,WADqB;AAErB,UAFqB;AAGrB,eAHqB;AAIrB,kBAJqB,CAAhB,CAjDsC;;;;;;AA2D7CC,SAAOb,UAAUc,MA3D4B;AA4D7CC,UAAQf,UAAUc,MA5D2B;;;;;AAiE7CE,SAAOhB,UAAUc,MAjE4B,EAAhB,CAA/B;;;AAoEA,IAAMG,sBAAsBjB,UAAUkB,SAAV,CAAoB;AAC9ChB,sBAD8C;;AAG9CF,UAAUc,MAHoC;;AAK9Cd,UAAUmB,OAAV,CAAkBjB,sBAAlB,CAL8C,CAApB,CAA5B;;;AAQAkB,OAAOC,OAAP,GAAiBJ,mBAAjB","file":"ImageSourcePropType.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @no-flow\n * @format\n */\n'use strict';\n\nconst PropTypes = require('prop-types');\n\nconst ImageURISourcePropType = PropTypes.shape({\n  /**\n   * `uri` is a string representing the resource identifier for the image, which\n   * could be an http address, a local file path, or the name of a static image\n   * resource (which should be wrapped in the `require('./path/to/image.png')`\n   * function).\n   */\n  uri: PropTypes.string,\n  /**\n   * `bundle` is the iOS asset bundle which the image is included in. This\n   * will default to [NSBundle mainBundle] if not set.\n   * @platform ios\n   */\n  bundle: PropTypes.string,\n  /**\n   * `method` is the HTTP Method to use. Defaults to GET if not specified.\n   */\n  method: PropTypes.string,\n  /**\n   * `headers` is an object representing the HTTP headers to send along with the\n   * request for a remote image.\n   */\n  headers: PropTypes.objectOf(PropTypes.string),\n  /**\n   * `body` is the HTTP body to send with the request. This must be a valid\n   * UTF-8 string, and will be sent exactly as specified, with no\n   * additional encoding (e.g. URL-escaping or base64) applied.\n   */\n  body: PropTypes.string,\n  /**\n   * `cache` determines how the requests handles potentially cached\n   * responses.\n   *\n   * - `default`: Use the native platforms default strategy. `useProtocolCachePolicy` on iOS.\n   *\n   * - `reload`: The data for the URL will be loaded from the originating source.\n   * No existing cache data should be used to satisfy a URL load request.\n   *\n   * - `force-cache`: The existing cached data will be used to satisfy the request,\n   * regardless of its age or expiration date. If there is no existing data in the cache\n   * corresponding the request, the data is loaded from the originating source.\n   *\n   * - `only-if-cached`: The existing cache data will be used to satisfy a request, regardless of\n   * its age or expiration date. If there is no existing data in the cache corresponding\n   * to a URL load request, no attempt is made to load the data from the originating source,\n   * and the load is considered to have failed.\n   *\n   * @platform ios\n   */\n  cache: PropTypes.oneOf([\n    'default',\n    'reload',\n    'force-cache',\n    'only-if-cached',\n  ]),\n  /**\n   * `width` and `height` can be specified if known at build time, in which case\n   * these will be used to set the default `<Image/>` component dimensions.\n   */\n  width: PropTypes.number,\n  height: PropTypes.number,\n  /**\n   * `scale` is used to indicate the scale factor of the image. Defaults to 1.0 if\n   * unspecified, meaning that one image pixel equates to one display point / DIP.\n   */\n  scale: PropTypes.number,\n});\n\nconst ImageSourcePropType = PropTypes.oneOfType([\n  ImageURISourcePropType,\n  // Opaque type returned by require('./image.jpg')\n  PropTypes.number,\n  // Multiple sources\n  PropTypes.arrayOf(ImageURISourcePropType),\n]);\n\nmodule.exports = ImageSourcePropType;\n"]}