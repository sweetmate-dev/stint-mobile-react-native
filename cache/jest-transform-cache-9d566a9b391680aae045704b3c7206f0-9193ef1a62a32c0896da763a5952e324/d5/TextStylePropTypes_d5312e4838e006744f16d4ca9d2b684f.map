{"version":3,"sources":["TextStylePropTypes.js"],"names":["ColorPropType","require","ReactPropTypes","ViewStylePropTypes","TextStylePropTypes","color","fontFamily","string","fontSize","number","fontStyle","oneOf","fontWeight","fontVariant","arrayOf","textShadowOffset","shape","width","height","textShadowRadius","textShadowColor","letterSpacing","lineHeight","textAlign","textAlignVertical","includeFontPadding","bool","textDecorationLine","textDecorationStyle","textDecorationColor","textTransform","writingDirection","module","exports"],"mappings":";;;;;;;;;;AAUA,a;;AAEA,IAAMA,gBAAgBC,QAAQ,eAAR,CAAtB;AACA,IAAMC,iBAAiBD,QAAQ,YAAR,CAAvB;AACA,IAAME,qBAAqBF,QAAQ,oBAAR,CAA3B;;AAEA,IAAMG;AACDD,kBADC;;AAGJE,SAAOL,aAHH;AAIJM,cAAYJ,eAAeK,MAJvB;AAKJC,YAAUN,eAAeO,MALrB;AAMJC,aAAWR,eAAeS,KAAf,CAAqB,CAAC,QAAD,EAAW,QAAX,CAArB,CANP;;;;;;AAYJC,cAAYV,eAAeS,KAAf,CAAqB;AAC/B,UAD+B;AAE/B,QAF+B;AAG/B,OAH+B;AAI/B,OAJ+B;AAK/B,OAL+B;AAM/B,OAN+B;AAO/B,OAP+B;AAQ/B,OAR+B;AAS/B,OAT+B;AAU/B,OAV+B;AAW/B,OAX+B,CAArB,CAZR;;;;;AA4BJE,eAAaX,eAAeY,OAAf;AACXZ,iBAAeS,KAAf,CAAqB;AACnB,cADmB;AAEnB,iBAFmB;AAGnB,eAHmB;AAInB,gBAJmB;AAKnB,qBALmB,CAArB,CADW,CA5BT;;;AAqCJI,oBAAkBb,eAAec,KAAf,CAAqB;AACrCC,WAAOf,eAAeO,MADe;AAErCS,YAAQhB,eAAeO,MAFc,EAArB,CArCd;;AAyCJU,oBAAkBjB,eAAeO,MAzC7B;AA0CJW,mBAAiBpB,aA1Cb;;;;AA8CJqB,iBAAenB,eAAeO,MA9C1B;AA+CJa,cAAYpB,eAAeO,MA/CvB;;;;;AAoDJc,aAAWrB,eAAeS,KAAf,CAAqB;AAC9B,QAD8B;AAE9B,QAF8B;AAG9B,SAH8B;AAI9B,UAJ8B;AAK9B,WAL8B,CAArB,CApDP;;;;;AA8DJa,qBAAmBtB,eAAeS,KAAf,CAAqB;AACtC,QADsC;AAEtC,OAFsC;AAGtC,UAHsC;AAItC,UAJsC,CAArB,CA9Df;;;;;;;;AA0EJc,sBAAoBvB,eAAewB,IA1E/B;AA2EJC,sBAAoBzB,eAAeS,KAAf,CAAqB;AACvC,QADuC;AAEvC,aAFuC;AAGvC,gBAHuC;AAIvC,0BAJuC,CAArB,CA3EhB;;;;;AAoFJiB,uBAAqB1B,eAAeS,KAAf,CAAqB;AACxC,SADwC;AAExC,UAFwC;AAGxC,UAHwC;AAIxC,UAJwC,CAArB,CApFjB;;;;;AA6FJkB,uBAAqB7B,aA7FjB;;;;AAiGJ8B,iBAAe5B,eAAeS,KAAf,CAAqB;AAClC,QADkC;AAElC,cAFkC;AAGlC,aAHkC;AAIlC,aAJkC,CAArB,CAjGX;;;;;AA0GJoB,oBAAkB7B,eAAeS,KAAf,CAAqB,CAAC,MAAD,EAAqB,KAArB,EAA4B,KAA5B,CAArB,CA1Gd,GAAN;;;AA6GAqB,OAAOC,OAAP,GAAiB7B,kBAAjB","file":"TextStylePropTypes.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst ColorPropType = require('ColorPropType');\nconst ReactPropTypes = require('prop-types');\nconst ViewStylePropTypes = require('ViewStylePropTypes');\n\nconst TextStylePropTypes = {\n  ...ViewStylePropTypes,\n\n  color: ColorPropType,\n  fontFamily: ReactPropTypes.string,\n  fontSize: ReactPropTypes.number,\n  fontStyle: ReactPropTypes.oneOf(['normal', 'italic']),\n  /**\n   * Specifies font weight. The values 'normal' and 'bold' are supported for\n   * most fonts. Not all fonts have a variant for each of the numeric values,\n   * in that case the closest one is chosen.\n   */\n  fontWeight: ReactPropTypes.oneOf([\n    'normal' /*default*/,\n    'bold',\n    '100',\n    '200',\n    '300',\n    '400',\n    '500',\n    '600',\n    '700',\n    '800',\n    '900',\n  ]),\n  /**\n   * @platform ios\n   */\n  fontVariant: ReactPropTypes.arrayOf(\n    ReactPropTypes.oneOf([\n      'small-caps',\n      'oldstyle-nums',\n      'lining-nums',\n      'tabular-nums',\n      'proportional-nums',\n    ]),\n  ),\n  textShadowOffset: ReactPropTypes.shape({\n    width: ReactPropTypes.number,\n    height: ReactPropTypes.number,\n  }),\n  textShadowRadius: ReactPropTypes.number,\n  textShadowColor: ColorPropType,\n  /**\n   * @platform ios\n   */\n  letterSpacing: ReactPropTypes.number,\n  lineHeight: ReactPropTypes.number,\n  /**\n   * Specifies text alignment. The value 'justify' is only supported on iOS and\n   * fallbacks to `left` on Android.\n   */\n  textAlign: ReactPropTypes.oneOf([\n    'auto' /*default*/,\n    'left',\n    'right',\n    'center',\n    'justify',\n  ]),\n  /**\n   * @platform android\n   */\n  textAlignVertical: ReactPropTypes.oneOf([\n    'auto' /*default*/,\n    'top',\n    'bottom',\n    'center',\n  ]),\n  /**\n   * Set to `false` to remove extra font padding intended to make space for certain ascenders / descenders.\n   * With some fonts, this padding can make text look slightly misaligned when centered vertically.\n   * For best results also set `textAlignVertical` to `center`. Default is true.\n   * @platform android\n   */\n  includeFontPadding: ReactPropTypes.bool,\n  textDecorationLine: ReactPropTypes.oneOf([\n    'none' /*default*/,\n    'underline',\n    'line-through',\n    'underline line-through',\n  ]),\n  /**\n   * @platform ios\n   */\n  textDecorationStyle: ReactPropTypes.oneOf([\n    'solid' /*default*/,\n    'double',\n    'dotted',\n    'dashed',\n  ]),\n  /**\n   * @platform ios\n   */\n  textDecorationColor: ColorPropType,\n  /**\n   * @platform ios\n   */\n  textTransform: ReactPropTypes.oneOf([\n    'none' /*default*/,\n    'capitalize',\n    'uppercase',\n    'lowercase',\n  ]),\n  /**\n   * @platform ios\n   */\n  writingDirection: ReactPropTypes.oneOf(['auto' /*default*/, 'ltr', 'rtl']),\n};\n\nmodule.exports = TextStylePropTypes;\n"]}