e1d5703eff3b5db8a69b6aaed2819869
var
_ = {
  pick: require('lodash/pick') };


var toString = Object.prototype.toString;










exports.css = function (prop, val) {
  if (arguments.length === 2 ||

  toString.call(prop) === '[object Object]') {
    return require('../utils').domEach(this, function (idx, el) {
      setCss(el, prop, val, idx);
    });
  } else {
    return getCss(this[0], prop);
  }
};











function setCss(el, prop, val, idx) {
  if ('string' == typeof prop) {
    var styles = getCss(el);
    if (typeof val === 'function') {
      val = val.call(el, idx, styles[prop]);
    }

    if (val === '') {
      delete styles[prop];
    } else if (val != null) {
      styles[prop] = val;
    }

    el.attribs.style = stringify(styles);
  } else if ('object' == typeof prop) {
    Object.keys(prop).forEach(function (k) {
      setCss(el, k, prop[k]);
    });
  }
}









function getCss(el, prop) {
  var styles = parse(el.attribs.style);
  if (typeof prop === 'string') {
    return styles[prop];
  } else if (Array.isArray(prop)) {
    return _.pick(styles, prop);
  } else {
    return styles;
  }
}









function stringify(obj) {
  return Object.keys(obj || {}).
  reduce(function (str, prop) {
    return str += '' + (
    str ? ' ' : '') +
    prop +
    ': ' +
    obj[prop] +
    ';';
  }, '');
}









function parse(styles) {
  styles = (styles || '').trim();

  if (!styles) return {};

  return styles.
  split(';').
  reduce(function (obj, str) {
    var n = str.indexOf(':');

    if (n < 1 || n === str.length - 1) return obj;
    obj[str.slice(0, n).trim()] = str.slice(n + 1).trim();
    return obj;
  }, {});
}