7cc6865a5e6da54f52ce048797bce98b










'use strict';var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};

var ReactNativeStyleAttributes = require('ReactNativeStyleAttributes');

var ReactNativeViewAttributes = {};

ReactNativeViewAttributes.UIView = {
  pointerEvents: true,
  accessible: true,
  accessibilityActions: true,
  accessibilityLabel: true,
  accessibilityComponentType: true,
  accessibilityLiveRegion: true,
  accessibilityRole: true,
  accessibilityStates: true,
  accessibilityTraits: true,
  accessibilityHint: true,
  importantForAccessibility: true,
  nativeID: true,
  testID: true,
  renderToHardwareTextureAndroid: true,
  shouldRasterizeIOS: true,
  onLayout: true,
  onAccessibilityAction: true,
  onAccessibilityTap: true,
  onMagicTap: true,
  collapsable: true,
  needsOffscreenAlphaCompositing: true,
  style: ReactNativeStyleAttributes };


ReactNativeViewAttributes.RCTView = _extends({},
ReactNativeViewAttributes.UIView, {






  removeClippedSubviews: true });


module.exports = ReactNativeViewAttributes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlYWN0TmF0aXZlVmlld0F0dHJpYnV0ZXMuanMiXSwibmFtZXMiOlsiUmVhY3ROYXRpdmVTdHlsZUF0dHJpYnV0ZXMiLCJyZXF1aXJlIiwiUmVhY3ROYXRpdmVWaWV3QXR0cmlidXRlcyIsIlVJVmlldyIsInBvaW50ZXJFdmVudHMiLCJhY2Nlc3NpYmxlIiwiYWNjZXNzaWJpbGl0eUFjdGlvbnMiLCJhY2Nlc3NpYmlsaXR5TGFiZWwiLCJhY2Nlc3NpYmlsaXR5Q29tcG9uZW50VHlwZSIsImFjY2Vzc2liaWxpdHlMaXZlUmVnaW9uIiwiYWNjZXNzaWJpbGl0eVJvbGUiLCJhY2Nlc3NpYmlsaXR5U3RhdGVzIiwiYWNjZXNzaWJpbGl0eVRyYWl0cyIsImFjY2Vzc2liaWxpdHlIaW50IiwiaW1wb3J0YW50Rm9yQWNjZXNzaWJpbGl0eSIsIm5hdGl2ZUlEIiwidGVzdElEIiwicmVuZGVyVG9IYXJkd2FyZVRleHR1cmVBbmRyb2lkIiwic2hvdWxkUmFzdGVyaXplSU9TIiwib25MYXlvdXQiLCJvbkFjY2Vzc2liaWxpdHlBY3Rpb24iLCJvbkFjY2Vzc2liaWxpdHlUYXAiLCJvbk1hZ2ljVGFwIiwiY29sbGFwc2FibGUiLCJuZWVkc09mZnNjcmVlbkFscGhhQ29tcG9zaXRpbmciLCJzdHlsZSIsIlJDVFZpZXciLCJyZW1vdmVDbGlwcGVkU3Vidmlld3MiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBVUEsYTs7QUFFQSxJQUFNQSw2QkFBNkJDLFFBQVEsNEJBQVIsQ0FBbkM7O0FBRUEsSUFBTUMsNEJBQTRCLEVBQWxDOztBQUVBQSwwQkFBMEJDLE1BQTFCLEdBQW1DO0FBQ2pDQyxpQkFBZSxJQURrQjtBQUVqQ0MsY0FBWSxJQUZxQjtBQUdqQ0Msd0JBQXNCLElBSFc7QUFJakNDLHNCQUFvQixJQUphO0FBS2pDQyw4QkFBNEIsSUFMSztBQU1qQ0MsMkJBQXlCLElBTlE7QUFPakNDLHFCQUFtQixJQVBjO0FBUWpDQyx1QkFBcUIsSUFSWTtBQVNqQ0MsdUJBQXFCLElBVFk7QUFVakNDLHFCQUFtQixJQVZjO0FBV2pDQyw2QkFBMkIsSUFYTTtBQVlqQ0MsWUFBVSxJQVp1QjtBQWFqQ0MsVUFBUSxJQWJ5QjtBQWNqQ0Msa0NBQWdDLElBZEM7QUFlakNDLHNCQUFvQixJQWZhO0FBZ0JqQ0MsWUFBVSxJQWhCdUI7QUFpQmpDQyx5QkFBdUIsSUFqQlU7QUFrQmpDQyxzQkFBb0IsSUFsQmE7QUFtQmpDQyxjQUFZLElBbkJxQjtBQW9CakNDLGVBQWEsSUFwQm9CO0FBcUJqQ0Msa0NBQWdDLElBckJDO0FBc0JqQ0MsU0FBT3pCLDBCQXRCMEIsRUFBbkM7OztBQXlCQUUsMEJBQTBCd0IsT0FBMUI7QUFDS3hCLDBCQUEwQkMsTUFEL0I7Ozs7Ozs7QUFRRXdCLHlCQUF1QixJQVJ6Qjs7O0FBV0FDLE9BQU9DLE9BQVAsR0FBaUIzQix5QkFBakIiLCJmaWxlIjoiUmVhY3ROYXRpdmVWaWV3QXR0cmlidXRlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogQGZsb3cgc3RyaWN0XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBSZWFjdE5hdGl2ZVN0eWxlQXR0cmlidXRlcyA9IHJlcXVpcmUoJ1JlYWN0TmF0aXZlU3R5bGVBdHRyaWJ1dGVzJyk7XG5cbmNvbnN0IFJlYWN0TmF0aXZlVmlld0F0dHJpYnV0ZXMgPSB7fTtcblxuUmVhY3ROYXRpdmVWaWV3QXR0cmlidXRlcy5VSVZpZXcgPSB7XG4gIHBvaW50ZXJFdmVudHM6IHRydWUsXG4gIGFjY2Vzc2libGU6IHRydWUsXG4gIGFjY2Vzc2liaWxpdHlBY3Rpb25zOiB0cnVlLFxuICBhY2Nlc3NpYmlsaXR5TGFiZWw6IHRydWUsXG4gIGFjY2Vzc2liaWxpdHlDb21wb25lbnRUeXBlOiB0cnVlLFxuICBhY2Nlc3NpYmlsaXR5TGl2ZVJlZ2lvbjogdHJ1ZSxcbiAgYWNjZXNzaWJpbGl0eVJvbGU6IHRydWUsXG4gIGFjY2Vzc2liaWxpdHlTdGF0ZXM6IHRydWUsXG4gIGFjY2Vzc2liaWxpdHlUcmFpdHM6IHRydWUsXG4gIGFjY2Vzc2liaWxpdHlIaW50OiB0cnVlLFxuICBpbXBvcnRhbnRGb3JBY2Nlc3NpYmlsaXR5OiB0cnVlLFxuICBuYXRpdmVJRDogdHJ1ZSxcbiAgdGVzdElEOiB0cnVlLFxuICByZW5kZXJUb0hhcmR3YXJlVGV4dHVyZUFuZHJvaWQ6IHRydWUsXG4gIHNob3VsZFJhc3Rlcml6ZUlPUzogdHJ1ZSxcbiAgb25MYXlvdXQ6IHRydWUsXG4gIG9uQWNjZXNzaWJpbGl0eUFjdGlvbjogdHJ1ZSxcbiAgb25BY2Nlc3NpYmlsaXR5VGFwOiB0cnVlLFxuICBvbk1hZ2ljVGFwOiB0cnVlLFxuICBjb2xsYXBzYWJsZTogdHJ1ZSxcbiAgbmVlZHNPZmZzY3JlZW5BbHBoYUNvbXBvc2l0aW5nOiB0cnVlLFxuICBzdHlsZTogUmVhY3ROYXRpdmVTdHlsZUF0dHJpYnV0ZXMsXG59O1xuXG5SZWFjdE5hdGl2ZVZpZXdBdHRyaWJ1dGVzLlJDVFZpZXcgPSB7XG4gIC4uLlJlYWN0TmF0aXZlVmlld0F0dHJpYnV0ZXMuVUlWaWV3LFxuXG4gIC8vIFRoaXMgaXMgYSBzcGVjaWFsIHBlcmZvcm1hbmNlIHByb3BlcnR5IGV4cG9zZWQgYnkgUkNUVmlldyBhbmQgdXNlZnVsIGZvclxuICAvLyBzY3JvbGxpbmcgY29udGVudCB3aGVuIHRoZXJlIGFyZSBtYW55IHN1YnZpZXdzLCBtb3N0IG9mIHdoaWNoIGFyZSBvZmZzY3JlZW4uXG4gIC8vIEZvciB0aGlzIHByb3BlcnR5IHRvIGJlIGVmZmVjdGl2ZSwgaXQgbXVzdCBiZSBhcHBsaWVkIHRvIGEgdmlldyB0aGF0IGNvbnRhaW5zXG4gIC8vIG1hbnkgc3Vidmlld3MgdGhhdCBleHRlbmQgb3V0c2lkZSBpdHMgYm91bmQuIFRoZSBzdWJ2aWV3cyBtdXN0IGFsc28gaGF2ZVxuICAvLyBvdmVyZmxvdzogaGlkZGVuLCBhcyBzaG91bGQgdGhlIGNvbnRhaW5pbmcgdmlldyAob3Igb25lIG9mIGl0cyBzdXBlcnZpZXdzKS5cbiAgcmVtb3ZlQ2xpcHBlZFN1YnZpZXdzOiB0cnVlLFxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdE5hdGl2ZVZpZXdBdHRyaWJ1dGVzO1xuIl19