b60e1b804367057601a2bf21a00514c0
'use strict';





module.exports = require('./core.js');



var TRUE = valuePromise(true);
var FALSE = valuePromise(false);
var NULL = valuePromise(null);
var UNDEFINED = valuePromise(undefined);
var ZERO = valuePromise(0);
var EMPTYSTRING = valuePromise('');

function valuePromise(value) {
  var p = new (require('./core.js'))(require('./core.js')._61);
  p._65 = 1;
  p._55 = value;
  return p;
}
require('./core.js').resolve = function (value) {
  if (value instanceof require('./core.js')) return value;

  if (value === null) return NULL;
  if (value === undefined) return UNDEFINED;
  if (value === true) return TRUE;
  if (value === false) return FALSE;
  if (value === 0) return ZERO;
  if (value === '') return EMPTYSTRING;

  if (typeof value === 'object' || typeof value === 'function') {
    try {
      var then = value.then;
      if (typeof then === 'function') {
        return new (require('./core.js'))(then.bind(value));
      }
    } catch (ex) {
      return new (require('./core.js'))(function (resolve, reject) {
        reject(ex);
      });
    }
  }
  return valuePromise(value);
};

require('./core.js').all = function (arr) {
  var args = Array.prototype.slice.call(arr);

  return new (require('./core.js'))(function (resolve, reject) {
    if (args.length === 0) return resolve([]);
    var remaining = args.length;
    function res(i, val) {
      if (val && (typeof val === 'object' || typeof val === 'function')) {
        if (val instanceof require('./core.js') && val.then === require('./core.js').prototype.then) {
          while (val._65 === 3) {
            val = val._55;
          }
          if (val._65 === 1) return res(i, val._55);
          if (val._65 === 2) reject(val._55);
          val.then(function (val) {
            res(i, val);
          }, reject);
          return;
        } else {
          var then = val.then;
          if (typeof then === 'function') {
            var p = new (require('./core.js'))(then.bind(val));
            p.then(function (val) {
              res(i, val);
            }, reject);
            return;
          }
        }
      }
      args[i] = val;
      if (--remaining === 0) {
        resolve(args);
      }
    }
    for (var i = 0; i < args.length; i++) {
      res(i, args[i]);
    }
  });
};

require('./core.js').reject = function (value) {
  return new (require('./core.js'))(function (resolve, reject) {
    reject(value);
  });
};

require('./core.js').race = function (values) {
  return new (require('./core.js'))(function (resolve, reject) {
    values.forEach(function (value) {
      require('./core.js').resolve(value).then(resolve, reject);
    });
  });
};



require('./core.js').prototype['catch'] = function (onRejected) {
  return this.then(null, onRejected);
};