{"version":3,"sources":["AnimatedWithChildren.js"],"names":["AnimatedNode","require","NativeAnimatedHelper","AnimatedWithChildren","_children","__isNative","child","__makeNative","API","connectAnimatedNodes","__getNativeTag","length","__attach","push","index","indexOf","console","warn","disconnectAnimatedNodes","splice","__detach","module","exports"],"mappings":";;;;;;;;;AASA,a;;AAEA,IAAMA,eAAeC,QAAQ,gBAAR,CAArB;AACA,IAAMC,uBAAuBD,QAAQ,yBAAR,CAA7B,C;;AAEME,oB;;;AAGJ,kCAAc;;AAEZ,UAAKC,SAAL,GAAiB,EAAjB,CAFY;AAGb,G;;AAEc;AACb,UAAI,CAAC,KAAKC,UAAV,EAAsB;AACpB,aAAKA,UAAL,GAAkB,IAAlB;AACA,6BAAoB,KAAKD,SAAzB,gKAAoC,wJAAzBE,KAAyB;AAClCA,gBAAMC,YAAN;AACAL,+BAAqBM,GAArB,CAAyBC,oBAAzB;AACE,eAAKC,cAAL,EADF;AAEEJ,gBAAMI,cAAN,EAFF;;AAID;AACF;AACF,K;;AAEUJ,S,EAA2B;AACpC,UAAI,KAAKF,SAAL,CAAeO,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,aAAKC,QAAL;AACD;AACD,WAAKR,SAAL,CAAeS,IAAf,CAAoBP,KAApB;AACA,UAAI,KAAKD,UAAT,EAAqB;;AAEnBC,cAAMC,YAAN;AACAL,6BAAqBM,GAArB,CAAyBC,oBAAzB;AACE,aAAKC,cAAL,EADF;AAEEJ,cAAMI,cAAN,EAFF;;AAID;AACF,K;;AAEaJ,S,EAA2B;AACvC,UAAMQ,QAAQ,KAAKV,SAAL,CAAeW,OAAf,CAAuBT,KAAvB,CAAd;AACA,UAAIQ,UAAU,CAAC,CAAf,EAAkB;AAChBE,gBAAQC,IAAR,CAAa,6CAAb;AACA;AACD;AACD,UAAI,KAAKZ,UAAL,IAAmBC,MAAMD,UAA7B,EAAyC;AACvCH,6BAAqBM,GAArB,CAAyBU,uBAAzB;AACE,aAAKR,cAAL,EADF;AAEEJ,cAAMI,cAAN,EAFF;;AAID;AACD,WAAKN,SAAL,CAAee,MAAf,CAAsBL,KAAtB,EAA6B,CAA7B;AACA,UAAI,KAAKV,SAAL,CAAeO,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,aAAKS,QAAL;AACD;AACF,K;;AAEoC;AACnC,aAAO,KAAKhB,SAAZ;AACD,K,mCAxDgCJ,Y;;;AA2DnCqB,OAAOC,OAAP,GAAiBnB,oBAAjB","file":"AnimatedWithChildren.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n'use strict';\n\nconst AnimatedNode = require('./AnimatedNode');\nconst NativeAnimatedHelper = require('../NativeAnimatedHelper');\n\nclass AnimatedWithChildren extends AnimatedNode {\n  _children: Array<AnimatedNode>;\n\n  constructor() {\n    super();\n    this._children = [];\n  }\n\n  __makeNative() {\n    if (!this.__isNative) {\n      this.__isNative = true;\n      for (const child of this._children) {\n        child.__makeNative();\n        NativeAnimatedHelper.API.connectAnimatedNodes(\n          this.__getNativeTag(),\n          child.__getNativeTag(),\n        );\n      }\n    }\n  }\n\n  __addChild(child: AnimatedNode): void {\n    if (this._children.length === 0) {\n      this.__attach();\n    }\n    this._children.push(child);\n    if (this.__isNative) {\n      // Only accept \"native\" animated nodes as children\n      child.__makeNative();\n      NativeAnimatedHelper.API.connectAnimatedNodes(\n        this.__getNativeTag(),\n        child.__getNativeTag(),\n      );\n    }\n  }\n\n  __removeChild(child: AnimatedNode): void {\n    const index = this._children.indexOf(child);\n    if (index === -1) {\n      console.warn(\"Trying to remove a child that doesn't exist\");\n      return;\n    }\n    if (this.__isNative && child.__isNative) {\n      NativeAnimatedHelper.API.disconnectAnimatedNodes(\n        this.__getNativeTag(),\n        child.__getNativeTag(),\n      );\n    }\n    this._children.splice(index, 1);\n    if (this._children.length === 0) {\n      this.__detach();\n    }\n  }\n\n  __getChildren(): Array<AnimatedNode> {\n    return this._children;\n  }\n}\n\nmodule.exports = AnimatedWithChildren;\n"]}