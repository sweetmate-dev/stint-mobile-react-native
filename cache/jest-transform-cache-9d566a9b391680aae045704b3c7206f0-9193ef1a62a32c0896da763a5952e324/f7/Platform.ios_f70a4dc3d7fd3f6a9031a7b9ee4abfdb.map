{"version":3,"sources":["Platform.ios.js"],"names":["NativeModules","require","Platform","OS","Version","constants","PlatformConstants","osVersion","isPad","interfaceIdiom","isTVOS","isTV","isTesting","select","obj","ios","default","module","exports"],"mappings":";;;;;;;;;;AAUA;;AAEA,IAAMA,gBAAgBC,QAAQ,eAAR,CAAtB;;AAEA,IAAMC,WAAW;AACfC,MAAI,KADW;AAEf,MAAIC,OAAJ,GAAc;AACZ,QAAMC,YAAYL,cAAcM,iBAAhC;AACA,WAAOD,aAAaA,UAAUE,SAA9B;AACD,GALc;AAMf,MAAIC,KAAJ,GAAY;AACV,QAAMH,YAAYL,cAAcM,iBAAhC;AACA,WAAOD,YAAYA,UAAUI,cAAV,KAA6B,KAAzC,GAAiD,KAAxD;AACD,GATc;;;;AAaf,MAAIC,MAAJ,GAAa;AACX,WAAOR,SAASS,IAAhB;AACD,GAfc;AAgBf,MAAIA,IAAJ,GAAW;AACT,QAAMN,YAAYL,cAAcM,iBAAhC;AACA,WAAOD,YAAYA,UAAUI,cAAV,KAA6B,IAAzC,GAAgD,KAAvD;AACD,GAnBc;AAoBf,MAAIG,SAAJ,GAAyB;AACvB,QAAMP,YAAYL,cAAcM,iBAAhC;AACA,WAAOD,aAAaA,UAAUO,SAA9B;AACD,GAvBc;AAwBfC,UAAQ,gBAACC,GAAD,UAAkB,SAASA,GAAT,GAAeA,IAAIC,GAAnB,GAAyBD,IAAIE,OAA/C,EAxBO,EAAjB;;;AA2BAC,OAAOC,OAAP,GAAiBhB,QAAjB","file":"Platform.ios.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst NativeModules = require('NativeModules');\n\nconst Platform = {\n  OS: 'ios',\n  get Version() {\n    const constants = NativeModules.PlatformConstants;\n    return constants && constants.osVersion;\n  },\n  get isPad() {\n    const constants = NativeModules.PlatformConstants;\n    return constants ? constants.interfaceIdiom === 'pad' : false;\n  },\n  /**\n   * Deprecated, use `isTV` instead.\n   */\n  get isTVOS() {\n    return Platform.isTV;\n  },\n  get isTV() {\n    const constants = NativeModules.PlatformConstants;\n    return constants ? constants.interfaceIdiom === 'tv' : false;\n  },\n  get isTesting(): boolean {\n    const constants = NativeModules.PlatformConstants;\n    return constants && constants.isTesting;\n  },\n  select: (obj: Object) => ('ios' in obj ? obj.ios : obj.default),\n};\n\nmodule.exports = Platform;\n"]}